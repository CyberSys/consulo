#
# Copyright 2013-2022 consulo.io
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

wrapping.and.braces=Wrapping and Braces

wrapping.keep.when.reformatting=Keep when reformatting
wrapping.keep.line.breaks=Line breaks
wrapping.keep.comment.at.first.column=Comment at first column
wrapping.keep.simple.classes.in.one.line=Simple classes in one line
wrapping.keep.simple.methods.in.one.line=Simple methods in one line
wrapping.keep.simple.lambdas.in.one.line=Simple lambdas in one line
wrapping.keep.multiple.expressions.in.one.line=Multiple expressions in one line
wrapping.keep.simple.blocks.in.one.line=Simple blocks in one line

wrapping.do.not.wrap=Do not wrap
wrapping.wrap.if.long=Wrap if long
wrapping.chop.down.if.long=Chop down if long
wrapping.wrap.always=Wrap always

wrapping.force.braces.do.not.force=Do not force
wrapping.force.braces.when.multiline=When multiline
wrapping.force.braces.always=Always

wrapping.brace.placement=Braces placement
wrapping.brace.placement.class.declaration=In class declaration
wrapping.brace.placement.method.declaration=In method declaration
wrapping.brace.placement.other=Other
wrapping.brace.placement.end.of.line=End of line
wrapping.brace.placement.next.line.if.wrapped=Next line if wrapped
wrapping.brace.placement.next.line=Next line
wrapping.brace.placement.next.line.shifted=Next line shifted
wrapping.brace.placement.next.line.each.shifted=Next line, each shifted

wrapping.align.when.multiline=Align when multiline
wrapping.align.parenthesised.when.multiline=Align parenthesised when multiline
wrapping.align.in.columns=Align in columns

wrapping.else.on.new.line='else' on new line
wrapping.while.on.new.line='while' on new line
wrapping.catch.on.new.line='catch' on new line
wrapping.finally.on.new.line='finally' on new line
wrapping.method.parentheses=Method parentheses
wrapping.special.else.if.braces.treatment=Special 'else if' treatment
wrapping.indent.case.from.switch=Indent 'case' branches
wrapping.force.braces=Force braces

wrapping.chained.method.call.first.on.new.line=Wrap first call
wrapping.method.parameters=Method declaration parameters
wrapping.method.arguments=Method call arguments
wrapping.chained.method.calls=Chained method calls
wrapping.for.statement='for()' statement
wrapping.if.statement='if()' statement
wrapping.while.statement='while()' statement
wrapping.dowhile.statement='do ... while()' statement
wrapping.switch.statement='switch' statement
wrapping.try.statement='try' statement
wrapping.try.resources='try-with-resources'
wrapping.binary.operations=Binary expressions
wrapping.extends.implements.list=Extends/implements list
wrapping.extends.implements.keyword=Extends/implements keyword
wrapping.throws.list=Throws list
wrapping.throws.keyword=Throws keyword
wrapping.align.throws.keyword=Align 'throws' to method start
wrapping.ternary.operation=Ternary operation
wrapping.assignment.variables.groups=Fields/variables groups
wrapping.assignment.statement=Assignment statement
wrapping.array.initializer=Array initializer
wrapping.modifier.list=Modifier list
wrapping.assert.statement=Assert statement
wrapping.new.line.after.lpar=New line after '('
wrapping.rpar.on.new.line=Place ')' on new line
wrapping.take.priority.over.call.chain.wrapping=Take priority over call chain wrapping
wrapping.operation.sign.on.next.line=Operation sign on next line
wrapping.assignment.sign.on.next.line=Assignment sign on next line
wrapping.quest.and.colon.signs.on.next.line='?' and ':' signs on next line
wrapping.new.line.after.lbrace=New line after '{'
wrapping.rbrace.on.new.line=Place '}' on new line
wrapping.after.modifier.list=Wrap after modifier list
wrapping.colon.signs.on.next.line=':' signs on next line
wrapping.classes.annotation=Class annotations
wrapping.methods.annotation=Method annotations
wrapping.fields.annotation=Field annotations
wrapping.parameters.annotation=Parameter annotations
wrapping.local.variables.annotation=Local variable annotations
wrapping.enum.constants=Enum constants
wrapping.long.lines=Ensure right margin is not exceeded
wrapping.comments=Comments
wrapping.comments.wrap.at.right.margin=Wrap at right margin

wrapping.align.fields.in.columns=Align fields in columns
wrapping.align.variables.in.columns=Align variables in columns
wrapping.align.simple.methods.in.columns=Align simple methods in columns

group.spaces.in.type.arguments.block=Type Arguments
group.spaces.in.type.parameters.block=Type Parameters

checkbox.align.multiline.chained.methods=Chained methods
checkbox.align.multiline.method.parameters=Method parameters
checkbox.align.multiline.call.arguments=Call arguments
checkbox.align.multiline.extends.list=Extends list
checkbox.align.multiline.throws.list=Throws list
checkbox.align.multiline.fields.groups=Field groups
checkbox.align.multiline.parenthesized.expression=Parenthesized expression
checkbox.align.multiline.binary.operation=Binary operation
checkbox.align.multiline.ternary.operation=Ternary operation
checkbox.align.multiline.assignments=Assignments
checkbox.align.multiline.for.statement=For statement
checkbox.align.multiline.array.initializer=Array initializer
title.place.on.new.line=Place on New Line
checkbox.keep.when.reformatting.control.statement.in.one.line=Control statement in one line
title.braces.placement=Braces Placement
combobox.force.braces.if=if ():
combobox.force.braces.for=for ():
combobox.force.braces.while=while ():
combobox.force.braces.do.while=do ... while():
label.loading.page.please.wait=Loading...
button.save.as=Save As...
button.delete=Delete
editbox.scheme.name=Scheme\:
html.project.uses.own.code.style=<html><body>The current project is configured to use its own code style.<br>Changes made to global code style settings will not affect formatting in the current project.<br>See Project Settings | Code Style.<br>Press \\&quot;Edit Global Settings\\&quot; button below if you still want to edit global settings.</body></html>
title.edit.global.settings=Edit &Global Settings
title.settings=Settings
title.global.code.style=Global\nCode Style
title.save.code.style.scheme.as=Save Code Style Scheme As
group.spaces.around.operators=Around Operators
group.spaces.before.parentheses=Before Parentheses
group.spaces.before.left.brace=Before Left Brace
group.spaces.after.right.brace=Before Keywords
group.spaces.within=Within
group.spaces.in.ternary.operator=In Ternary Operator (?:)
group.spaces.in.type.arguments=Within Type Arguments
group.spaces.other=Other
checkbox.spaces.method.call.parentheses=Method call parentheses
checkbox.spaces.method.declaration.parentheses=Method declaration parentheses
checkbox.spaces.if.parentheses='if' parentheses
checkbox.spaces.while.parentheses='while' parentheses
checkbox.spaces.for.parentheses='for' parentheses
checkbox.spaces.try.parentheses='try' parentheses
checkbox.spaces.catch.parentheses='catch' parentheses
checkbox.spaces.switch.parentheses='switch' parentheses
checkbox.spaces.synchronized.parentheses='synchronized' parentheses
checkbox.spaces.annotation.parameters=Annotation parameters
checkbox.spaces.assignment.operators=Assignment operators (=, +=, ...)
checkbox.spaces.logical.operators=Logical operators (\\&\\&, ||)
checkbox.spaces.equality.operators=Equality operators (==, !=)
checkbox.spaces.relational.operators=Relational operators (<, >, <=, >=)
checkbox.spaces.bitwise.operators=Bitwise operators (\\&, |, ^)
checkbox.spaces.additive.operators=Additive operators (+, -)
checkbox.spaces.multiplicative.operators=Multiplicative operators (*, /, %)
checkbox.spaces.shift.operators=Shift operators (<<, >>, >>>)
checkbox.spaces.around.unary.operator=Unary operators (!, -, +, ++, --)
checkbox.spaces.class.left.brace=Class left brace
checkbox.spaces.method.left.brace=Method left brace
checkbox.spaces.if.left.brace='if' left brace
checkbox.spaces.else.left.brace='else' left brace
checkbox.spaces.while.left.brace='while' left brace
checkbox.spaces.for.left.brace='for' left brace
checkbox.spaces.do.left.brace='do' left brace
checkbox.spaces.switch.left.brace='switch' left brace
checkbox.spaces.try.left.brace='try' left brace
checkbox.spaces.catch.left.brace='catch' left brace
checkbox.spaces.finally.left.brace='finally' left brace
checkbox.spaces.synchronized.left.brace='synchronized' left brace
checkbox.spaces.array.initializer.left.brace=Array initializer left brace
checkbox.spaces.annotation.array.initializer.left.brace=Annotation array initializer left brace
checkbox.spaces.else.keyword='else' keyword
checkbox.spaces.while.keyword='while' keyword
checkbox.spaces.catch.keyword='catch' keyword
checkbox.spaces.finally.keyword='finally' keyword
checkbox.spaces.within.brackets=Brackets
checkbox.spaces.within.braces=Code braces
checkbox.spaces.within.array.initializer.braces=Array initializer braces
checkbox.spaces.within.parentheses=Grouping parentheses
checkbox.spaces.checkbox.spaces.method.call.parentheses=Method call parentheses
checkbox.spaces.checkbox.spaces.empty.method.call.parentheses=Empty method call parentheses
checkbox.spaces.checkbox.spaces.method.declaration.parentheses=Method declaration parentheses
checkbox.spaces.checkbox.spaces.empty.method.declaration.parentheses=Empty method declaration parentheses
checkbox.spaces.type.cast.parentheses=Type cast parentheses
checkbox.spaces.annotation.parentheses=Annotation parentheses
checkbox.spaces.before.question=Before '?'
checkbox.spaces.after.question=After '?'
checkbox.spaces.before.colon=Before ':'
checkbox.spaces.after.colon=After ':'
checkbox.spaces.after.colon.in.label.declaration=After ':' in label declaration
checkbox.spaces.after.comma=After comma
checkbox.spaces.before.comma=Before comma
checkbox.spaces.after.semicolon=After semicolon
checkbox.spaces.before.semicolon=Before semicolon
checkbox.spaces.after.type.cast=After type cast

wrapping.wrap.on.typing=Wrap on typing
wrapping.wrap.on.typing.no.wrap=No
wrapping.wrap.on.typing.wrap=Yes
wrapping.wrap.on.typing.default=Default

title.blank.lines=Blank Lines
title.keep.blank.lines=Keep Maximum Blank Lines
title.minimum.blank.lines=Minimum Blank Lines


arrangement.title.settings.tab=Arrangement
arrangement.text.empty.rule=<empty rule>
arrangement.text.type=Type
arrangement.text.modifier=Modifier
arrangement.text.name=Name
arrangement.order.name=Order
arrangement.action.rule.add.text=Add rule
arrangement.action.rule.add.description=Add new arrangement rule
arrangement.action.rule.remove.text=Remove rule(s)
arrangement.action.rule.remove.description=Remove selected arrangement rule(s)
arrangement.action.rule.edit.text=Edit rule
arrangement.action.rule.edit.description=Edit selected arrangement rule
arrangement.action.rule.move.up.text=Move up
arrangement.action.rule.move.up.description=Move selected arrangement rule(s) up
arrangement.action.rule.move.down.text=Move down
arrangement.action.rule.move.down.description=Move selected arrangement rule(s) down
arrangement.settings.section.groups=Grouping rules
arrangement.settings.section.match=Matching rules
arrangement.settings.groups.property.field=Group property field with corresponding getter/setter
arrangement.settings.groups.dependent.methods=Keep dependent methods together
arrangement.settings.groups.overridden.methods=Keep overridden methods together
arrangement.settings.groups.getters.and.setters.together=Keep getters and setters together
arrangement.settings.order.type.keep=keep order
arrangement.settings.order.type.by.name=order by name
arrangement.settings.order.type.depth.first=depth-first order
arrangement.settings.order.type.breadth.first=breadth-first order
arrangement.settings.text.general.type=Type:
arrangement.settings.text.general.modifier=Modifier:
arrangement.settings.text.general.name=Name:
arrangement.settings.text.general.text=Text:
arrangement.settings.text.general.order=Order:
arrangement.settings.text.general.xml.namespace=Namespace:
arrangement.settings.text.entry.type.xml.tag=tag
arrangement.settings.text.entry.type.xml.attribute=attribute

editbox.indent.tab.size=Tab size:
editbox.indent.indent=Indent:
editbox.indent.continuation.indent=Continuation indent:

indent.status.bar.tab=Tab
indent.status.bar.spaces={0, choice, 1#{0} space|2#{0} spaces}
indent.status.bar.indent.tooltip=Indent:

checkbox.indent.use.tab.character=Use tab character
