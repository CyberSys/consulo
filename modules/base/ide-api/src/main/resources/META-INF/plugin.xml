<!--
  - Copyright 2013-2022 consulo.io
  -
  - Licensed under the Apache License, Version 2.0 (the "License");
  - you may not use this file except in compliance with the License.
  - You may obtain a copy of the License at
  -
  - http://www.apache.org/licenses/LICENSE-2.0
  -
  - Unless required by applicable law or agreed to in writing, software
  - distributed under the License is distributed on an "AS IS" BASIS,
  - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  - See the License for the specific language governing permissions and
  - limitations under the License.
  -->
<consulo-plugin>
  <id>consulo</id>
  <name>Consulo</name>
  <localize>consulo.platform.base.ActionLocalize</localize>

  <import path="/META-INF/Actions.xml"/>
  <import path="/META-INF/Diff.xml"/>
  <import path="/META-INF/ProjectComponents.xml"/>
  <import path="/META-INF/ApplicationComponents.xml"/>
  <import path="/META-INF/ExternalSystems.xml"/>
  <import path="/META-INF/RemoteServers.xml"/>
  <import path="/META-INF/Bundled.xml"/>
  <import path="/META-INF/BackgroundTaskByVfsChange.xml"/>
  <import path="/META-INF/Compiler.xml"/>
  <import path="/META-INF/EarlyAccessProgram.xml"/>
  <import path="/META-INF/Graph.xml"/>
  <import path="/META-INF/Copyright.xml"/>
  <import path="/META-INF/VcsLog.xml"/>
  <import path="/META-INF/DVcs.xml"/>
  <import path="/META-INF/PostfixTemplates.xml"/>
  <import path="/META-INF/Coverage.xml"/>
  <import path="/META-INF/XDebugger.xml"/>
  <import path="/META-INF/Configurables.xml"/>
  <import path="/META-INF/Scratch.xml"/>
  <import path="/META-INF/ExternalStorage.xml"/>
  <import path="/META-INF/BuildInServer.xml"/>
  <import path="/META-INF/TipsOfTheDay.xml"/>
  <import path="/META-INF/Injecting.xml"/>
  <import path="/META-INF/Task.xml"/>

  <extensionPoints>
    <extensionPoint name="listOfElements" beanClass="consulo.component.extension.ListOfElementsEP"/>
    <extensionPoint name="addTo.listOfElements" beanClass="consulo.component.extension.AddToElementEP"/>
    <extensionPoint name="search.topHitProvider" interface="consulo.ide.impl.idea.ide.SearchTopHitProvider"/>
    <extensionPoint name="search.optionContributor" interface="consulo.ide.impl.idea.ide.ui.search.SearchableOptionContributor"/>
    <extensionPoint name="referenceInjector" interface="consulo.language.inject.ReferenceInjector"/>
    <extensionPoint name="customPropertyScopeProvider" interface="consulo.ide.impl.psi.impl.search.CustomPropertyScopeProvider"/>
    <extensionPoint name="contentFolderTypeProvider" interface="consulo.content.ContentFolderTypeProvider"/>
    <extensionPoint name="contentFolderPropertyProvider" interface="consulo.module.content.layer.ContentFolderPropertyProvider"/>
    <extensionPoint name="contentFolderSupportPatcher" interface="consulo.module.content.layer.ContentFolderSupportPatcher"/>
    <extensionPoint name="createFromTemplateActionModuleResolver" interface="consulo.ide.impl.idea.ide.actions.CreateFileFromTemplateAction$ModuleResolver"/>

    <extensionPoint name="applicationService" beanClass="consulo.component.internal.ServiceDescriptor"/>
    <extensionPoint name="projectService" beanClass="consulo.component.internal.ServiceDescriptor" area="PROJECT"/>
    <extensionPoint name="moduleService" beanClass="consulo.component.internal.ServiceDescriptor" area="MODULE"/>

    <extensionPoint name="extensionExtender" beanClass="consulo.component.extension.KeyedLazyInstanceEP">
      <with attribute="implementationClass" implements="consulo.component.extension.ExtensionExtender"/>
    </extensionPoint>

    <extensionPoint name="dateTimeFormatter" beanClass="consulo.ide.impl.idea.util.text.DateTimeFormatterBean"/>

    <extensionPoint name="editorFactoryDocumentListener" interface="consulo.document.event.DocumentListener"/>
    <extensionPoint name="editorFactoryMouseListener" interface="consulo.codeEditor.event.EditorMouseListener"/>
    <extensionPoint name="editorFactoryMouseMotionListener" interface="consulo.codeEditor.event.EditorMouseMotionListener"/>
    <extensionPoint name="editorFactoryListener" interface="consulo.codeEditor.event.EditorFactoryListener"/>

    <extensionPoint name="vfs.asyncListener" interface="consulo.virtualFileSystem.event.AsyncFileListener"/>

    <extensionPoint name="generatedSourcesFilter" interface="consulo.project.content.GeneratedSourcesFilter"/>
    <extensionPoint name="testSourcesFilter" interface="consulo.project.content.TestSourcesFilter"/>
    <extensionPoint name="defaultLibraryRootDetector" interface="consulo.content.library.ui.RootDetector"/>

    <extensionPoint name="postStartupActivity" interface="consulo.project.startup.StartupActivity"/>
    <extensionPoint name="backgroundPostStartupActivity" interface="consulo.project.startup.StartupActivity$Background"/>
    <extensionPoint name="psiReferenceLocalFixProvider" interface="consulo.language.editor.inspection.PsiReferenceLocalQuickFixProvider" area="PROJECT"/>

    <extensionPoint name="projectConfigurable"
                    beanClass="consulo.ide.impl.options.ProjectConfigurableEP"
                    area="PROJECT">
      <with attribute="instanceClass" implements="consulo.configurable.Configurable"/>
    </extensionPoint>

    <extensionPoint name="applicationConfigurable"
                    beanClass="consulo.ide.impl.options.ApplicationConfigurableEP">
      <with attribute="instanceClass" implements="consulo.configurable.Configurable"/>
    </extensionPoint>

    <extensionPoint name="generalCodeStyleOptionsProvider" beanClass="consulo.ide.impl.idea.application.options.GeneralCodeStyleOptionsProviderEP">
      <with attribute="instance" implements="consulo.ide.impl.idea.application.options.GeneralCodeStyleOptionsProvider"/>
    </extensionPoint>

    <extensionPoint name="module.workingDirectoryProvider" interface="consulo.execution.WorkingDirectoryProvider"/>

    <extensionPoint name="selectInTarget"
                    interface="consulo.ide.impl.idea.ide.SelectInTarget"
                    area="PROJECT"/>

    <extensionPoint name="fileEditorProvider"
                    interface="consulo.fileEditor.FileEditorProvider"/>

    <extensionPoint name="fileTypeFactory"
                    interface="consulo.virtualFileSystem.fileType.FileTypeFactory"/>

    <extensionPoint name="fileTypeOverrider" interface="consulo.ide.impl.idea.openapi.fileTypes.impl.FileTypeOverrider"/>

    <extensionPoint name="fileType"
                    beanClass="consulo.ide.impl.idea.openapi.fileTypes.impl.FileTypeBean"/>

    <extensionPoint name="virtualFileSystem" interface="consulo.virtualFileSystem.VirtualFileSystem"/>

    <extensionPoint name="keymapExtension"
                    interface="consulo.ide.impl.idea.openapi.keymap.KeymapExtension"/>

    <extensionPoint name="getDataRule" interface="consulo.dataContext.GetDataRule"/>

    <extensionPoint name="dataValidator" interface="consulo.ide.impl.idea.ide.impl.DataValidator"/>

    <extensionPoint name="cutElementMarker"
                    interface="consulo.ide.impl.idea.openapi.ide.CutElementMarker"/>

    <extensionPoint name="schemeOwner" beanClass="consulo.ide.impl.idea.openapi.components.ServiceBean"/>

    <extensionPoint name="ideRootPaneNorth" interface="consulo.project.ui.wm.IdeRootPaneNorthExtension" area="PROJECT"/>

    <extensionPoint name="handleTypeFactory" interface="consulo.ide.impl.idea.openapi.vcs.readOnlyHandler.HandleTypeFactory" area="PROJECT"/>
    <extensionPoint name="customFileTypeFactory" interface="consulo.ide.impl.idea.openapi.fileTypes.ex.CustomFileTypeFactory"/>
    <extensionPoint name="fileTypeRegistrator" interface="consulo.ide.impl.idea.ide.highlighter.FileTypeRegistrator"/>

    <extensionPoint name="undoProvider" interface="consulo.ide.impl.idea.openapi.command.impl.UndoProvider"/>
    <extensionPoint name="projectUndoProvider" interface="consulo.ide.impl.idea.openapi.command.impl.UndoProvider" area="PROJECT"/>

    <extensionPoint name="syntaxHighlighter"
                    beanClass="consulo.component.extension.KeyedFactoryEPBean">
      <with attribute="implementationClass" implements="consulo.language.editor.highlight.SyntaxHighlighter"/>
    </extensionPoint>

    <extensionPoint name="lang.syntaxHighlighterFactory" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.highlight.SyntaxHighlighterFactory"/>
    </extensionPoint>

    <extensionPoint name="lang.elementIcon" beanClass="consulo.language.LanguageElementIcon"/>

    <extensionPoint name="gutterMarkPreprocessor" interface="consulo.ide.impl.idea.openapi.editor.GutterMarkPreprocessor"/>

    <extensionPoint name="breadcrumbsInfoProvider" interface="consulo.ide.impl.idea.ui.breadcrumbs.BreadcrumbsProvider"/>
    <extensionPoint name="breadcrumbsPresentationProvider" interface="consulo.ide.impl.idea.ui.breadcrumbs.BreadcrumbsPresentationProvider"/>
    <extensionPoint name="fileBreadcrumbsCollector" interface="consulo.ide.impl.idea.codeInsight.breadcrumbs.FileBreadcrumbsCollector" area="PROJECT"/>

    <extensionPoint name="codeInsight.linkHandler"
                    beanClass="consulo.ide.impl.idea.codeInsight.hint.TooltipLinkHandlerEP">
      <with attribute="handlerClass" implements="consulo.ide.impl.idea.codeInsight.highlighting.TooltipLinkHandler"/>
    </extensionPoint>

    <extensionPoint name="codeInsight.parameterNameHints" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.ide.impl.idea.codeInsight.hints.InlayParameterHintsProvider"/>
    </extensionPoint>

    <extensionPoint name="applicationLoadListener" interface="consulo.application.event.ApplicationLoadListener"/>

    <extensionPoint name="editorTabTitleProvider" interface="consulo.fileEditor.EditorTabTitleProvider"/>
    <extensionPoint name="editorTabColorProvider" interface="consulo.fileEditor.EditorTabColorProvider"/>
    <extensionPoint name="editorFileSwapper" interface="consulo.ide.impl.idea.openapi.fileEditor.impl.EditorFileSwapper"/>

    <extensionPoint name="http.localFileFinder" interface="consulo.ide.impl.idea.openapi.fileEditor.impl.http.LocalFileFinder"/>
    <extensionPoint name="http.fileEditorActionProvider"
                    interface="consulo.ide.impl.idea.openapi.fileEditor.impl.http.RemoteFileEditorActionProvider"/>

    <extensionPoint name="filetype.decompiler" beanClass="consulo.virtualFileSystem.extension.FileTypeExtensionPoint">
      <with attribute="implementationClass" implements="consulo.virtualFileSystem.BinaryFileDecompiler"/>
    </extensionPoint>

    <extensionPoint name="editorActionHandler" beanClass="consulo.codeEditor.impl.action.EditorActionHandlerBean">
      <with attribute="implementationClass" implements="consulo.codeEditor.action.EditorActionHandler"/>
    </extensionPoint>

    <extensionPoint name="editorTypedHandler" beanClass="consulo.codeEditor.action.EditorTypedHandlerBean">
      <with attribute="implementationClass" implements="consulo.codeEditor.action.TypedActionHandler"/>
    </extensionPoint>


    <extensionPoint name="customFileDropHandler" area="PROJECT" interface="consulo.ide.impl.idea.openapi.editor.CustomFileDropHandler"/>

    <extensionPoint name="toolWindow" beanClass="consulo.ide.impl.idea.openapi.wm.ToolWindowEP">
      <with attribute="factoryClass" implements="consulo.project.ui.wm.ToolWindowFactory"/>
      <with attribute="conditionClass" implements="consulo.util.lang.function.Condition"/>
    </extensionPoint>

    <extensionPoint name="productivityFeaturesProvider" interface="consulo.ide.impl.idea.featureStatistics.ProductivityFeaturesProvider"/>

    <extensionPoint name="tipAndTrick" beanClass="consulo.ide.impl.idea.ide.util.TipAndTrickBean"/>

    <extensionPoint name="iconDescriptorUpdater" interface="consulo.language.icon.IconDescriptorUpdater" area="PROJECT"/>

    <extensionPoint name="checkinHandlerFactory" interface="consulo.ide.impl.idea.openapi.vcs.checkin.CheckinHandlerFactory"/>

    <extensionPoint name="writingAccessProvider" area="PROJECT" interface="consulo.virtualFileSystem.WritingAccessProvider"/>
    <extensionPoint name="nonProjectFileWritingAccessExtension" area="PROJECT"
                    interface="consulo.ide.impl.idea.openapi.fileEditor.impl.NonProjectFileWritingAccessExtension"/>
    <extensionPoint name="editorNotificationProvider" area="PROJECT" interface="consulo.ide.impl.codeEditor.EditorNotificationProvider"/>

    <extensionPoint name="editorNavigation" interface="consulo.ide.impl.idea.openapi.editor.EditorNavigationDelegate"/>

    <extensionPoint name="statistics.usagesCollector" interface="consulo.ide.impl.idea.internal.statistic.UsagesCollector"/>

    <extensionPoint name="editorHighlighterProvider" beanClass="consulo.virtualFileSystem.extension.FileTypeExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.highlight.EditorHighlighterProvider"/>
    </extensionPoint>

    <extensionPoint name="actionPromoter" interface="consulo.ide.impl.idea.openapi.actionSystem.ActionPromoter"/>

    <extensionPoint name="fileDocumentManagerListener" interface="consulo.document.event.FileDocumentManagerListener"/>
    <extensionPoint name="fileDocumentSynchronizationVetoer" interface="consulo.document.FileDocumentSynchronizationVetoer"/>

    <extensionPoint name="itemPresentationProvider" beanClass="consulo.application.extension.ClassExtensionPoint">
      <with attribute="implementationClass" implements="consulo.navigation.ItemPresentationProvider"/>
    </extensionPoint>

    <extensionPoint name="intentionMenuContributor" interface="consulo.ide.impl.idea.codeInsight.daemon.impl.IntentionMenuContributor"/>

    <extensionPoint name="fileTypeDetector" interface="consulo.virtualFileSystem.fileType.FileTypeRegistry$FileTypeDetector"/>

    <extensionPoint name="pathMacroFilter" interface="consulo.component.macro.PathMacroFilter"/>
    <extensionPoint name="pathMacroExpendableProtocol" beanClass="consulo.component.macro.PathMacroExpendableProtocolBean"/>

    <extensionPoint name="httpRequestHandler" interface="consulo.ide.impl.builtInServer.http.HttpRequestHandler"/>

    <extensionPoint name="colorPickerListenerFactory" interface="consulo.ide.impl.idea.ui.ColorPickerListenerFactory"/>

    <!--VCS-->
    <extensionPoint name="checkoutProvider"
                    interface="consulo.ide.impl.idea.openapi.vcs.CheckoutProvider"/>
    <extensionPoint name="checkoutListener"
                    interface="consulo.ide.impl.idea.openapi.vcs.checkout.CheckoutListener"/>
    <extensionPoint name="vcsAwareCheckoutListener"
                    interface="consulo.ide.impl.idea.openapi.vcs.checkout.VcsAwareCheckoutListener"/>
    <extensionPoint name="checkoutCompletedListener"
                    interface="consulo.ide.impl.idea.openapi.vcs.checkout.CheckoutListener"/>
    <extensionPoint name="changeListDecorator"
					interface="consulo.ide.impl.idea.openapi.vcs.changes.ChangeListDecorator" area="PROJECT"/>

    <extensionPoint name="vcs"
                    beanClass="consulo.ide.impl.idea.openapi.vcs.impl.VcsEP"
                    area="PROJECT">
      <with attribute="vcsClass" implements="consulo.ide.impl.idea.openapi.vcs.AbstractVcs"/>
    </extensionPoint>

    <extensionPoint name="vcsCheckinHandlerFactory"
                    interface="consulo.ide.impl.idea.openapi.vcs.checkin.VcsCheckinHandlerFactory"/>

    <extensionPoint name="changesViewContent"
                    beanClass="consulo.ide.impl.idea.openapi.vcs.changes.ui.ChangesViewContentEP"
                    area="PROJECT"/>

    <extensionPoint name="editChangelistSupport"
                    interface="consulo.ide.impl.idea.openapi.vcs.changes.ui.EditChangelistSupport"
                    area="PROJECT"/>

    <extensionPoint name="vcsSelectionProvider"
                    interface="consulo.ide.impl.idea.vcsUtil.VcsSelectionProvider"/>

    <extensionPoint name="vcsConfigurableProvider"
                    interface="consulo.ide.impl.idea.openapi.vcs.VcsConfigurableProvider"/>

    <extensionPoint name="vcsRootChecker" interface="consulo.ide.impl.idea.openapi.vcs.VcsRootChecker"/>

    <extensionPoint name="vcs.fileStatusProvider"
                    interface="consulo.virtualFileSystem.status.FileStatusProvider"
                    area="PROJECT"/>

    <extensionPoint name="vcs.baseContentProvider"
                    interface="consulo.ide.impl.idea.openapi.vcs.impl.VcsBaseContentProvider"
                    area="PROJECT"/>

    <extensionPoint name="vcsPopupProvider"
                    interface="consulo.ide.impl.idea.openapi.vcs.actions.VcsQuickListContentProvider"/>
    <extensionPoint name="vcs.ignoredFilesHolder" interface="consulo.ide.impl.idea.openapi.vcs.changes.VcsIgnoredFilesHolder" area="PROJECT"/>
    <extensionPoint name="vcs.ignoredFileProvider"
                    interface="consulo.ide.impl.idea.openapi.vcs.changes.IgnoredFileProvider"/>

    <extensionPoint name="patch.extension" interface="consulo.ide.impl.idea.openapi.diff.impl.patch.PatchEP" area="PROJECT"/>
    <extensionPoint name="vcsChangesViewRefresher" interface="consulo.ide.impl.idea.openapi.vcs.changes.ChangesViewRefresher"/>
    <extensionPoint name="vcsAnnotationGutterActionProvider" interface="consulo.ide.impl.idea.openapi.vcs.annotate.AnnotationGutterActionProvider"/>
    <extensionPoint name="vcs.taskHandler" interface="consulo.ide.impl.idea.openapi.vcs.VcsTaskHandler" area="PROJECT"/>

    <extensionPoint name="compiler.additionalCompileScopeProvider"
                    interface="consulo.ide.impl.idea.compiler.impl.AdditionalCompileScopeProvider"/>

    <extensionPoint name="namedScopesHolderProvider" area="PROJECT" interface="consulo.content.scope.NamedScopesHolderProvider"/>

    <extensionPoint name="compiler.translatingHelper"
                    interface="consulo.compiler.TranslatingCompilerFilesMonitorHelper"/>

    <extensionPoint name="compiler.resourceCompilerExtension"
                    interface="consulo.ide.impl.idea.compiler.impl.resourceCompiler.ResourceCompilerExtension"/>

    <extensionPoint name="compiler.additionalOutputDirectoriesProvider"
                    interface="consulo.compiler.AdditionalOutputDirectoriesProvider"/>
    <extensionPoint name="orderRootTypeEditor"
                    beanClass="consulo.component.extension.KeyedFactoryEPBean">
      <with attribute="implementationClass" implements="consulo.ide.impl.idea.openapi.roots.ui.OrderRootTypeUIFactory"/>
    </extensionPoint>

    <extensionPoint name="packaging.elementType" interface="consulo.compiler.artifact.element.PackagingElementType"/>
    <extensionPoint name="packaging.artifactPropertiesProvider" interface="consulo.compiler.artifact.ArtifactPropertiesProvider"/>
    <extensionPoint name="packaging.sourceItemProvider" interface="consulo.ide.impl.idea.packaging.ui.PackagingSourceItemsProvider"/>
    <extensionPoint name="packaging.artifactType" interface="consulo.compiler.artifact.ArtifactType"/>

    <extensionPoint name="moduleImportProvider" interface="consulo.ide.impl.moduleImport.ModuleImportProvider"/>

    <extensionPoint name="codeInsight.wordCompletionFilter" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.ide.impl.idea.lang.WordCompletionElementFilter"/>
    </extensionPoint>


    <extensionPoint name="compiler" area="PROJECT" interface="consulo.compiler.Compiler"/>

    <extensionPoint name="projectStructureValidator"
                    interface="consulo.ide.impl.idea.openapi.roots.ui.configuration.projectRoot.daemon.ProjectStructureValidator"/>

    <!--Lang-->
    <extensionPoint name="errorPropertiesProvider" interface="consulo.ide.impl.codeInspection.ui.ErrorPropertiesProvider"/>

    <extensionPoint name="indexPatternProvider"
                    interface="consulo.language.psi.search.IndexPatternProvider"/>


    <extensionPoint name="fileBasedIndex.providedLocator"
                    interface="consulo.ide.impl.idea.util.indexing.provided.ProvidedIndexExtensionLocator"/>

    <extensionPoint name="globalIndexFilter"
                    interface="consulo.ide.impl.idea.util.indexing.GlobalIndexFilter"/>

    <extensionPoint name="refGraphAnnotator"
                    interface="consulo.language.editor.inspection.reference.RefGraphAnnotator"/>

    <!-- Code Insight -->
    <extensionPoint name="highlightVisitor"
                    interface="consulo.language.editor.rawHighlight.HighlightVisitor"
                    area="PROJECT"/>
    <extensionPoint name="highlightErrorFilter"
                    interface="consulo.language.editor.HighlightErrorFilter"
                    area="PROJECT"/>

    <extensionPoint name="daemon.tooltipActionProvider"
                    interface="consulo.ide.impl.idea.codeInsight.daemon.impl.tooltips.TooltipActionProvider"/>

    <extensionPoint name="errorQuickFixProvider"
                    interface="consulo.ide.impl.idea.codeInsight.daemon.impl.analysis.ErrorQuickFixProvider"/>

    <extensionPoint name="pathReferenceProvider"
                    interface="consulo.language.psi.path.PathReferenceProvider"/>
    <extensionPoint name="anchorReferenceProvider"
                    interface="consulo.language.psi.path.PathReferenceProvider"/>
    <extensionPoint name="dynamicContextProvider"
                    interface="consulo.language.psi.path.DynamicContextProvider"/>


    <extensionPoint name="intentionAction"
                    beanClass="consulo.language.editor.intention.IntentionActionBean">
      <with tag="className" implements="consulo.language.editor.intention.IntentionAction"/>
    </extensionPoint>

    <extensionPoint name="codeInsight.unresolvedReferenceQuickFixProvider"
                    interface="consulo.language.editor.intention.UnresolvedReferenceQuickFixProvider"/>


    <extensionPoint name="braceMatcher"
                    beanClass="consulo.virtualFileSystem.extension.FileTypeExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.highlight.BraceMatcher"/>
    </extensionPoint>

    <extensionPoint name="bidiRegionsSeparator"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.ide.impl.idea.openapi.editor.bidi.BidiRegionsSeparator"/>
    </extensionPoint>

    <extensionPoint name="wordBoundaryFilter" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.action.WordBoundaryFilter"/>
    </extensionPoint>

    <extensionPoint name="quoteHandler"
                    beanClass="consulo.ide.impl.idea.codeInsight.editorActions.QuoteHandlerEP"/>
    <extensionPoint name="extendWordSelectionHandler"
                    interface="consulo.language.editor.action.ExtendWordSelectionHandler"/>
    <extensionPoint name="basicWordSelectionFilter"
                    interface="consulo.util.lang.function.Condition"/>
    <extensionPoint name="typedHandler"
                    interface="consulo.language.editor.action.TypedHandlerDelegate"/>
    <extensionPoint name="selectionDequotingFilter"
                    interface="consulo.ide.impl.idea.codeInsight.editorActions.SelectionQuotingTypedHandler$DequotingFilter"/>

    <extensionPoint name="joinLinesHandler"
                    interface="consulo.language.editor.action.JoinLinesHandlerDelegate"/>
    <extensionPoint name="enterHandlerDelegate" interface="consulo.ide.impl.idea.codeInsight.editorActions.enter.EnterHandlerDelegate"/>
    <extensionPoint name="backspaceHandlerDelegate" interface="consulo.language.editor.action.BackspaceHandlerDelegate"/>
    <extensionPoint name="editor.backspaceModeOverride" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.codeEditor.action.BackspaceModeOverride"/>
    </extensionPoint>
    <extensionPoint name="enterBetweenBracesDelegate" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.ide.impl.idea.codeInsight.editorActions.enter.EnterBetweenBracesDelegate"/>
    </extensionPoint>

    <extensionPoint name="codeStyleSettingsProvider"
                    interface="consulo.language.codeStyle.setting.CodeStyleSettingsProvider"/>

    <extensionPoint name="codeStyleIndentHelperExtension"
                    interface="consulo.ide.impl.psi.impl.source.codeStyle.IndentHelperExtension"/>

    <extensionPoint name="daemon.highlightInfoFilter"
                    interface="consulo.language.editor.rawHighlight.HighlightInfoFilter"/>

    <extensionPoint name="daemon.intentionActionFilter"
                    interface="consulo.ide.impl.idea.codeInsight.daemon.impl.IntentionActionFilter"/>

    <extensionPoint name="daemon.externalAnnotatorsFilter"
                    interface="consulo.ide.impl.idea.lang.ExternalAnnotatorsFilter"/>

    <extensionPoint name="severitiesProvider"
                    interface="consulo.language.editor.rawHighlight.SeveritiesProvider"/>

    <extensionPoint name="implicitUsageProvider"
                    interface="consulo.ide.impl.idea.codeInsight.daemon.ImplicitUsageProvider"/>

    <extensionPoint name="templateParameterTraversalPolicy"
                    interface="consulo.ide.impl.idea.codeInsight.completion.TemplateParameterTraversalPolicy"/>

    <extensionPoint name="daemon.changeLocalityDetector"
                    interface="consulo.ide.impl.idea.codeInsight.daemon.ChangeLocalityDetector"/>

    <extensionPoint name="languageInjector" interface="consulo.language.inject.LanguageInjector"/>
    <extensionPoint name="concatenationAwareInjector" interface="consulo.language.inject.ConcatenationAwareInjector" area="PROJECT"/>
    <extensionPoint name="multiHostInjector"
                    beanClass="consulo.language.inject.MultiHostInjectorExtensionPoint"
                    area="PROJECT">
      <with attribute="forClass" implements="consulo.language.psi.PsiElement"/>
      <with attribute="implementationClass" implements="consulo.language.inject.MultiHostInjector"/>
    </extensionPoint>

    <extensionPoint name="annotator"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.annotation.Annotator"/>
    </extensionPoint>

    <extensionPoint name="externalAnnotator"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.annotation.ExternalAnnotator"/>
    </extensionPoint>

    <extensionPoint name="lang.refactoringSupport"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.refactoring.RefactoringSupportProvider"/>
    </extensionPoint>

    <extensionPoint name="lang.refactoringSupport.classMembersRefactoringSupport"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.ide.impl.idea.refactoring.classMembers.ClassMembersRefactoringSupport"/>
    </extensionPoint>

    <extensionPoint name="lang.documentationProvider"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.documentation.DocumentationProvider"/>
    </extensionPoint>

    <extensionPoint name="lang.namesValidator"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.refactoring.NamesValidator"/>
    </extensionPoint>

    <extensionPoint name="lang.findUsagesProvider"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.findUsage.FindUsagesProvider"/>
    </extensionPoint>

    <extensionPoint name="lang.commenter"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.Commenter"/>
    </extensionPoint>

    <extensionPoint name="lang.inspectionSuppressor"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.inspection.InspectionSuppressor"/>
    </extensionPoint>

    <extensionPoint name="lang.braceMatcher"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.PairedBraceMatcher"/>
    </extensionPoint>

    <extensionPoint name="lang.quoteHandler"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.action.QuoteHandler"/>
    </extensionPoint>

    <extensionPoint name="lang.foldingBuilder"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.folding.FoldingBuilder"/>
    </extensionPoint>

    <extensionPoint name="customFoldingProvider"
                    interface="consulo.language.editor.folding.CustomFoldingProvider"/>
    <extensionPoint name="lang.psiStructureViewFactory"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.structureView.PsiStructureViewFactory"/>
    </extensionPoint>

    <extensionPoint name="lang.structureViewExtension"
                    interface="consulo.language.editor.structureView.StructureViewExtension"/>

    <extensionPoint name="lang.psi.elementFactory" interface="consulo.language.psi.PsiElementFactory"/>

    <extensionPoint name="lang.ast.lazyFactory" interface="consulo.language.impl.ast.ASTLazyFactory"/>

    <extensionPoint name="lang.ast.leafFactory" interface="consulo.language.impl.ast.ASTLeafFactory"/>

    <extensionPoint name="lang.ast.compositeFactory" interface="consulo.language.impl.ast.ASTCompositeFactory"/>

    <extensionPoint name="lang.formatter" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.codeStyle.FormattingModelBuilder"/>
    </extensionPoint>

    <extensionPoint name="externalFormatProcessor" interface="consulo.ide.impl.psi.codeStyle.ExternalFormatProcessor"/>

    <extensionPoint name="lang.formatter.restriction" interface="consulo.language.codeStyle.LanguageFormattingRestriction"/>
    <extensionPoint name="lang.importOptimizer" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.refactoring.ImportOptimizer"/>
    </extensionPoint>

    <extensionPoint name="lang.rearranger" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.codeStyle.arrangement.Rearranger"/>
    </extensionPoint>
    <extensionPoint name="rearranger.ui" interface="consulo.language.codeStyle.arrangement.std.ArrangementUiComponent$Factory"/>

    <extensionPoint name="lang.surroundDescriptor" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.surroundWith.SurroundDescriptor"/>
    </extensionPoint>

    <extensionPoint name="lang.unwrapDescriptor" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.refactoring.unwrap.UnwrapDescriptor"/>
    </extensionPoint>

    <extensionPoint name="lang.parserDefinition" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.parser.ParserDefinition"/>
    </extensionPoint>

    <extensionPoint name="metaLanguage" interface="consulo.language.MetaLanguage"/>

    <extensionPoint name="lang.versionResolver" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.version.LanguageVersionResolver"/>
    </extensionPoint>

    <extensionPoint name="lang.defineVersion" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.version.LanguageVersion"/>
    </extensionPoint>

    <extensionPoint name="lang.treePatcher" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.impl.psi.template.TreePatcher"/>
    </extensionPoint>

    <extensionPoint name="outerLanguageRangePatcher" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.impl.psi.template.TemplateDataElementType$OuterLanguageRangePatcher"/>
    </extensionPoint>

    <extensionPoint name="lang.tokenSeparatorGenerator" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.ast.TokenSeparatorGenerator"/>
    </extensionPoint>


    <extensionPoint name="lang.fileViewProviderFactory" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.file.FileViewProviderFactory"/>
    </extensionPoint>

    <extensionPoint name="fileType.fileViewProviderFactory" beanClass="consulo.virtualFileSystem.extension.FileTypeExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.file.FileViewProviderFactory"/>
    </extensionPoint>

    <extensionPoint name="multiLangCommenter"
                    interface="consulo.ide.impl.psi.templateLanguages.MultipleLangCommentProvider"/>

    <extensionPoint name="cacheBuilder"
                    beanClass="consulo.ide.impl.idea.lang.cacheBuilder.CacheBuilderEP">
      <with attribute="wordsScannerClass" implements="consulo.language.cacheBuilder.WordsScanner"/>
    </extensionPoint>

    <extensionPoint name="referencesSearch" interface="consulo.application.util.query.QueryExecutor"/>
    <extensionPoint name="definitionsScopedSearch" interface="consulo.application.util.query.QueryExecutor"/>

    <extensionPoint name="useScopeEnlarger" interface="consulo.ide.impl.psi.search.UseScopeEnlarger"/>
    <extensionPoint name="resolveScopeEnlarger" interface="consulo.language.psi.ResolveScopeEnlarger"/>
    <extensionPoint name="resolveScopeProvider" interface="consulo.language.psi.ResolveScopeProvider"/>
    <extensionPoint name="codeUsageScopeOptimizer" interface="consulo.language.psi.search.ScopeOptimizer"/>

    <extensionPoint name="webFileFilter" interface="consulo.webBrowser.WebFileFilter"/>

    <extensionPoint name="gotoClassContributor"
                    interface="consulo.ide.navigation.ChooseByNameContributor"/>
    <extensionPoint name="gotoSymbolContributor"
                    interface="consulo.ide.navigation.ChooseByNameContributor"/>
    <extensionPoint name="gotoFileContributor"
                    interface="consulo.ide.navigation.ChooseByNameContributor"/>
    <extensionPoint name="anonymousElementProvider"
                    interface="consulo.language.navigation.AnonymousElementProvider"/>

    <extensionPoint name="gotoRelatedProvider" interface="consulo.language.navigation.GotoRelatedProvider"/>

    <extensionPoint name="roots.watchedRootsProvider" interface="consulo.project.content.WatchedRootsProvider" area="PROJECT"/>

    <extensionPoint name="moduleExtensionProvider" beanClass="consulo.module.impl.internal.layer.ModuleExtensionProviderEP">
      <with attribute="immutableClass" implements="consulo.module.extension.ModuleExtension"/>
      <with attribute="mutableClass" implements="consulo.module.extension.MutableModuleExtension"/>
    </extensionPoint>

    <extensionPoint name="moduleRootsProcessor" interface="consulo.module.impl.internal.layer.ModuleRootsProcessor"/>
    <extensionPoint name="orderRootType" interface="consulo.content.OrderRootType"/>
    <extensionPoint name="orderEntryType" interface="consulo.module.content.layer.orderEntry.OrderEntryType" internal="true"/>
    <extensionPoint name="orderEntryTypeEditor" beanClass="consulo.component.extension.KeyedFactoryEPBean">
      <with attribute="implementationClass" implements="consulo.ide.setting.module.OrderEntryTypeEditor"/>
    </extensionPoint>
    <extensionPoint name="orderEnumerationHandlerFactory" interface="consulo.module.impl.internal.layer.OrderEnumerationHandler$Factory"/>
    <extensionPoint name="directoryIndexExcludePolicy" interface="consulo.module.content.layer.DirectoryIndexExcludePolicy"
                    area="PROJECT"/>

    <extensionPoint name="smartPointerAnchorProvider" interface="consulo.language.psi.SmartPointerAnchorProvider"/>
    <extensionPoint name="elementSignatureProvider" interface="consulo.ide.impl.idea.codeInsight.folding.impl.ElementSignatureProvider"/>
    <extensionPoint name="preFormatProcessor" interface="consulo.ide.impl.psi.impl.source.codeStyle.PreFormatProcessor"/>

    <extensionPoint name="declarationRangeHandler" beanClass="consulo.component.extension.MixinEP">
      <with attribute="implementationClass" implements="consulo.ide.impl.idea.codeInsight.hint.DeclarationRangeHandler"/>
    </extensionPoint>

    <extensionPoint name="highlightUsagesHandlerFactory" interface="consulo.language.editor.highlight.usage.HighlightUsagesHandlerFactory"/>

    <extensionPoint name="usageTargetProvider"
                    interface="consulo.usage.UsageTargetProvider"/>
    <extensionPoint name="usageToPsiElementProvider" interface="consulo.usage.UsageToPsiElementProvider"/>

    <extensionPoint name="customScopesProvider"
                    interface="consulo.ide.impl.psi.search.scope.packageSet.CustomScopesProvider"
                    area="PROJECT"/>

    <extensionPoint name="customScopesFilter" interface="consulo.ide.impl.psi.search.scope.packageSet.CustomScopesFilter"/>

    <extensionPoint name="scopeDescriptorProvider" interface="consulo.content.scope.ScopeDescriptorProvider"/>
    <extensionPoint name="patternDialectProvider" interface="consulo.ide.impl.idea.packageDependencies.ui.PatternDialectProvider"/>

    <extensionPoint name="localInspection"
                    beanClass="consulo.language.editor.inspection.scheme.LocalInspectionEP">
      <with attribute="implementationClass" implements="consulo.language.editor.inspection.LocalInspectionTool"/>
    </extensionPoint>

    <extensionPoint name="globalInspection"
                    beanClass="consulo.language.editor.inspection.scheme.InspectionEP">
      <with attribute="implementationClass" implements="consulo.language.editor.inspection.GlobalInspectionTool"/>
    </extensionPoint>
    <!-- please use localInspection or globalInspection instead-->
    <extensionPoint name="specialTool"
                    beanClass="consulo.language.editor.inspection.scheme.InspectionEP"/>
    <extensionPoint name="inspectionToolProvider"
                    interface="consulo.ide.impl.idea.codeInspection.InspectionToolProvider"/>
    <extensionPoint name="inspectionToolsFactory"
                    interface="consulo.ide.impl.idea.codeInspection.InspectionToolsFactory"/>
    <extensionPoint name="inspectionElementsMerger" interface="consulo.ide.impl.idea.codeInspection.ex.InspectionElementsMerger"/>
    <extensionPoint name="codeInspection.InspectionExtension" interface="consulo.language.editor.inspection.InspectionExtensionsFactory"/>

    <extensionPoint name="customPasteProvider" interface="consulo.ui.ex.PasteProvider"/>

    <extensionPoint name="copyPastePreProcessor" interface="consulo.language.editor.action.CopyPastePreProcessor"/>
    <extensionPoint name="copyPastePostProcessor" interface="consulo.ide.impl.idea.codeInsight.editorActions.CopyPastePostProcessor"/>

    <extensionPoint name="commentCompleteHandler" interface="consulo.language.editor.action.CommentCompleteHandler"/>

    <extensionPoint name="liveTemplateContext" interface="consulo.language.editor.template.context.TemplateContextType"/>
    <extensionPoint name="liveTemplateMacro" interface="consulo.language.editor.template.macro.Macro"/>
    <extensionPoint name="liveTemplateOptionalProcessor" interface="consulo.ide.impl.idea.codeInsight.template.impl.TemplateOptionalProcessor"/>
    <extensionPoint name="liveTemplatePreprocessor" interface="consulo.ide.impl.idea.codeInsight.template.impl.TemplatePreprocessor"/>
    <extensionPoint name="customLiveTemplate" interface="consulo.ide.impl.idea.codeInsight.template.CustomLiveTemplate"/>

    <extensionPoint name="fileTemplateGroup"
                    interface="consulo.fileTemplate.FileTemplateGroupDescriptorFactory"/>
    <extensionPoint name="colorProvider"
                    interface="consulo.language.psi.ElementColorProvider"
                    area="PROJECT"/>
    <extensionPoint name="createFromTemplateHandler"
                    interface="consulo.fileTemplate.CreateFromTemplateHandler"/>
    <extensionPoint name="defaultTemplatePropertiesProvider"
                    interface="consulo.fileTemplate.DefaultTemplatePropertiesProvider"/>
    <extensionPoint name="internalFileTemplate"
                    beanClass="consulo.fileTemplate.impl.internal.InternalTemplateBean"/>
    <extensionPoint name="saveFileAsTemplateHandler"
                    interface="consulo.ide.impl.idea.ide.actions.SaveFileAsTemplateHandler"/>

    <extensionPoint name="favoriteNodeProvider"
                    interface="consulo.ide.impl.idea.ide.favoritesTreeView.FavoriteNodeProvider"
                    area="PROJECT"/>
    <extensionPoint name="favoritesListProvider"
                    interface="consulo.ide.impl.idea.ide.favoritesTreeView.FavoritesListProvider"
                    area="PROJECT"/>

    <extensionPoint name="lang.emacs" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.ide.impl.idea.codeInsight.editorActions.emacs.EmacsProcessingHandler"/>
    </extensionPoint>

    <!-- File-Based Index-->
    <extensionPoint name="fileBasedIndex" interface="consulo.language.psi.stub.FileBasedIndexExtension"/>
    <extensionPoint name="stubIndex" interface="consulo.language.psi.stub.StubIndexExtension"/>
    <extensionPoint name="indexedRootsContributor" interface="consulo.language.psi.stub.IndexableSetContributor"/>
    <extensionPoint name="include.provider" interface="consulo.language.psi.include.FileIncludeProvider"/>

    <extensionPoint name="refactoring.moveDirectoryWithClassesHelper"
                    interface="consulo.ide.impl.idea.refactoring.move.moveClassesOrPackages.MoveDirectoryWithClassesHelper"/>


    <extensionPoint name="refactoring.helper" interface="consulo.language.editor.refactoring.RefactoringHelper"/>
    <extensionPoint name="refactoring.inlineHandler" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.ide.impl.idea.lang.refactoring.InlineHandler"/>
    </extensionPoint>

    <extensionPoint name="refactoring.safeDeleteProcessor" interface="consulo.ide.impl.idea.refactoring.safeDelete.SafeDeleteProcessorDelegate"/>

    <extensionPoint name="refactoring.extractIncludeHandler"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.refactoring.RefactoringActionHandler"/>
    </extensionPoint>

    <extensionPoint name="refactoring.changeSignatureUsageProcessor"
                    interface="consulo.ide.impl.idea.refactoring.changeSignature.ChangeSignatureUsageProcessor"/>

    <extensionPoint name="elementDescriptionProvider" interface="consulo.language.psi.ElementDescriptionProvider"/>

    <extensionPoint name="structureViewBuilder"
                    beanClass="consulo.component.extension.KeyedFactoryEPBean">
      <with attribute="implementationClass" implements="consulo.fileEditor.structureView.StructureViewBuilder"/>
    </extensionPoint>

    <extensionPoint name="macro" interface="consulo.pathMacro.Macro"/>
    <extensionPoint name="printOption" interface="consulo.ide.impl.idea.codeEditor.printing.PrintOption"/>

    <extensionPoint name="indexPatternBuilder" interface="consulo.ide.impl.psi.impl.search.IndexPatternBuilder"/>

    <extensionPoint name="configurationType"
                    interface="consulo.execution.configuration.ConfigurationType"/>

    <extensionPoint name="runConfigurationsSettings"
                    interface="consulo.execution.configuration.RunConfigurationsSettings"/>

    <extensionPoint name="programRunner"
                    interface="consulo.execution.runner.ProgramRunner"/>

    <extensionPoint name="executor"
                    interface="consulo.execution.executor.Executor"/>

    <extensionPoint name="executionTargetProvider"
                    interface="consulo.execution.ExecutionTargetProvider"/>


    <extensionPoint name="stepsBeforeRunProvider"
                    interface="consulo.execution.BeforeRunTaskProvider"
                    area="PROJECT"/>

    <extensionPoint name="utf8BomOptionProvider" interface="consulo.ide.impl.idea.openapi.vfs.encoding.Utf8BomOptionProvider"/>

    <extensionPoint name="consoleFilterProvider" interface="consulo.execution.ui.console.ConsoleFilterProvider"/>
    <extensionPoint name="consoleInputFilterProvider" interface="consulo.execution.ui.console.ConsoleInputFilterProvider"/>
    <extensionPoint name="consoleActionsPostProcessor" interface="consulo.execution.ui.console.ConsoleActionsPostProcessor"/>

    <extensionPoint name="console.folding" interface="consulo.execution.ConsoleFolding"/>

    <extensionPoint name="configurationProducer"
                    interface="consulo.execution.action.RuntimeConfigurationProducer"/>

    <extensionPoint name="runConfigurationProducer" interface="consulo.execution.action.RunConfigurationProducer"/>

    <extensionPoint name="runLineMarkerContributor" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.ide.impl.idea.execution.lineMarker.RunLineMarkerContributor"/>
    </extensionPoint>

    <extensionPoint name="hectorComponentProvider" interface="consulo.language.editor.HectorComponentPanelsProvider"
                    area="PROJECT"/>

    <extensionPoint name="runDashboardContributor"
                    interface="consulo.ide.impl.idea.execution.dashboard.RunDashboardContributor"/>
    <extensionPoint name="runDashboardGroupingRule"
                    interface="consulo.ide.impl.idea.execution.dashboard.DashboardGroupingRule"/>

    <extensionPoint name="scopeTreeExpander" interface="consulo.ide.impl.idea.ide.scopeView.ScopeTreeStructureExpander" area="PROJECT"/>

    <extensionPoint name="schemeImporter" beanClass="consulo.ide.impl.idea.openapi.options.SchemeImporterEP">
      <with attribute="schemeClass" implements="consulo.component.util.pointer.Named"/>
      <with attribute="implementationClass" implements="consulo.ide.impl.idea.openapi.options.SchemeImporter"/>
    </extensionPoint>

    <extensionPoint name="lang.elementManipulator" beanClass="consulo.application.extension.ClassExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.psi.ElementManipulator"/>
    </extensionPoint>

    <extensionPoint name="fileContextProvider" interface="consulo.language.psi.FileContextProvider" area="PROJECT"/>
    <extensionPoint name="psi.fileReferenceHelper"
                    interface="consulo.language.psi.path.FileReferenceHelper"/>

    <extensionPoint name="psi.referenceContributor" beanClass="consulo.language.impl.internal.psi.PsiReferenceContributorEP">
      <with attribute="implementation" implements="consulo.language.psi.PsiReferenceContributor"/>
    </extensionPoint>

    <extensionPoint name="psi.referenceProvider" beanClass="consulo.ide.impl.psi.PsiReferenceProviderBean"/>
    <extensionPoint name="psi.packageSupportProvider" interface="consulo.language.psi.PsiPackageSupportProvider"/>
    <extensionPoint name="psi.directoryMethodProxy" interface="consulo.language.psi.PsiDirectoryMethodProxy"/>
    <extensionPoint name="patterns.patternClass" beanClass="consulo.ide.impl.idea.patterns.compiler.PatternClassBean"/>

    <extensionPoint name="pom.declarationSearcher" interface="consulo.language.pom.PomDeclarationSearcher"/>

    <extensionPoint name="statistician" beanClass="consulo.ide.impl.psi.statistics.StatisticsExtensionPoint">
      <with attribute="implementationClass" implements="consulo.ide.impl.psi.statistics.Statistician"/>
    </extensionPoint>

    <extensionPoint name="weigher" beanClass="consulo.ide.impl.psi.WeigherExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.Weigher"/>
    </extensionPoint>

    <extensionPoint name="completion.contributor" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.completion.CompletionContributor"/>
    </extensionPoint>

    <extensionPoint name="completion.confidence" beanClass="consulo.ide.impl.idea.codeInsight.completion.CompletionConfidenceEP">
      <with attribute="implementationClass" implements="consulo.ide.impl.idea.codeInsight.completion.CompletionConfidence"/>
    </extensionPoint>

    <extensionPoint name="completion.skip" interface="consulo.ide.impl.idea.codeInsight.completion.CompletionPreselectSkipper"/>
    <extensionPoint name="lookup.charFilter" interface="consulo.ide.impl.idea.codeInsight.lookup.CharFilter"/>
    <extensionPoint name="lookup.actionProvider" interface="consulo.ide.impl.idea.codeInsight.lookup.LookupActionProvider"/>
    <extensionPoint name="originInfoProvider" interface="consulo.ide.impl.idea.codeInsight.completion.originInfo.OriginInfoProvider"/>

    <extensionPoint name="highlightRangeExtension" interface="consulo.ide.impl.idea.codeInsight.daemon.impl.HighlightRangeExtension"/>

    <extensionPoint name="elementsToHighlightFilter" interface="consulo.util.lang.function.Condition"/>

    <extensionPoint name="sdkType" interface="consulo.content.bundle.SdkType"/>
    <extensionPoint name="predefinedBundlesProvider" interface="consulo.content.bundle.PredefinedBundlesProvider"/>

    <extensionPoint name="library.presentationProvider" interface="consulo.content.library.LibraryPresentationProvider"/>
    <extensionPoint name="library.type" interface="consulo.content.library.LibraryType"/>

    <extensionPoint name="lang.implementationTextSelectioner"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.ImplementationTextSelectioner"/>
    </extensionPoint>

    <extensionPoint name="lang.lineWrapStrategy"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.codeEditor.LineWrapPositionStrategy"/>
    </extensionPoint>

    <extensionPoint name="lang.whiteSpaceFormattingStrategy"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.codeStyle.WhiteSpaceFormattingStrategy"/>
    </extensionPoint>

    <extensionPoint name="lang.indentStrategy"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.ide.impl.idea.openapi.editor.IndentStrategy"/>
    </extensionPoint>

    <extensionPoint name="disabledIndentRangesProvider" interface="consulo.language.codeStyle.DisabledIndentRangesProvider"/>
    <extensionPoint name="lineIndentProvider" interface="consulo.ide.impl.psi.codeStyle.lineIndent.LineIndentProvider"/>

    <extensionPoint name="gotoDeclarationHandler"
                    interface="consulo.ide.impl.idea.codeInsight.navigation.actions.GotoDeclarationHandler"/>
    <extensionPoint name="typeDeclarationProvider"
                    interface="consulo.ide.impl.idea.codeInsight.navigation.actions.TypeDeclarationProvider"/>
    <extensionPoint name="gotoTargetRendererProvider"
                    interface="consulo.ide.navigation.GotoTargetRendererProvider"/>

    <extensionPoint name="navbar" interface="consulo.ide.impl.idea.ide.navigationToolbar.NavBarModelExtension"/>

    <extensionPoint name="renameHandler" interface="consulo.language.editor.refactoring.rename.RenameHandler"/>
    <extensionPoint name="renamePsiElementProcessor" interface="consulo.language.editor.refactoring.rename.RenamePsiElementProcessor"/>
    <extensionPoint name="updateAddedFileProcessor" interface="consulo.language.psi.UpdateAddedFileProcessor"/>
    <extensionPoint name="moveFileHandler" interface="consulo.ide.impl.idea.refactoring.move.moveFilesOrDirectories.MoveFileHandler"/>
    <extensionPoint name="automaticRenamerFactory" interface="consulo.language.editor.refactoring.rename.AutomaticRenamerFactory"/>
    <extensionPoint name="nameSuggestionProvider" interface="consulo.language.editor.refactoring.rename.NameSuggestionProvider"/>
    <extensionPoint name="vetoRenameCondition" interface="consulo.language.editor.refactoring.rename.VetoRenameCondition"/>

    <extensionPoint name="rename.inplace.resolveSnapshotProvider"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.refactoring.ResolveSnapshotProvider"/>
    </extensionPoint>

    <extensionPoint name="renameInputValidator" interface="consulo.language.editor.refactoring.rename.RenameInputValidator"/>

    <extensionPoint name="findUsagesHandlerFactory" interface="consulo.find.FindUsagesHandlerFactory"
                    area="PROJECT"/>
    <extensionPoint name="customUsageSearcher" interface="consulo.ide.impl.idea.find.findUsages.CustomUsageSearcher"/>

    <extensionPoint name="readWriteAccessDetector" interface="consulo.language.editor.highlight.ReadWriteAccessDetector"/>

    <extensionPoint name="scopeParserExtension" interface="consulo.ide.impl.psi.search.scope.packageSet.PackageSetParserExtension"/>

    <extensionPoint name="referenceProviderType" beanClass="consulo.component.extension.KeyedLazyInstanceEP"/>

    <extensionPoint name="colorSettingsPage" interface="consulo.language.editor.colorScheme.setting.ColorSettingsPage"/>
    <extensionPoint name="colorAndFontPanelFactory" interface="consulo.ide.impl.idea.application.options.colors.ColorAndFontPanelFactory"/>
    <extensionPoint name="colorAndFontDescriptorProvider" interface="consulo.colorScheme.setting.ColorAndFontDescriptorsProvider"/>

    <extensionPoint name="codeInsight.parameterInfo" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.ide.impl.idea.lang.parameterInfo.ParameterInfoHandler"/>
    </extensionPoint>

    <extensionPoint name="codeInsight.typeInfo" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.ide.impl.idea.lang.ExpressionTypeProvider"/>
    </extensionPoint>

    <extensionPoint name="preloadingActivity" interface="consulo.ide.impl.idea.openapi.application.PreloadingActivity"/>

    <extensionPoint name="codeInsight.containerProvider" interface="consulo.language.psi.search.ContainerProvider"/>

    <extensionPoint name="codeInsight.fillParagraph" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.ide.impl.idea.codeInsight.editorActions.fillParagraph.ParagraphFillHandler"/>
    </extensionPoint>

    <extensionPoint name="fileTypeIndentOptionsProvider" interface="consulo.language.codeStyle.setting.FileTypeIndentOptionsProvider"/>
    <extensionPoint name="fileIndentOptionsProvider" interface="consulo.language.codeStyle.FileIndentOptionsProvider"/>
    <extensionPoint name="referenceImporter" interface="consulo.ide.impl.idea.codeInsight.daemon.ReferenceImporter"/>
    <extensionPoint name="elementLookupRenderer" interface="consulo.language.editor.completion.lookup.ElementLookupRenderer"/>

    <extensionPoint name="qualifiedNameProvider" interface="consulo.language.editor.QualifiedNameProvider"/>

    <extensionPoint name="virtualFileQualifiedNameProvider" interface="consulo.language.editor.VirtualFileQualifiedNameProvider"/>

    <extensionPoint name="completionData"
                    beanClass="consulo.language.editor.impl.internal.completion.CompletionDataEP"/>


    <extensionPoint name="importFilteringRule"
                    interface="consulo.usage.rule.ImportFilteringRule"/>
    <extensionPoint name="usageGroupingRuleProvider"
                    interface="consulo.usage.rule.UsageGroupingRuleProvider"/>
    <extensionPoint name="usageTypeProvider"
                    interface="consulo.usage.UsageTypeProvider"/>
    <extensionPoint name="fileStructureGroupRuleProvider"
                    interface="consulo.ide.impl.idea.usages.impl.FileStructureGroupRuleProvider"/>
    <extensionPoint name="usageContextPanelProvider"
                    interface="consulo.usage.UsageContextPanelProvider"
                    area="PROJECT"/>
    <extensionPoint name="usageViewElementsListener" interface="consulo.ide.impl.idea.usages.impl.UsageViewElementsListener"/>

    <extensionPoint name="treeStructureProvider"
                    interface="consulo.project.ui.view.tree.TreeStructureProvider"
                    area="PROJECT"/>

    <extensionPoint name="defaultLiveTemplatesProvider"
                    interface="consulo.ide.impl.idea.codeInsight.template.impl.DefaultLiveTemplatesProvider"/>

    <extensionPoint name="codeInsight.implementMethod" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.action.LanguageCodeInsightActionHandler"/>
    </extensionPoint>

    <extensionPoint name="codeInsight.overrideMethod" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.action.LanguageCodeInsightActionHandler"/>
    </extensionPoint>

    <extensionPoint name="codeInsight.delegateMethods" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.action.LanguageCodeInsightActionHandler"/>
    </extensionPoint>

    <extensionPoint name="codeInsight.gotoSuper" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.action.LanguageCodeInsightActionHandler"/>
    </extensionPoint>

    <extensionPoint name="codeInsight.lineMarkerProvider" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.gutter.LineMarkerProvider"/>
    </extensionPoint>

    <extensionPoint name="codeInsight.surroundWithRangeAdjuster"
                    interface="consulo.ide.impl.idea.codeInsight.generation.surroundWith.SurroundWithRangeAdjuster"/>

    <extensionPoint name="lang.substitutor" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.psi.LanguageSubstitutor"/>
    </extensionPoint>

    <extensionPoint name="filetype.stubBuilder"
                    beanClass="consulo.virtualFileSystem.extension.FileTypeExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.psi.stub.BinaryFileStubBuilder"/>
    </extensionPoint>

    <extensionPoint name="stubElementTypeHolder"
                    beanClass="consulo.language.psi.stub.StubElementTypeHolderEP"/>


    <extensionPoint name="filePasteProvider"
                    interface="consulo.ui.ex.PasteProvider"/>

    <extensionPoint name="testFinder"
                    interface="consulo.ide.impl.idea.testIntegration.TestFinder"/>
    <extensionPoint name="testSrcLocator"
                    interface="consulo.ide.impl.idea.testIntegration.TestLocationProvider"/>
    <extensionPoint name="testStatusListener"
                    interface="consulo.execution.test.TestStatusListener"/>

    <extensionPoint name="testCreator"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.ide.impl.idea.testIntegration.TestCreator"/>
    </extensionPoint>

    <extensionPoint name="lang.smartEnterProcessor"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.ide.impl.idea.codeInsight.editorActions.smartEnter.SmartEnterProcessor"/>
    </extensionPoint>

    <extensionPoint name="callHierarchyProvider" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.ide.impl.idea.ide.hierarchy.HierarchyProvider"/>
    </extensionPoint>
    <extensionPoint name="methodHierarchyProvider" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.ide.impl.idea.ide.hierarchy.HierarchyProvider"/>
    </extensionPoint>

    <extensionPoint name="typeHierarchyProvider" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.ide.impl.idea.ide.hierarchy.HierarchyProvider"/>
    </extensionPoint>

    <extensionPoint name="editorAppearanceConfigurable" beanClass="consulo.ide.impl.idea.application.options.editor.EditorAppearanceConfigurableEP">
      <with attribute="instance" implements="consulo.ide.impl.idea.application.options.editor.EditorAppearanceConfigurable"/>
    </extensionPoint>

    <extensionPoint name="metaDataContributor" interface="consulo.language.psi.meta.MetaDataContributor"/>

    <extensionPoint name="documentationProvider"
                    interface="consulo.language.editor.documentation.DocumentationProvider"/>

    <extensionPoint name="lang.documentationFixer" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.ide.impl.idea.codeInsight.documentation.DocCommentFixer"/>
    </extensionPoint>

    <extensionPoint name="templateCompletionProcessor"
                    interface="consulo.language.editor.template.TemplateCompletionProcessor"/>

    <extensionPoint name="targetElementUtilEx" interface="consulo.language.editor.TargetElementUtilExtender"/>

    <extensionPoint name="statementUpDownMover" interface="consulo.ide.impl.idea.codeInsight.editorActions.moveUpDown.StatementUpDownMover"/>

    <extensionPoint name="moveLeftRightHandler" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass"
            implements="consulo.ide.impl.idea.codeInsight.editorActions.moveLeftRight.MoveElementLeftRightHandler"/>
    </extensionPoint>

    <extensionPoint name="fileLookupInfoProvider" interface="consulo.ide.impl.psi.file.FileLookupInfoProvider"/>

    <extensionPoint name="idIndexer" beanClass="consulo.virtualFileSystem.extension.FileTypeExtensionPoint">
      <with attribute="implementationClass" implements="consulo.ide.impl.psi.impl.cache.impl.id.IdIndexer"/>
    </extensionPoint>

    <extensionPoint name="todoIndexer" beanClass="consulo.virtualFileSystem.extension.FileTypeExtensionPoint">
      <with attribute="implementationClass" implements="consulo.index.io.DataIndexer"/>
    </extensionPoint>

    <extensionPoint name="refactoring.elementListenerProvider"
                    interface="consulo.language.editor.refactoring.event.RefactoringElementListenerProvider"
                    area="PROJECT"/>

    <extensionPoint name="problemFileHighlightFilter" interface="consulo.util.lang.function.Condition" area="PROJECT"/>

    <extensionPoint name="problemHighlightFilter" interface="consulo.language.editor.ProblemHighlightFilter"/>

    <extensionPoint name="uiDebuggerExtension" interface="consulo.ide.impl.idea.ui.debugger.UiDebuggerExtension"/>

    <extensionPoint name="projectViewPane" interface="consulo.ide.impl.idea.ide.projectView.impl.AbstractProjectViewPane" area="PROJECT"/>
    <extensionPoint name="projectViewPaneSelectionHelperiewPane" interface="consulo.ide.impl.idea.ide.projectView.impl.ProjectViewPaneSelectionHelper"/>
    <extensionPoint name="projectViewOptionProvider" interface="consulo.ide.impl.projectView.impl.ProjectViewPaneOptionProvider"/>

    <extensionPoint name="inlineActionHandler" interface="consulo.ide.impl.idea.lang.refactoring.InlineActionHandler"/>

    <extensionPoint name="projectViewNodeDecorator" interface="consulo.ide.impl.idea.ide.projectView.ProjectViewNodeDecorator"
                    area="PROJECT"/>

    <extensionPoint name="previewHintProvider" interface="consulo.ide.impl.idea.codeInsight.preview.PreviewHintProvider"/>
    <extensionPoint name="elementPreviewProvider" interface="consulo.ide.impl.idea.codeInsight.preview.ElementPreviewProvider"/>
    <extensionPoint name="testActionProvider" interface="consulo.execution.test.action.ToggleModelActionProvider"/>

    <extensionPoint name="psiViewerExtension" interface="consulo.ide.impl.idea.internal.psiView.PsiViewerExtension"/>

    <extensionPoint name="filePropertyPusher" interface="consulo.ide.impl.idea.openapi.roots.impl.FilePropertyPusher"/>

    <extensionPoint name="langCodeStyleSettingsProvider" interface="consulo.language.codeStyle.setting.LanguageCodeStyleSettingsProvider"/>

    <extensionPoint name="codeStyleSettingsModifier" interface="consulo.ide.impl.psi.codeStyle.modifier.CodeStyleSettingsModifier"/>

    <extensionPoint name="predefinedCodeStyle" interface="consulo.language.codeStyle.PredefinedCodeStyle"/>

    <extensionPoint name="semContributor"
                    beanClass="consulo.language.sem.SemContributorEP" area="PROJECT">
      <with attribute="implementation" implements="consulo.language.sem.SemContributor"/>
    </extensionPoint>

    <extensionPoint name="typeName" beanClass="consulo.ide.impl.idea.ide.TypeNameEP"/>

    <extensionPoint name="typeIcon" beanClass="consulo.ide.impl.idea.ide.TypeIconEP"/>

    <extensionPoint name="analyzeStacktraceFilter" interface="consulo.execution.ui.console.Filter" area="PROJECT"/>

    <extensionPoint name="stacktrace.fold" beanClass="consulo.ide.impl.idea.execution.console.CustomizableConsoleFoldingBean"/>
    <extensionPoint name="changeSignatureDetector"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.ide.impl.idea.refactoring.changeSignature.inplace.LanguageChangeSignatureDetector"/>
    </extensionPoint>

    <extensionPoint name="preserveIndentOnPaste" beanClass="consulo.ide.impl.idea.codeInsight.editorActions.PreserveIndentOnPasteBean"/>

    <extensionPoint name="aliasingPsiTargetMapper" interface="consulo.ide.impl.psi.targets.AliasingPsiTargetMapper"/>

    <extensionPoint name="inspectionsReportConverter"
                    interface="consulo.ide.impl.idea.codeInspection.InspectionsReportConverter"/>

    <extensionPoint name="patternProvider"
                    interface="consulo.ide.impl.idea.codeInsight.generation.PatternProvider"/>

    <extensionPoint name="treeCopyHandler"
                    interface="consulo.language.ast.TreeCopyHandler"/>
    <extensionPoint name="treeGenerator"
                    interface="consulo.language.ast.TreeGenerator"/>

    <extensionPoint name="psi.treeChangePreprocessor"
                    interface="consulo.language.psi.event.PsiTreeChangePreprocessor"
                    area="PROJECT"/>

    <extensionPoint name="codeBlockProvider"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.action.CodeBlockProvider"/>
    </extensionPoint>

    <extensionPoint name="toolsProvider" interface="consulo.ide.impl.idea.tools.ToolsProvider"/>

    <extensionPoint name="defaultHighlightingSettingProvider"
                    interface="consulo.ide.impl.idea.codeInsight.daemon.impl.analysis.DefaultHighlightingSettingProvider"/>


    <extensionPoint name="unusedDeclarationFixProvider"
                    interface="consulo.ide.impl.idea.codeInspection.reference.UnusedDeclarationFixProvider"/>
    <extensionPoint name="library.dependencyScopeSuggester" interface="consulo.module.content.layer.orderEntry.LibraryDependencyScopeSuggester"/>

    <extensionPoint name="eventLogCategory" interface="consulo.ide.impl.idea.notification.EventLogCategory"/>

    <extensionPoint name="urlOpener" interface="consulo.webBrowser.UrlOpener"/>

    <extensionPoint name="editor.linePainter" interface="consulo.codeEditor.EditorLinePainter"/>

    <extensionPoint name="cachesInvalidator" interface="consulo.ide.impl.idea.ide.caches.CachesInvalidator"/>

    <extensionPoint name="addModuleDependencyActionProvider"
                    interface="consulo.ide.setting.module.AddModuleDependencyActionProvider"/>

    <extensionPoint name="actionFromOptionDescriptorProvider" interface="consulo.ide.impl.idea.ide.ui.search.ActionFromOptionDescriptorProvider"/>

    <extensionPoint name="stripTrailingSpacesFilterFactory" interface="consulo.document.StripTrailingSpacesFilterFactory"/>

    <extensionPoint name="notification.parentGroup" beanClass="consulo.ide.impl.idea.notification.impl.NotificationParentGroupBean"/>
    <extensionPoint name="notification.group" beanClass="consulo.ide.impl.idea.notification.impl.NotificationGroupBean"/>

    <extensionPoint name="openapi.vcs.actions.AnnotateToggleAction.Provider"
                    interface="consulo.ide.impl.idea.openapi.vcs.actions.AnnotateToggleAction$Provider"/>

    <extensionPoint name="remote.credentialsType" interface="consulo.ide.impl.idea.remote.ext.CredentialsTypeEx"/>
    <extensionPoint name="remote.credentialsLanguageContribution"
                    interface="consulo.ide.impl.idea.remote.ext.CredentialsLanguageContribution"/>

    <extensionPoint name="fileChooseDialogProvider" interface="consulo.fileChooser.provider.FileChooseDialogProvider"/>
    <extensionPoint name="fileSaveDialogProvider" interface="consulo.fileChooser.provider.FileSaveDialogProvider"/>

    <extensionPoint name="textEditorHighlightingPassFactory" area="PROJECT" interface="consulo.ide.impl.idea.codeHighlighting.TextEditorHighlightingPassFactory"/>

    <extensionPoint name="searchEverywhereContributor" interface="consulo.ide.impl.idea.ide.actions.searcheverywhere.SearchEverywhereContributorFactory"/>
    <extensionPoint name="searchEverywhereClassifier" interface="consulo.ide.impl.idea.ide.actions.SearchEverywhereClassifier"/>
    <extensionPoint name="searchEverywhereResultsEqualityProvider" interface="consulo.ide.impl.idea.ide.actions.searcheverywhere.SEResultsEqualityProvider"/>

    <extensionPoint name="runAnything.executionProvider" interface="consulo.ide.impl.idea.ide.actions.runAnything.activity.RunAnythingProvider"/>
    <extensionPoint name="runAnything.commandHandler" interface="consulo.ide.impl.idea.ide.actions.runAnything.handlers.RunAnythingCommandHandler"/>
    <extensionPoint name="runAnything.commandCustomizer" interface="consulo.ide.impl.idea.ide.actions.runAnything.commands.RunAnythingCommandCustomizer"/>

    <extensionPoint name="searchScopesProvider" interface="consulo.content.scope.SearchScopeProvider"/>
    <extensionPoint name="findInProjectExtension" interface="consulo.ide.impl.idea.find.impl.FindInProjectExtension"/>

    <extensionPoint name="uiDecorator" interface="consulo.ui.ex.UIDecorator"/>

    <extensionPoint name="statusBarWidgetProvider" interface="consulo.project.ui.wm.StatusBarWidgetProvider"/>
    <extensionPoint name="statusBarWidgetFactory" interface="consulo.project.ui.wm.StatusBarWidgetFactory"/>

    <extensionPoint name="settingsEntryPointActionProvider" interface="consulo.ide.impl.idea.ide.actions.SettingsEntryPointActionProvider"/>
  </extensionPoints>

  <extensions defaultExtensionNs="consulo">

    <applicationService serviceInterface="consulo.ide.impl.idea.ide.passwordSafe.impl.providers.masterKey.PasswordDatabase"
                        serviceImplementation="consulo.ide.impl.idea.ide.passwordSafe.impl.providers.masterKey.PasswordDatabase"/>
    <applicationService serviceInterface="consulo.ide.impl.idea.ide.passwordSafe.config.PasswordSafeSettings"
                        serviceImplementation="consulo.ide.impl.idea.ide.passwordSafe.config.PasswordSafeSettings"/>
    <applicationService serviceInterface="consulo.ide.impl.idea.ide.passwordSafe.PasswordSafe"
                        serviceImplementation="consulo.ide.impl.idea.ide.passwordSafe.impl.PasswordSafeImpl"/>
    <applicationService serviceInterface="consulo.execution.process.ColoredOutputTypeRegistry"
                        serviceImplementation="consulo.execution.process.ColoredOutputTypeRegistry"/>


    <applicationService serviceInterface="consulo.colorScheme.TextAttributesKey$TextAttributeKeyDefaultsProvider"
                        serviceImplementation="consulo.ide.impl.idea.openapi.editor.colors.impl.TextAttributeKeyDefaultsProviderImpl"/>
    <applicationService serviceInterface="consulo.colorScheme.EditorColorsManager"
                        serviceImplementation="consulo.ide.impl.idea.openapi.editor.colors.impl.EditorColorsManagerImpl"/>
    <applicationService serviceInterface="consulo.component.store.impl.internal.PathMacrosService"
                        serviceImplementation="consulo.ide.impl.application.PathMacrosServiceImpl"/>



    <applicationService serviceInterface="consulo.ide.impl.idea.openapi.vcs.actions.AnnotationsSettings"
                        serviceImplementation="consulo.ide.impl.idea.openapi.vcs.actions.AnnotationsSettings"/>





    <projectService serviceInterface="consulo.ide.impl.idea.ide.errorTreeView.impl.ErrorTreeViewConfiguration"
                    serviceImplementation="consulo.ide.impl.idea.ide.errorTreeView.impl.ErrorTreeViewConfiguration"/>


    <projectService serviceInterface="consulo.fileEditor.SelectInEditorManager"
                    serviceImplementation="consulo.ide.impl.idea.ide.impl.SelectInEditorManagerImpl"/>
    <projectService serviceInterface="consulo.ide.impl.idea.ui.RecentsManager"
                    serviceImplementation="consulo.ide.impl.idea.ui.RecentsManager"/>
    <projectService serviceInterface="consulo.project.ui.view.MessageView"
                    serviceImplementation="consulo.ide.impl.idea.ui.content.impl.MessageViewImpl"/>





    <projectService serviceImplementation="consulo.execution.test.export.ExportTestResultsConfiguration"/>

    <projectService serviceInterface="consulo.ide.impl.idea.openapi.vcs.VcsFileListenerContextHelper"
                    serviceImplementation="consulo.ide.impl.idea.openapi.vcs.VcsFileListenerContextHelper"/>

    <projectService serviceInterface="consulo.document.LazyRangeMarkerFactory"
                    serviceImplementation="consulo.ide.impl.idea.openapi.editor.impl.LazyRangeMarkerFactoryImpl"/>

    <projectService serviceInterface="consulo.ide.impl.idea.openapi.project.ProjectReloadState"
                    serviceImplementation="consulo.ide.impl.idea.openapi.project.impl.ProjectReloadStateImpl"/>

    <projectService serviceImplementation="consulo.ide.impl.idea.execution.TestStateStorage"/>

    <projectService serviceInterface="consulo.ide.impl.idea.execution.testframework.sm.TestHistoryConfiguration"
                    serviceImplementation="consulo.ide.impl.idea.execution.testframework.sm.TestHistoryConfiguration"/>

    



    <postStartupActivity implementation="consulo.ide.impl.idea.ide.bookmarks.BookmarkManager$MyStartupActivity"/>

    <scopeParserExtension implementation="consulo.ide.impl.psi.search.scope.packageSet.FilePackageSetParserExtension"/>

    <editorActionHandler action="EditorEscape" implementationClass="consulo.ide.impl.idea.codeInsight.hint.EscapeHandler" id="hide-hints"/>

    <editorActionHandler action="EditorDelete" implementationClass="consulo.ide.impl.idea.openapi.editor.actions.DeleteSelectionHandler"
                         id="delete.for.selection"/>
    <editorActionHandler action="EditorBackSpace" implementationClass="consulo.ide.impl.idea.openapi.editor.actions.DeleteSelectionHandler"
                         id="backspace.for.selection" order="after backspace.lookup"/>

    <editorActionHandler action="EditorDelete" implementationClass="consulo.ide.impl.idea.openapi.editor.actions.DeleteInColumnModeHandler"
                         id="delete.in.column.mode"/>

    <statistics.usagesCollector implementation="consulo.ide.impl.idea.internal.statistic.UsageTrigger$MyCollector"/>

    <toolWindow id="Event Log" anchor="bottom" secondary="true"
                icon="consulo.platform.base.PlatformIconGroup@ide.notification.noevents"
                factoryClass="consulo.ide.impl.idea.notification.EventLogToolWindowFactory"/>

    <projectService serviceImplementation="consulo.ide.impl.idea.notification.EventLog$ProjectTracker" lazy="false"/>

    <patch.extension implementation="consulo.ide.impl.idea.openapi.diff.impl.patch.BaseRevisionTextPatchEP"/>
    <patch.extension implementation="consulo.ide.impl.idea.openapi.diff.impl.patch.CharsetEP"/>

    <localInspection shortName="InconsistentLineSeparators" bundle="consulo.language.editor.inspection.InspectionsBundle" key="inconsistent.line.separators"
                     groupKey="group.names.portability.issues" enabledByDefault="false" level="WARNING"
                     implementationClass="consulo.ide.impl.idea.codeStyle.InconsistentLineSeparatorsInspection"/>


    <projectService serviceInterface="consulo.ide.impl.idea.openapi.vcs.AbstractVcsHelper"
                    serviceImplementation="consulo.ide.impl.idea.openapi.vcs.impl.AbstractVcsHelperImpl"/>
    <projectService serviceInterface="consulo.ide.impl.idea.openapi.diff.DirDiffManager"
                    serviceImplementation="consulo.ide.impl.idea.openapi.diff.impl.dir.DirDiffManagerImpl"/>
    <projectService serviceImplementation="consulo.ide.impl.idea.openapi.vcs.contentAnnotation.VcsContentAnnotationSettings"/>
    


    <changesViewContent tabName="Repository" className="consulo.ide.impl.idea.openapi.vcs.changes.committed.CommittedChangesViewManager"
                        predicateClassName="consulo.ide.impl.idea.openapi.vcs.changes.committed.CommittedChangesVisibilityPredicate"/>
    <changesViewContent tabName="Incoming" className="consulo.ide.impl.idea.openapi.vcs.changes.committed.IncomingChangesViewProvider"
                        predicateClassName="consulo.ide.impl.idea.openapi.vcs.changes.committed.IncomingChangesVisibilityPredicate"/>


    <!--Rich-->


    <packaging.sourceItemProvider
        implementation="consulo.ide.impl.idea.openapi.roots.ui.configuration.artifacts.sourceItems.ModulesAndLibrariesSourceItemsProvider"/>
    <packaging.sourceItemProvider
        implementation="consulo.ide.impl.idea.openapi.roots.ui.configuration.artifacts.sourceItems.ArtifactsSourceItemsProvider"/>
    <packaging.artifactType implementation="consulo.ide.impl.packaging.impl.artifacts.ZipArtifactType" order="first" id="zip-artifact"/>
    <packaging.artifactType implementation="consulo.ide.impl.idea.packaging.impl.artifacts.PlainArtifactType" order="last"/>
    <gotoRelatedProvider implementation="consulo.ide.impl.idea.testIntegration.GotoTestRelatedProvider"/>

    <!-- Compiler -->
    <projectConfigurable instance="consulo.ide.impl.compiler.setting.CompilerConfigurable" id="project.propCompiler"
						 key="compiler.configurable.display.name" bundle="consulo.compiler.CompilerBundle" order="after project"/>

    <projectConfigurable id="project.propCompiler.excluded" bundle="consulo.compiler.CompilerBundle" key="actions.exclude.from.compile.text"
                         parentId="project.propCompiler"
                         instance="consulo.ide.impl.compiler.setting.CompilerExcludedConfigurable"/>

    <checkoutListener implementation="consulo.ide.impl.idea.openapi.vcs.checkout.ProjectImporterCheckoutListener"/>
    <vcsAwareCheckoutListener implementation="consulo.ide.impl.idea.openapi.vcs.checkout.RegisterMappingCheckoutListener"/>

    <orderRootTypeEditor key="binaries"
                         implementationClass="consulo.ide.impl.idea.openapi.roots.ui.configuration.libraryEditor.BinariesOrderRootTypeUIFactory"/>

    <orderRootTypeEditor key="sources"
                         implementationClass="consulo.ide.impl.idea.openapi.roots.ui.configuration.libraryEditor.SourcesOrderRootTypeUIFactory"/>

    <orderRootTypeEditor key="documentation"
                         implementationClass="consulo.ide.impl.idea.openapi.roots.ui.configuration.libraryEditor.DocumentationOrderRootTypeUIFactory"/>

    <statistics.usagesCollector implementation="consulo.ide.impl.idea.openapi.roots.ui.configuration.libraries.impl.LibraryUsageCollector"/>

    <copyPastePostProcessor implementation="consulo.ide.impl.idea.codeInsight.editorActions.CopyPasteFoldingProcessor"/>




    <projectService serviceInterface="consulo.ide.impl.roots.ui.configuration.projectRoot.daemon.ProjectStructureProblemsSettings"
                    serviceImplementation="consulo.ide.impl.idea.openapi.roots.ui.configuration.projectRoot.daemon.ProjectStructureProblemsSettingsImpl"/>

    <applicationService serviceInterface="consulo.ide.impl.roots.ui.configuration.projectRoot.daemon.ApplicationStructureProblemsSettings"
                        serviceImplementation="consulo.ide.impl.idea.openapi.roots.ui.configuration.projectRoot.daemon.GlobalProjectStructureProblemsSettings"/>

    <referencesSearch implementation="consulo.ide.impl.psi.impl.search.CachesBasedRefSearcher"/>
    <referencesSearch implementation="consulo.ide.impl.psi.impl.search.NonPhysicalReferenceSearcher"/>





    <applicationService serviceInterface="consulo.ide.impl.idea.codeInsight.template.impl.TemplateSettings"
                        serviceImplementation="consulo.ide.impl.idea.codeInsight.template.impl.TemplateSettings"/>
    <applicationService serviceInterface="consulo.ide.impl.idea.codeInsight.template.impl.ExportableTemplateSettings"
                        serviceImplementation="consulo.ide.impl.idea.codeInsight.template.impl.ExportableTemplateSettings"/>



    <applicationService serviceInterface="consulo.ide.impl.psi.statistics.StatisticsManager"
                        serviceImplementation="consulo.ide.impl.psi.statistics.impl.StatisticsManagerImpl"/>

    <applicationService serviceInterface="consulo.ide.impl.idea.codeInsight.intention.impl.config.IntentionManagerSettings"
                        serviceImplementation="consulo.ide.impl.idea.codeInsight.intention.impl.config.IntentionManagerSettings"/>

    <search.optionContributor implementation="consulo.ide.impl.idea.codeInsight.intention.impl.config.IntentionManagerSettings$IntentionSearchableOptionContributor"/>

    <applicationService serviceInterface="consulo.find.FindSettings"
                        serviceImplementation="consulo.ide.impl.idea.find.impl.FindSettingsImpl"/>
    <applicationService serviceImplementation="consulo.ide.impl.idea.find.impl.FindSettingsImpl$FindRecents"/>
    <projectService serviceInterface="consulo.find.FindInProjectSettings" serviceImplementation="consulo.ide.impl.idea.find.impl.FindInProjectRecents"/>

    <applicationService serviceInterface="consulo.language.editor.CodeInsightSettings"
                        serviceImplementation="consulo.language.editor.CodeInsightSettings"/>

    <applicationService serviceInterface="consulo.ide.impl.idea.openapi.roots.impl.libraries.ApplicationLibraryTable"
                        serviceImplementation="consulo.ide.impl.idea.openapi.roots.impl.libraries.ApplicationLibraryTable"/>

    <applicationService serviceInterface="consulo.ide.impl.idea.openapi.actionSystem.AbbreviationManager"
                        serviceImplementation="consulo.ide.impl.idea.openapi.actionSystem.impl.AbbreviationManagerImpl"/>




    <schemeOwner serviceInterface="consulo.language.codeStyle.CodeStyleSchemes"/>

    <applicationService serviceInterface="consulo.content.library.LibraryTablesRegistrar"
                        serviceImplementation="consulo.ide.impl.idea.openapi.roots.impl.libraries.LibraryTablesRegistrarImpl"/>

    <applicationService serviceInterface="consulo.content.library.LibraryDetectionManager"
                        serviceImplementation="consulo.ide.impl.idea.openapi.roots.impl.libraries.LibraryDetectionManagerImpl"/>

    <applicationService serviceInterface="consulo.ide.impl.idea.openapi.roots.libraries.LibraryTypeService"
                        serviceImplementation="consulo.ide.impl.idea.openapi.roots.impl.libraries.LibraryTypeServiceImpl"/>

    <applicationService serviceInterface="consulo.language.codeStyle.AppCodeStyleSettingsManager"
                        serviceImplementation="consulo.language.codeStyle.AppCodeStyleSettingsManager"/>

    <applicationService serviceInterface="consulo.ide.impl.psi.impl.source.resolve.reference.impl.providers.FileInfoManager"
                        serviceImplementation="consulo.ide.impl.psi.impl.source.resolve.reference.impl.providers.FileInfoManager"/>

    <applicationService serviceInterface="consulo.language.psi.search.IndexPatternSearch"
                        serviceImplementation="consulo.ide.impl.psi.impl.search.IndexPatternSearchImpl"/>

    
    <applicationService serviceInterface="consulo.ide.impl.language.codeStyle.ApplicationCodeStyleFacade"
                        serviceImplementation="consulo.ide.impl.psi.impl.source.codeStyle.ApplicationCodeStyleFacadeImpl"/>

    <applicationService serviceImplementation="consulo.ide.impl.psi.codeStyle.arrangement.engine.ArrangementEngine"/>
    <applicationService serviceImplementation="consulo.ide.impl.language.codeStyle.arrangement.MemberOrderService"/>

    <rearranger.ui implementation="consulo.ide.impl.idea.application.options.codeStyle.arrangement.component.DefaultArrangementUiComponentFactory"/>


    <projectService serviceInterface="consulo.ide.impl.idea.find.findInProject.FindInProjectManager"
                    serviceImplementation="consulo.ide.impl.idea.find.findInProject.FindInProjectManager"/>
    <projectService serviceInterface="consulo.ide.impl.idea.find.replaceInProject.ReplaceInProjectManager"
                    serviceImplementation="consulo.ide.impl.idea.find.replaceInProject.ReplaceInProjectManager"/>

    

    


    <projectService serviceInterface="consulo.module.ProjectLoadingErrorsNotifier"
                    serviceImplementation="consulo.ide.impl.idea.openapi.module.impl.ProjectLoadingErrorsNotifierImpl"/>

    <projectService serviceInterface="consulo.ide.impl.language.codeStyle.ProjectCodeStyleFacade"
                    serviceImplementation="consulo.ide.impl.psi.impl.source.codeStyle.ProjectCodeStyleFacadeImpl"/>

    <projectService serviceInterface="consulo.usage.UsageViewManager"
                    serviceImplementation="consulo.ide.impl.idea.usages.impl.UsageViewManagerImpl"/>

    <projectService serviceInterface="consulo.ide.impl.idea.analysis.AnalysisUIOptions"
                    serviceImplementation="consulo.ide.impl.idea.analysis.AnalysisUIOptions"/>

    <projectService serviceInterface="consulo.ide.impl.idea.ide.util.gotoByName.ChooseByNameFactory"
                    serviceImplementation="consulo.ide.impl.idea.ide.util.gotoByName.ChooseByNameFactoryImpl"/>

    <projectService serviceInterface="consulo.language.editor.refactoring.event.RefactoringListenerManager"
                    serviceImplementation="consulo.ide.impl.idea.refactoring.listeners.impl.RefactoringListenerManagerImpl"/>

    <projectService serviceInterface="consulo.ide.impl.idea.util.LogicalRootsManager"
                    serviceImplementation="consulo.ide.impl.idea.util.LogicalRootsManagerImpl"/>

    <projectService serviceInterface="consulo.ide.impl.idea.codeEditor.printing.ExportToHTMLSettings"
                    serviceImplementation="consulo.ide.impl.idea.codeEditor.printing.ExportToHTMLSettings"/>

    <projectService serviceInterface="consulo.execution.configuration.log.LogConsolePreferences"
                    serviceImplementation="consulo.execution.configuration.log.LogConsolePreferences"/>

    <projectService serviceInterface="consulo.ide.impl.idea.ide.util.gotoByName.GotoFileConfiguration"
                    serviceImplementation="consulo.ide.impl.idea.ide.util.gotoByName.GotoFileConfiguration"/>
    <projectService serviceInterface="consulo.ide.impl.idea.ide.util.gotoByName.GotoClassSymbolConfiguration"
                    serviceImplementation="consulo.ide.impl.idea.ide.util.gotoByName.GotoClassSymbolConfiguration"/>

    <projectService serviceInterface="consulo.ide.impl.idea.ide.hierarchy.HierarchyBrowserManager"
                    serviceImplementation="consulo.ide.impl.idea.ide.hierarchy.HierarchyBrowserManager"/>


    <namedScopesHolderProvider implementation="consulo.ide.impl.language.psi.search.scope.DefaultNamedScopesHolderProvider"/>

    <namedScopesHolderProvider implementation="consulo.ide.impl.idea.packageDependencies.DependencyValidationNamedScopesHolderProvider"/>

    <projectService serviceInterface="consulo.ide.impl.idea.packageDependencies.DependenciesToolWindow"
                    serviceImplementation="consulo.ide.impl.idea.packageDependencies.DependenciesToolWindow"/>

    <projectService serviceInterface="consulo.ide.impl.idea.codeInsight.documentation.DocumentationManager"
                    serviceImplementation="consulo.ide.impl.idea.codeInsight.documentation.DocumentationManager"/>

    <projectService serviceInterface="consulo.ide.impl.idea.moduleDependencies.DependenciesAnalyzeManager"
                    serviceImplementation="consulo.ide.impl.idea.moduleDependencies.DependenciesAnalyzeManager"/>

    <projectService serviceInterface="consulo.language.editor.ui.TreeFileChooserFactory"
                    serviceImplementation="consulo.ide.impl.idea.ide.util.TreeFileChooserFactoryImpl"/>

    <projectService serviceInterface="consulo.ide.impl.psi.impl.cache.CacheManager"
                    serviceImplementation="consulo.ide.impl.psi.impl.cache.impl.IndexCacheManagerImpl"/>


    <colorSettingsPage implementation="consulo.ide.impl.idea.openapi.options.colors.pages.GeneralColorsPage" id="general"/>
    <colorSettingsPage implementation="consulo.ide.impl.idea.openapi.options.colors.pages.DefaultLanguageColorsPage" id="defaultLanguage"/>
    <colorSettingsPage implementation="consulo.ide.impl.idea.openapi.options.colors.pages.ANSIColoredConsoleColorsPage" id="ansi"/>
    <colorSettingsPage implementation="consulo.ide.impl.idea.openapi.options.colors.pages.CustomColorsPage" id="custom"/>

    <elementDescriptionProvider implementation="consulo.ide.impl.psi.impl.DefaultPomTargetDescriptionProvider" order="last" id="pomDefault"/>

    <applicationService serviceInterface="consulo.ide.impl.idea.codeInspection.ex.AppInspectionProfilesVisibleTreeState"
                        serviceImplementation="consulo.ide.impl.idea.codeInspection.ex.AppInspectionProfilesVisibleTreeState"/>
    <projectService serviceInterface="consulo.ide.impl.idea.codeInspection.ex.ProjectInspectionProfilesVisibleTreeState"
                    serviceImplementation="consulo.ide.impl.idea.codeInspection.ex.ProjectInspectionProfilesVisibleTreeState"/>

    <applicationService serviceInterface="consulo.ide.impl.idea.application.options.codeStyle.CodeStyleSchemesUIConfiguration"
                        serviceImplementation="consulo.ide.impl.idea.application.options.codeStyle.CodeStyleSchemesUIConfiguration"/>

    <stepsBeforeRunProvider implementation="consulo.ide.impl.idea.tools.ToolBeforeRunTaskProvider"/>

    <lang.parserDefinition language="TEXT" implementationClass="consulo.language.impl.plain.PlainTextParserDefinition"/>
    <lang.syntaxHighlighterFactory language="TEXT" implementationClass="consulo.ide.impl.idea.openapi.fileTypes.PlainTextSyntaxHighlighterFactory"/>
    <lang.braceMatcher language="TEXT" implementationClass="consulo.ide.impl.idea.ide.highlighter.custom.impl.CustomFileTypeBraceMatcher"/>
    <lang.ast.leafFactory implementation="consulo.ide.impl.psi.impl.source.tree.PlainTextASTLeafFactory"/>

    <patternDialectProvider implementation="consulo.ide.impl.idea.packageDependencies.ui.ProjectPatternProvider" id="file"/>
    <customScopesProvider implementation="consulo.ide.impl.idea.packageDependencies.DefaultScopesProvider"/>
    <customScopesProvider implementation="consulo.ide.impl.packageDependencies.SourceScopeProvider"/>
    <customScopesProvider implementation="consulo.ide.impl.idea.packageDependencies.TestScopeProvider"/>
    <customScopesProvider implementation="consulo.ide.impl.packageDependencies.ResourceScopeProvider"/>
    <customScopesProvider implementation="consulo.ide.impl.packageDependencies.TestResourceScopeProvider"/>
    <customScopesProvider implementation="consulo.ide.impl.idea.vcs.changes.ChangeListsScopesProvider" order="last"/>
    <refactoring.elementListenerProvider implementation="consulo.ide.impl.idea.packageDependencies.ui.RefactoringScopeElementListenerProvider"/>

    <searchScopesProvider implementation="consulo.ide.impl.psi.search.DefaultSearchScopeProviders$Favorites"/>
    <searchScopesProvider implementation="consulo.ide.impl.idea.vcs.changes.ChangeListsSearchScopeProvider"/>
    <searchScopesProvider implementation="consulo.ide.impl.psi.search.DefaultSearchScopeProviders$CustomNamed" order="last"/>


    <syntaxHighlighter factoryClass="consulo.ide.impl.idea.openapi.fileTypes.LanguageFileTypeHighlighterProvider"/>
    <structureViewBuilder factoryClass="consulo.ide.impl.idea.ide.highlighter.LanguageFileTypeStructureViewBuilderProvider"/>

    <lang.elementManipulator forClass="consulo.language.plain.psi.PsiPlainTextFile"
                             implementationClass="consulo.ide.impl.psi.impl.source.resolve.reference.impl.manipulators.PlainFileManipulator"/>
    <lang.elementManipulator forClass="consulo.language.psi.PsiComment"
                             implementationClass="consulo.ide.impl.psi.impl.source.resolve.reference.impl.manipulators.PsiCommentManipulator"/>

    <applicationService serviceInterface="consulo.pathMacro.MacroManager" serviceImplementation="consulo.pathMacro.impl.internal.MacroManagerImpl"/>
    <hectorComponentProvider implementation="consulo.ide.impl.idea.codeInsight.daemon.impl.FileIncludeContextHectorProvider"/>

    <statistician key="completion" implementationClass="consulo.ide.impl.idea.codeInsight.completion.DecoratorCompletionStatistician" order="first"
				  id="decorator"/>
    <statistician key="completion" implementationClass="consulo.ide.impl.idea.codeInsight.completion.DefaultCompletionStatistician" order="last"/>

    <weigher key="proximity" implementationClass="consulo.ide.impl.psi.util.proximity.OpenedInEditorWeigher" id="openedInEditor"/>
    <weigher key="proximity" implementationClass="consulo.ide.impl.psi.util.proximity.SameLogicalRootWeigher" id="sameLogicalRoot"
             order="after openedInEditor"/>
    <weigher key="proximity" implementationClass="consulo.ide.impl.psi.util.proximity.SameModuleWeigher" id="sameModule"
             order="after sameLogicalRoot"/>
    <weigher key="proximity" implementationClass="consulo.ide.impl.psi.util.proximity.SdkOrLibraryWeigher" id="sdkOrLibrary"
             order="after sameModule"/>

    <weigher key="completion" implementationClass="consulo.ide.impl.idea.codeInsight.completion.PriorityWeigher" id="priority" order="first"/>
    <weigher key="completion" implementationClass="consulo.ide.impl.idea.codeInsight.completion.StatisticsWeigher" id="stats"
			 order="after priority"/>
    <weigher key="completion" implementationClass="consulo.ide.impl.idea.codeInsight.completion.PrefixMatchingWeigher" id="prefix"
			 order="after stats"/>
    <weigher key="completion" implementationClass="consulo.ide.impl.idea.codeInsight.completion.ExplicitProximityWeigher" id="explicitProximity"
			 order="after prefix"/>
    <weigher key="completion" implementationClass="consulo.ide.impl.idea.codeInsight.completion.LookupElementProximityWeigher" id="proximity"
			 order="after explicitProximity"/>
    <weigher key="completion" implementationClass="consulo.ide.impl.idea.codeInsight.completion.GroupingWeigher" id="grouping"
			 order="last"/>

    <completion.contributor language="any" implementationClass="consulo.ide.impl.idea.codeInsight.completion.DefaultCompletionContributor"
                            id="default"
                            order="last"/>
    <completion.contributor language="any" implementationClass="consulo.ide.impl.idea.codeInsight.completion.ComboEditorCompletionContributor"
                            id="comboEditor" order="first"/>
    <completion.contributor language="any" implementationClass="consulo.ide.impl.idea.codeInsight.completion.WordCompletionContributor"
                            id="wordCompletion" order="last"/>
    <completion.contributor language="any" implementationClass="consulo.ide.impl.idea.codeInsight.completion.LegacyCompletionContributor" id="legacy"
							order="last"/>
    <completion.contributor language="any" implementationClass="consulo.ide.impl.idea.codeInsight.completion.FilePathCompletionContributor"
                            id="filePath" order="before javaClassName"/>
    <completion.contributor language="any" implementationClass="consulo.ide.impl.idea.codeInsight.template.impl.LiveTemplateCompletionContributor"
                            id="liveTemplates" order="first"/>

    <completion.contributor language="TEXT" implementationClass="consulo.ide.impl.idea.openapi.vcs.CommitCompletionContributor" id="commitCompletion"
							order="first, before liveTemplates"/>


    <applicationService serviceInterface="consulo.ide.impl.idea.execution.console.ConsoleFoldingSettings"
                        serviceImplementation="consulo.ide.impl.idea.execution.console.ConsoleFoldingSettings"/>
    <console.folding implementation="consulo.ide.impl.idea.execution.console.SubstringConsoleFolding"/>

    <lookup.charFilter implementation="consulo.ide.impl.idea.codeInsight.template.impl.LiveTemplateCharFilter" order="first" id="liveTemplate"/>
    <lookup.charFilter implementation="consulo.ide.impl.idea.codeInsight.completion.CompletionCharFilter" order="last" id="completion"/>
    <lookup.charFilter implementation="consulo.ide.impl.idea.refactoring.IdentifierCharFilter" id="identifier" order="last"/>
    <lookup.charFilter implementation="consulo.ide.impl.psi.impl.source.resolve.reference.impl.providers.FileReferenceCharFilter" id="fileRef"
                       order="before completion"/>

    <gotoFileContributor implementation="consulo.ide.impl.idea.ide.util.gotoByName.DefaultFileNavigationContributor"/>

    <gotoRelatedProvider implementation="consulo.ide.impl.idea.ide.actions.RelatedItemLineMarkerGotoAdapter"/>

    <elementLookupRenderer implementation="consulo.ide.impl.idea.codeInsight.template.impl.TemplateLookupRenderer"/>

    <customPasteProvider implementation="consulo.ide.impl.idea.ide.actions.PasteReferenceProvider"/>

    <referenceInjector implementation="consulo.ide.impl.idea.codeInsight.daemon.impl.analysis.encoding.EncodingReferenceInjector"/>


    <applicationService serviceImplementation="consulo.ide.impl.psi.templateLanguages.TemplateDataLanguagePatterns"/>


    <findUsagesHandlerFactory implementation="consulo.ide.impl.idea.find.findUsages.DefaultFindUsagesHandlerFactory" id="default" order="last"/>

    <extendWordSelectionHandler implementation="consulo.ide.impl.idea.codeInsight.editorActions.wordSelection.PlainTextLineSelectioner"/>
    <extendWordSelectionHandler implementation="consulo.ide.impl.idea.codeInsight.editorActions.wordSelection.NaturalLanguageTextSelectioner"/>
    <extendWordSelectionHandler implementation="consulo.ide.impl.idea.codeInsight.editorActions.wordSelection.WordSelectioner"/>
    <extendWordSelectionHandler implementation="consulo.ide.impl.idea.codeInsight.editorActions.wordSelection.LineCommentSelectioner"/>

    <syntaxHighlighter factoryClass="consulo.ide.impl.idea.ide.highlighter.custom.impl.CustomFileTypeHighlighterProvider"/>
    <fileTypeRegistrator implementation="consulo.ide.impl.idea.ide.highlighter.custom.impl.StandardFileTypeRegistrator"/>

    <statementUpDownMover implementation="consulo.ide.impl.idea.codeInsight.editorActions.moveUpDown.LineMover" id="line" order="last"/>

    <enterHandlerDelegate implementation="consulo.ide.impl.idea.codeInsight.editorActions.enter.EnterInStringLiteralHandler"/>
    <enterHandlerDelegate implementation="consulo.ide.impl.idea.codeInsight.editorActions.enter.EnterInLineCommentHandler"/>
    <enterHandlerDelegate implementation="consulo.ide.impl.idea.codeInsight.editorActions.enter.EnterAfterUnmatchedBraceHandler" id="afterUnmatchedBrace"/>
    <enterHandlerDelegate implementation="consulo.ide.impl.idea.codeInsight.editorActions.enter.EnterBetweenBracesFinalHandler"
                          id="EnterBetweenBracesHandler"/>
    <enterHandlerDelegate implementation="consulo.ide.impl.idea.codeInsight.editorActions.enter.EnterAfterJavadocTagHandler"/>

    <codeInsight.linkHandler prefix="#inspection/" handlerClass="consulo.ide.impl.idea.codeInsight.hint.InspectionDescriptionLinkHandler"/>
    <codeInsight.linkHandler prefix="#navigation/" handlerClass="consulo.ide.impl.idea.codeInsight.hint.NavigationLinkHandler"/>

    <codeInsight.lineMarkerProvider language="" implementationClass="consulo.ide.impl.idea.execution.lineMarker.RunLineMarkerProvider"/>
    <codeInsight.lineMarkerProvider language="" implementationClass="consulo.ide.impl.idea.ui.ColorLineMarkerProvider"/>

    <applicationConfigurable id="editor.preferences.folding.general"
                             parentId="editor.preferences.folding"
                             displayName="General"
                             instance="consulo.ide.impl.idea.application.options.editor.GeneralCodeFoldingConfigurable"/>

    <projectService serviceInterface="consulo.virtualFileSystem.encoding.EncodingProjectManager" serviceImplementation="consulo.ide.impl.idea.openapi.vfs.encoding.EncodingProjectManagerImpl"/>
    <postStartupActivity implementation="consulo.ide.impl.idea.openapi.vfs.encoding.EncodingProjectManagerImpl$EncodingProjectManagerStartUpActivity"/>

    <editorTabColorProvider implementation="consulo.ide.impl.idea.ui.tabs.EditorTabColorProviderImpl"/>

    <intentionAction>
      <className>consulo.ide.impl.idea.codeInsight.intention.impl.EditFoldingOptionsAction</className>
    </intentionAction>
    <intentionAction>
      <className>consulo.language.editor.impl.intention.QuickEditAction</className>
      <category>Language Injection</category>
    </intentionAction>

    <!-- CodeInsightSettings -->
    <editorActionHandler action="EditorEnter" implementationClass="consulo.ide.impl.idea.codeInsight.editorActions.EnterHandler" id="editorEnter"/>
    <editorActionHandler action="EditorLineEnd" implementationClass="consulo.ide.impl.idea.codeInsight.editorActions.EndHandler"/>
    <editorActionHandler action="EditorSelectWord" implementationClass="consulo.ide.impl.idea.codeInsight.editorActions.SelectWordHandler"/>
    <editorActionHandler action="EditorUnSelectWord" implementationClass="consulo.ide.impl.idea.codeInsight.editorActions.UnSelectWordHandler"/>
    <editorActionHandler action="EditorPaste" implementationClass="consulo.ide.impl.idea.codeInsight.editorActions.PasteHandler"/>
    <editorActionHandler action="EditorCopy" implementationClass="consulo.ide.impl.idea.codeInsight.editorActions.CopyHandler"/>
    <editorActionHandler action="EditorCut" implementationClass="consulo.ide.impl.idea.codeInsight.editorActions.CutHandler"/>
    <editorActionHandler action="EditorJoinLines" implementationClass="consulo.ide.impl.idea.codeInsight.editorActions.JoinLinesHandler"/>
    <editorActionHandler action="EditorBackSpace" implementationClass="consulo.ide.impl.idea.codeInsight.editorActions.BackspaceHandler"/>
    <editorActionHandler action="EditorDeleteToWordStart"
                         implementationClass="consulo.ide.impl.idea.codeInsight.editorActions.BackspaceToWordStartHandler"/>
    <editorTypedHandler implementationClass="consulo.ide.impl.idea.codeInsight.editorActions.TypedHandler" order="first"/>

    <editorActionHandler action="EditorDuplicate" implementationClass="consulo.ide.impl.idea.openapi.editor.actions.NamedElementDuplicateHandler"/>

    <!-- LookupManagerActions -->
    <editorActionHandler action="EditorUp" implementationClass="consulo.ide.impl.idea.codeInsight.lookup.impl.LookupActionHandler$UpHandler"/>
    <editorActionHandler action="EditorDown" implementationClass="consulo.ide.impl.idea.codeInsight.lookup.impl.LookupActionHandler$DownHandler"/>
    <editorActionHandler action="EditorPageUp"
                         implementationClass="consulo.ide.impl.idea.codeInsight.lookup.impl.LookupActionHandler$PageUpHandler"/>
    <editorActionHandler action="EditorPageDown"
                         implementationClass="consulo.ide.impl.idea.codeInsight.lookup.impl.LookupActionHandler$PageDownHandler"/>
    <editorActionHandler action="EditorLeft" implementationClass="consulo.ide.impl.idea.codeInsight.lookup.impl.LookupActionHandler$LeftHandler"/>
    <editorActionHandler action="EditorRight" implementationClass="consulo.ide.impl.idea.codeInsight.lookup.impl.LookupActionHandler$RightHandler"/>
    <editorActionHandler action="EditorLineStart" implementationClass="consulo.ide.impl.idea.codeInsight.lookup.impl.HomeHandler"/>
    <editorActionHandler action="EditorLineEnd" implementationClass="consulo.ide.impl.idea.codeInsight.lookup.impl.EndHandler"/>
    <editorActionHandler action="EditorBackSpace" implementationClass="consulo.ide.impl.idea.codeInsight.lookup.impl.BackspaceHandler"/>

    <!-- TemplateManagerActions -->
    <editorActionHandler action="EditorEscape" implementationClass="consulo.ide.impl.idea.codeInsight.template.impl.editorActions.EscapeHandler"
                         id="templateEscape" order="before hide-hints"/>
    <editorActionHandler action="EditorEnter" implementationClass="consulo.ide.impl.idea.codeInsight.template.impl.editorActions.EnterHandler"
                         id="templateEnter" order="before editorEnter"/>
    <editorActionHandler action="EditorLineStart" implementationClass="consulo.ide.impl.idea.codeInsight.template.impl.editorActions.TemplateLineStartHandler"/>
    <editorActionHandler action="EditorLineStartWithSelection"
                         implementationClass="consulo.ide.impl.idea.codeInsight.template.impl.editorActions.TemplateLineStartWithSelectionHandler"/>
    <editorActionHandler action="EditorLineEnd" implementationClass="consulo.ide.impl.idea.codeInsight.template.impl.editorActions.TemplateLineEndHandler"/>
    <editorActionHandler action="EditorLineEndWithSelection"
                         implementationClass="consulo.ide.impl.idea.codeInsight.template.impl.editorActions.TemplateLineEndWithSelectionHandler"/>
    <editorActionHandler action="$SelectAll" implementationClass="consulo.ide.impl.idea.codeInsight.template.impl.editorActions.SelectAllHandler"/>


    <!-- HighlightManagerActions -->
    <editorActionHandler action="EditorEscape" implementationClass="consulo.ide.impl.idea.codeInsight.highlighting.EscapeHandler"
                         order="after hide-hints"/>
    <editorActionHandler action="EditorEscape" implementationClass="consulo.ide.impl.idea.refactoring.rename.inplace.EscapeHandler"
                         order="before hide-hints"/>

    <editorTypedHandler implementationClass="consulo.ide.impl.idea.codeInsight.lookup.impl.LookupTypedHandler" id="lookup"/>


    <liveTemplateContext id="OTHER" implementation="consulo.language.editor.template.context.EverywhereContextType" order="last"/>


    <codeStyleSettingsProvider implementation="consulo.ide.impl.idea.application.options.GeneralCodeStyleSettingsProvider"/>
    <codeStyleSettingsProvider implementation="consulo.ide.impl.idea.application.options.codeStyle.OtherFileTypesCodeStyleOptionsProvider" order="last"/>

    
    
    <projectService serviceInterface="consulo.execution.ui.layout.RunnerLayoutUi$Factory"
                    serviceImplementation="consulo.ide.impl.idea.execution.ui.layout.impl.RunnerLayoutUiFactoryImpl"/>
   

    <toolWindow id="Project"
                anchor="left"
                icon="consulo.platform.base.PlatformIconGroup@toolwindows.toolwindowproject"
                displayName="consulo.platform.base.IdeLocalize@title.project"
                factoryClass="consulo.ide.impl.idea.ide.projectView.impl.ProjectViewToolWindowFactory"/>
    <toolWindow id="TODO" anchor="bottom" icon="consulo.platform.base.PlatformIconGroup@toolwindows.toolwindowtodo"
				factoryClass="consulo.ide.impl.idea.ide.todo.TodoToolWindowFactory" canCloseContents="true"/>
    <toolWindow id="Structure" anchor="left" icon="consulo.platform.base.PlatformIconGroup@toolwindows.toolwindowstructure" secondary="true"
                factoryClass="consulo.ide.impl.idea.ide.structureView.impl.StructureViewToolWindowFactory"/>
    <toolWindow id="Favorites" anchor="left" icon="consulo.platform.base.PlatformIconGroup@toolwindows.toolwindowfavorites" secondary="true"
                factoryClass="consulo.ide.impl.idea.ide.projectView.impl.FavoritesViewToolWindowFactory"/>
    <toolWindow id="Run Dashboard" anchor="bottom" icon="consulo.platform.base.PlatformIconGroup@toolwindows.toolwindowrun"
                factoryClass="consulo.ide.impl.idea.execution.dashboard.RunDashboardToolWindowFactory"
                conditionClass="consulo.ide.impl.idea.execution.dashboard.RunDashboardToolWindowFactory"/>

    <psi.fileReferenceHelper implementation="consulo.language.editor.impl.internal.psi.path.PsiFileReferenceHelper"/>
    <psi.fileReferenceHelper implementation="consulo.language.editor.impl.internal.psi.path.JarFileReferenceHelper"/>
    <psi.fileReferenceHelper implementation="consulo.ide.impl.psi.impl.source.resolve.reference.impl.providers.HttpFileReferenceHelper"/>
    <psi.fileReferenceHelper implementation="consulo.language.psi.path.NullFileReferenceHelper" order="last"/>
    <psi.referenceContributor implementation="consulo.ide.impl.psi.impl.source.resolve.reference.CommentsReferenceContributor"/>
    <referenceProviderType key="commentsReferenceProvider"
                           implementationClass="consulo.ide.impl.psi.impl.source.resolve.reference.ArbitraryPlaceUrlReferenceProvider"/>

    <uiDebuggerExtension implementation="consulo.ide.impl.idea.ui.debugger.extensions.ActionTracer"/>

    <globalInspection shortName="Annotator" displayName="Annotator" groupKey="inspection.general.tools.group.name" groupBundle="consulo.language.editor.inspection.InspectionsBundle"
                      enabledByDefault="true" level="ERROR"
                      implementationClass="consulo.ide.impl.idea.codeInsight.daemon.impl.DefaultHighlightVisitorBasedInspection$AnnotatorBasedInspection"/>
    <globalInspection shortName="SyntaxError" displayName="Syntax error" groupKey="inspection.general.tools.group.name" groupBundle="consulo.language.editor.inspection.InspectionsBundle"
                      enabledByDefault="true" level="ERROR"
                      implementationClass="consulo.ide.impl.idea.codeInsight.daemon.impl.DefaultHighlightVisitorBasedInspection$SyntaxErrorInspection"/>
    <localInspection shortName="LossyEncoding" bundle="consulo.language.editor.inspection.InspectionsBundle" key="lossy.encoding"
                     groupKey="group.names.internationalization.issues" enabledByDefault="true" level="WARNING"
                     implementationClass="consulo.ide.impl.idea.codeInspection.LossyEncodingInspection"/>

    <applicationService serviceInterface="consulo.language.editor.template.TemplateBuilderFactory"
                        serviceImplementation="consulo.language.editor.impl.internal.template.TemplateBuilderFactoryImpl"/>

    <projectViewPane implementation="consulo.ide.impl.idea.ide.scopeView.ScopeViewPane"/>

    <renameHandler implementation="consulo.language.editor.refactoring.rename.inplace.VariableInplaceRenameHandler"/>
    <renameHandler implementation="consulo.language.editor.refactoring.rename.inplace.MemberInplaceRenameHandler"/>
    <completion.contributor language="any"
                            implementationClass="consulo.ide.impl.idea.refactoring.rename.inplace.CompletionContributorForInplaceRename"
                            order="first"/>

    <projectService serviceInterface="consulo.ide.impl.idea.openapi.vcs.changes.ui.ChangesFileNameDecorator"
                    serviceImplementation="consulo.ide.impl.idea.openapi.vcs.changes.ui.WolfChangesFileNameDecorator"/>

    <filePasteProvider implementation="consulo.ide.impl.idea.ide.FileListPasteProvider"/>

    <definitionsScopedSearch implementation="consulo.language.impl.internal.pom.PomDefinitionSearch"/>



    <indexPatternProvider implementation="consulo.ide.impl.idea.ide.todo.TodoIndexPatternProvider"/>

    <copyPastePostProcessor implementation="consulo.ide.impl.idea.codeInsight.editorActions.CopyPasteIndentProcessor"/>
    <statistics.usagesCollector implementation="consulo.ide.impl.idea.execution.impl.statistics.RunConfigurationTypeUsagesCollector"/>
    <statistics.usagesCollector implementation="consulo.ide.impl.idea.execution.impl.statistics.TemporaryRunConfigurationTypeUsagesCollector"/>
    <statistics.usagesCollector implementation="consulo.ide.impl.idea.openapi.fileTypes.FileTypeUsagesCollector"/>

    <renamePsiElementProcessor implementation="consulo.ide.impl.idea.refactoring.rename.RenamePsiFileProcessor" order="last"/>

    <refactoring.elementListenerProvider implementation="consulo.ide.impl.idea.execution.impl.RunConfigurationRefactoringElementListenerProvider"/>

    <inspectionsReportConverter implementation="consulo.ide.impl.idea.codeInspection.ex.PlainTextFormatter"/>

    <refactoring.moveDirectoryWithClassesHelper
			implementation="consulo.ide.impl.idea.refactoring.move.moveClassesOrPackages.MoveDirectoryWithClassesHelper$Default" order="last"/>

    <checkinHandlerFactory implementation="consulo.ide.impl.idea.openapi.vcs.checkin.ReformatCheckinHandlerFactory"/>
    <checkinHandlerFactory implementation="consulo.ide.impl.idea.openapi.vcs.checkin.RearrangeCheckinHandlerFactory"/>
    <checkinHandlerFactory implementation="consulo.ide.impl.idea.openapi.vcs.checkin.OptimizeOptionsCheckinHandlerFactory"/>
    <checkinHandlerFactory implementation="consulo.ide.impl.idea.openapi.vcs.checkin.CodeAnalysisCheckinHandlerFactory"/>
    <checkinHandlerFactory implementation="consulo.ide.impl.idea.openapi.vcs.checkin.TodoCheckinHandlerFactory"/>
    <checkinHandlerFactory implementation="consulo.ide.impl.idea.openapi.vcs.checkin.CodeCleanupCheckinHandlerFactory"/>


    <itemPresentationProvider forClass="consulo.language.psi.PsiDirectory"
                              implementationClass="consulo.ide.impl.idea.navigation.DirectoryPresentationProvider"/>



    <customFoldingProvider implementation="consulo.ide.impl.idea.lang.customFolding.NetBeansCustomFoldingProvider"/>
    <customFoldingProvider implementation="consulo.ide.impl.idea.lang.customFolding.VisualStudioCustomFoldingProvider"/>

    <completion.contributor language="TEXT" implementationClass="consulo.ide.impl.idea.ui.TextFieldWithAutoCompletionContributor"
                            order="first, before commitCompletion"/>

    <completion.contributor language="TEXT" implementationClass="consulo.ide.impl.idea.util.CompletionContributorForTextField"
                            order="first, before commitCompletion"/>

    <completion.contributor language="any" implementationClass="consulo.ide.impl.idea.codeInsight.completion.CustomFileTypeCompletionContributor"/>

    <pathMacroFilter implementation="consulo.ide.impl.idea.execution.configuration.RunConfigurationPathMacroFilter"/>
    <pathMacroFilter implementation="consulo.ide.impl.idea.openapi.application.StructuralSearchPathMacroFilter"/>

    <usageContextPanelProvider implementation="consulo.ide.impl.idea.usages.impl.UsagePreviewPanel$Provider"/>
    <usageContextPanelProvider implementation="consulo.ide.impl.idea.usageView.impl.UsageContextCallHierarchyPanel$Provider"/>


    <applicationService serviceInterface="consulo.ui.ex.tree.TreeAnchorizer"
                        serviceImplementation="consulo.ide.impl.idea.ide.projectView.impl.nodes.PsiTreeAnchorizer"/>

    <!--Platform-->
    <applicationService serviceInterface="consulo.ide.impl.idea.packageDependencies.DependenciesVisitorFactory"
                        serviceImplementation="consulo.ide.impl.idea.packageDependencies.DependenciesVisitorFactory"/>

    <projectService serviceInterface="consulo.ide.impl.idea.openapi.vcs.changes.patch.PatchBaseDirectoryDetector"
                    serviceImplementation="consulo.ide.impl.idea.openapi.vcs.changes.patch.PsiPatchBaseDirectoryDetector"/>

    <refactoring.copyHandler implementation="consulo.ide.impl.idea.refactoring.copy.CopyFilesOrDirectoriesHandler"/>
    <refactoring.moveHandler implementation="consulo.ide.impl.idea.refactoring.move.moveFilesOrDirectories.MoveFilesOrDirectoriesHandler"
                             id="moveFileOrDir"/>

    <projectConfigurable instance="consulo.ide.impl.idea.ide.util.scopeChooser.ScopeChooserConfigurable"
                         id="project.scopes" parentId="general"
                         key="scopes.display.name" bundle="consulo.ide.IdeBundle"/>


    <weigher key="proximity" implementationClass="consulo.ide.impl.psi.util.proximity.SameDirectoryWeigher" id="sameDirectory"
             order="after openedInEditor"/>


    <compiler implementation="consulo.ide.impl.idea.packaging.impl.compiler.ArtifactsCompiler" id="artifactsCompiler" order="last"/>
    <compiler implementation="consulo.ide.impl.idea.compiler.impl.resourceCompiler.ResourceCompiler" id="resourceCompiler"/>

    <projectConfigurable parentId="project.propCompiler"
                         instance="consulo.ide.impl.compiler.resourceCompiler.ResourceCompilerConfigurable"
                         key="resource.compiler.description" bundle="consulo.compiler.CompilerBundle"/>


    <search.topHitProvider implementation="consulo.ide.impl.idea.platform.DefaultPlatformTopHitProvider"/>
    <search.topHitProvider implementation="consulo.ide.impl.idea.ide.ui.UISimpleSettingsProvider"/>



    <consoleFilterProvider implementation="consulo.ide.impl.idea.execution.filters.UrlFilter$UrlFilterProvider"/>

    <schemeOwner serviceInterface="consulo.language.editor.inspection.scheme.InspectionProfileManager"/>



    <qualifiedNameProvider implementation="consulo.ide.impl.actions.DefaultPackageQualifiedNameProvider" id="defaultPackage" order="last"/>

    <pathMacroExpendableProtocol protocol="zip"/>

    <defaultHighlightingSettingProvider implementation="consulo.ide.impl.idea.codeInsight.daemon.impl.analysis.GeneratedSourcesHighlightingSettingProvider"/>

    <actionPromoter implementation="consulo.ide.impl.idea.ui.EditorTextFieldActionPromoter"/>
    <actionPromoter implementation="consulo.ide.impl.idea.ui.ToolbarDecoratorActionPromoter"/>
    <actionPromoter implementation="consulo.ide.impl.idea.openapi.vcs.actions.VcsActionPromoter"/>

    <copyPastePostProcessor implementation="consulo.ide.impl.idea.openapi.editor.richcopy.TextWithMarkupProcessor"/>
    <!--the following binding uses 'first' order to make sure it captures raw text before any other processor modifies it -->
    <copyPastePreProcessor implementation="consulo.ide.impl.idea.openapi.editor.richcopy.TextWithMarkupProcessor$RawTextSetter" order="first" id="richcopy"/>

    <backspaceHandlerDelegate implementation="consulo.ide.impl.idea.codeInsight.editorActions.SimpleIndentingBackspaceHandler"/>
    <backspaceHandlerDelegate implementation="consulo.ide.impl.idea.codeInsight.editorActions.SmartIndentingBackspaceHandler"/>

    <fileIndentOptionsProvider implementation="consulo.ide.impl.psi.codeStyle.DetectableIndentOptionsProvider" order="last"/>

    <bidiRegionsSeparator language="" implementationClass="consulo.ide.impl.idea.openapi.editor.bidi.PlainTextBidiRegionsSeparator"/>

    <additionalTextAttributes scheme="Default" file="/colorSchemes/ext/FindViewColorsScheme.xml"/>
    <additionalTextAttributes scheme="Darcula" file="/colorSchemes/ext/FindViewColorsScheme.xml"/>

    <extensionExtender key="consulo.orderEntryType" implementationClass="consulo.module.impl.internal.layer.orderEntry.CustomOrderEntryTypeExtender" />

    <orderEntryTypeEditor key="library" implementationClass="consulo.ide.impl.roots.orderEntry.LibraryOrderEntryTypeEditor"/>
    <orderEntryTypeEditor key="module-extension-sdk" implementationClass="consulo.ide.impl.roots.orderEntry.ModuleExtensionWithSdkOrderEntryTypeEditor"/>
    <orderEntryTypeEditor key="module-library" implementationClass="consulo.ide.impl.roots.orderEntry.ModuleLibraryOrderEntryTypeEditor"/>
    <orderEntryTypeEditor key="module" implementationClass="consulo.ide.impl.roots.orderEntry.ModuleOrderEntryTypeEditor"/>
    <orderEntryTypeEditor key="sourceFolder" implementationClass="consulo.ide.impl.roots.orderEntry.ModuleSourceOrderEntryTypeEditor"/>
    <orderEntryTypeEditor key="" implementationClass="consulo.ide.impl.roots.orderEntry.UnknownOrderEntryTypeEditor"/>

    <customFileDropHandler implementation="consulo.ide.impl.idea.openapi.vcs.changes.patch.PatchFileDropHandler"/>

    <vcs.ignoredFileProvider implementation="consulo.ide.impl.idea.openapi.vcs.changes.ChangeListManagerImpl$DefaultIgnoredFileProvider" order="last"/>
    <vcs.ignoredFileProvider implementation="consulo.ide.impl.configurationStore.vcs.StoreIgnoredFileProvider"/>

    <lineIndentProvider
        implementation="consulo.ide.impl.psi.impl.source.codeStyle.lineIndent.FormatterBasedLineIndentProvider"
        order="last"/>

    <projectService serviceInterface="consulo.ide.impl.idea.execution.dashboard.RunDashboardManager"
                    serviceImplementation="consulo.ide.impl.idea.execution.dashboard.RunDashboardManagerImpl"/>
    <runDashboardGroupingRule implementation="consulo.ide.impl.idea.execution.dashboard.tree.ConfigurationTypeDashboardGroupingRule"/>
    <runDashboardGroupingRule implementation="consulo.ide.impl.idea.execution.dashboard.tree.StatusDashboardGroupingRule"/>
    <runDashboardGroupingRule implementation="consulo.ide.impl.idea.execution.dashboard.tree.FolderDashboardGroupingRule"/>
    <runDashboardGroupingRule implementation="consulo.ide.impl.idea.execution.dashboard.tree.RunConfigurationDashboardGroupingRule"/>

    <editorActionHandler action="EditorEscape" implementationClass="consulo.ide.impl.idea.refactoring.changeSignature.inplace.EscapeHandler" id="changeSignatureEscape"
						 order="before hide-search"/>

    <idIndexer filetype="PLAIN_TEXT" implementationClass="consulo.ide.impl.psi.impl.cache.impl.id.PlainTextIndexer"/>
    <todoIndexer filetype="PLAIN_TEXT" implementationClass="consulo.ide.impl.psi.impl.cache.impl.todo.PlainTextTodoIndexer"/>


    <applicationService serviceImplementation="consulo.ide.impl.idea.ide.ScreenReaderSupportHandler" lazy="false"/>

    <lang.formatter.restriction implementation="consulo.ide.impl.idea.formatting.ExcludedFileFormattingRestriction"/>



    <daemon.tooltipActionProvider order="last" id="defaultProvider" implementation="consulo.ide.impl.idea.codeInsight.daemon.impl.DaemonTooltipActionProvider"/>

    <vfs.asyncListener implementation="consulo.ide.impl.idea.openapi.fileEditor.impl.FileDocumentManagerImpl$MyAsyncFileListener"/>

    <vfs.asyncListener implementation="consulo.ide.impl.idea.openapi.vfs.impl.VirtualFilePointerManagerImpl$MyAsyncFileListener"/>

    <dateTimeFormatter id="vcs.annotate" name="VCS Annotate"/>
    <dateTimeFormatter id="vcs.log" name="VCS Log"/>



    <projectService serviceImplementation="consulo.ide.impl.idea.openapi.vcs.changes.committed.OutdatedVersionNotifier" lazy="false"/>
    <projectService serviceImplementation="consulo.ide.impl.idea.openapi.vcs.changes.committed.IncomingChangesIndicator" lazy="false"/>
    <projectService serviceImplementation="consulo.ide.impl.psi.impl.file.impl.PsiVFSListener" lazy="false"/>
    <postStartupActivity id="vfsStartup" implementation="consulo.ide.impl.psi.impl.file.impl.PsiVFSListener$MyStartUpActivity" order="first"/>

    <searchEverywhereContributor implementation="consulo.ide.impl.idea.ide.actions.searcheverywhere.ClassSearchEverywhereContributor$Factory"/>
    <searchEverywhereContributor implementation="consulo.ide.impl.idea.ide.actions.searcheverywhere.FileSearchEverywhereContributor$Factory"/>
    <searchEverywhereContributor implementation="consulo.ide.impl.idea.ide.actions.searcheverywhere.SymbolSearchEverywhereContributor$Factory"/>
    <searchEverywhereContributor implementation="consulo.ide.impl.idea.ide.actions.searcheverywhere.ActionSearchEverywhereContributor$Factory"/>

    <searchEverywhereResultsEqualityProvider implementation="consulo.ide.impl.idea.ide.actions.searcheverywhere.PsiElementsEqualityProvider"/>
    <searchEverywhereResultsEqualityProvider implementation="consulo.ide.impl.idea.ide.actions.searcheverywhere.TrivialElementsEqualityProvider"/>


    <postStartupActivity implementation="consulo.ide.impl.idea.openapi.vcs.update.RestoreUpdateTree$MyStartUpActivity"/>

    <statusBarWidgetFactory id="positionWidget" implementation="consulo.ide.impl.idea.openapi.wm.impl.status.PositionPanelWidgetFactory"/>
    <statusBarWidgetFactory id="lineSeparatorWidget" implementation="consulo.ide.impl.idea.openapi.wm.impl.status.LineSeparatorWidgetFactory" order="after positionWidget"/>
    <statusBarWidgetFactory id="encodingWidget" implementation="consulo.ide.impl.idea.openapi.wm.impl.status.EncodingPanelWidgetFactory" order="after lineSeparatorWidget"/>
    <!--TODO <statusBarWidgetFactory id="largeFileEncodingWidget" implementation="com.intellij.largeFilesEditor.encoding.LargeFileEncodingWidgetFactory" order="after encodingWidget"/> -->
    <statusBarWidgetFactory id="moduleLayerWidget" implementation="consulo.ide.impl.wm.impl.status.ModuleLayerWidgetFactory" order=" after encodingWidget"/>
    <statusBarWidgetFactory id="selectionModeWidget" implementation="consulo.ide.impl.idea.openapi.wm.impl.status.ColumnSelectionModeWidgetFactory" order="after moduleLayerWidget"/>
    <statusBarWidgetFactory id="codeStyleWidget" implementation="consulo.ide.impl.psi.codeStyle.statusbar.CodeStyleStatusBarWidgetFactory" order="after selectionModeWidget"/>
    <statusBarWidgetFactory id="readOnlyWidget" implementation="consulo.ide.impl.idea.openapi.wm.impl.status.ReadOnlyAttributeWidgetFactory" order="after codeStyleWidget"/>
    <statusBarWidgetFactory id="inspectionProfileWidget" implementation="consulo.ide.impl.idea.openapi.wm.impl.status.InspectionProfileWidgetFactory" order="after readOnlyWidget"/>
    <statusBarWidgetFactory id="notificationsWidget" implementation="consulo.ide.impl.idea.notification.impl.widget.NotificationWidgetFactory" order="after inspectionProfileWidget"/>
    <statusBarWidgetFactory id="fatalErrorWidget" implementation="consulo.ide.impl.idea.openapi.wm.impl.status.FatalErrorWidgetFactory" order="after notificationsWidget"/>
    <statusBarWidgetFactory id="writeActionWidget" implementation="consulo.ide.impl.idea.openapi.wm.impl.status.WriteThreadIndicatorWidgetFactory" order="after fatalErrorWidget"/>
    <statusBarWidgetFactory id="memoryUsageWidget" implementation="consulo.ide.impl.idea.openapi.wm.impl.status.MemoryIndicatorWidgetFactory" order="last"/>


    <postStartupActivity implementation="consulo.ide.impl.idea.execution.impl.ProjectRunConfigurationManager$MyStartupActivity"/>


    <psiReferenceLocalFixProvider implementation="consulo.language.editor.impl.internal.psi.path.FileReferenceLocalQuickFixProvider"/>

    <applicationService serviceInterface="consulo.language.impl.parser.GeneratedParserUtilBase$PrefixMatcher"
                        serviceImplementation="consulo.language.editor.impl.internal.parser.ParserCamelCaseMatcherPrefixMatcher"/>

  </extensions>

  <applicationListeners>
    <listener class="consulo.ide.impl.idea.util.gist.GistManagerImpl$MyBulkFileListener" topic="consulo.virtualFileSystem.event.BulkFileListener"/>
  </applicationListeners>

  <projectListeners>
    <listener class="consulo.ide.impl.idea.openapi.vfs.newvfs.impl.CachedFileType$PsiListener" topic="consulo.language.psi.PsiModificationTrackerListener"/>
    <listener class="consulo.module.impl.internal.ExtensionListenerByLayerListenerInvoker" topic="consulo.module.content.layer.event.ModuleRootLayerListener"/>
  </projectListeners>
</consulo-plugin>
