<!--
  - Copyright 2013-2022 consulo.io
  -
  - Licensed under the Apache License, Version 2.0 (the "License");
  - you may not use this file except in compliance with the License.
  - You may obtain a copy of the License at
  -
  - http://www.apache.org/licenses/LICENSE-2.0
  -
  - Unless required by applicable law or agreed to in writing, software
  - distributed under the License is distributed on an "AS IS" BASIS,
  - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  - See the License for the specific language governing permissions and
  - limitations under the License.
  -->
<consulo-plugin>
  <id>consulo</id>
  <name>Consulo</name>
  <localize>consulo.platform.base.ActionLocalize</localize>

  <import path="/META-INF/Actions.xml"/>
  <import path="/META-INF/Diff.xml"/>
  <import path="/META-INF/ProjectComponents.xml"/>
  <import path="/META-INF/ApplicationComponents.xml"/>
  <import path="/META-INF/ExternalSystems.xml"/>
  <import path="/META-INF/RemoteServers.xml"/>
  <import path="/META-INF/Bundled.xml"/>
  <import path="/META-INF/BackgroundTaskByVfsChange.xml"/>
  <import path="/META-INF/Compiler.xml"/>
  <import path="/META-INF/EarlyAccessProgram.xml"/>
  <import path="/META-INF/Graph.xml"/>
  <import path="/META-INF/Copyright.xml"/>
  <import path="/META-INF/VcsLog.xml"/>
  <import path="/META-INF/DVcs.xml"/>
  <import path="/META-INF/PostfixTemplates.xml"/>
  <import path="/META-INF/Coverage.xml"/>
  <import path="/META-INF/XDebugger.xml"/>
  <import path="/META-INF/Configurables.xml"/>
  <import path="/META-INF/Scratch.xml"/>
  <import path="/META-INF/ExternalStorage.xml"/>
  <import path="/META-INF/BuildInServer.xml"/>
  <import path="/META-INF/TipsOfTheDay.xml"/>
  <import path="/META-INF/Injecting.xml"/>
  <import path="/META-INF/Task.xml"/>

  <extensionPoints>
    <extensionPoint name="listOfElements" beanClass="consulo.component.extension.ListOfElementsEP"/>
    <extensionPoint name="addTo.listOfElements" beanClass="consulo.component.extension.AddToElementEP"/>
    <extensionPoint name="search.topHitProvider" interface="com.intellij.ide.SearchTopHitProvider"/>
    <extensionPoint name="search.optionContributor" interface="com.intellij.ide.ui.search.SearchableOptionContributor"/>
    <extensionPoint name="referenceInjector" interface="consulo.language.inject.ReferenceInjector"/>
    <extensionPoint name="customPropertyScopeProvider" interface="consulo.ide.impl.psi.impl.search.CustomPropertyScopeProvider"/>
    <extensionPoint name="contentFolderTypeProvider" interface="consulo.content.ContentFolderTypeProvider"/>
    <extensionPoint name="contentFolderPropertyProvider" interface="consulo.module.content.layer.ContentFolderPropertyProvider"/>
    <extensionPoint name="contentFolderSupportPatcher" interface="consulo.module.content.layer.ContentFolderSupportPatcher"/>
    <extensionPoint name="createFromTemplateActionModuleResolver" interface="com.intellij.ide.actions.CreateFileFromTemplateAction$ModuleResolver"/>

    <extensionPoint name="applicationService" beanClass="consulo.component.impl.extension.ServiceDescriptor"/>
    <extensionPoint name="projectService" beanClass="consulo.component.impl.extension.ServiceDescriptor" area="PROJECT"/>
    <extensionPoint name="moduleService" beanClass="consulo.component.impl.extension.ServiceDescriptor" area="MODULE"/>

    <extensionPoint name="extensionExtender" beanClass="consulo.component.extension.KeyedLazyInstanceEP">
      <with attribute="implementationClass" implements="consulo.component.extension.ExtensionExtender"/>
    </extensionPoint>

    <extensionPoint name="dateTimeFormatter" beanClass="com.intellij.util.text.DateTimeFormatterBean"/>

    <extensionPoint name="editorFactoryDocumentListener" interface="consulo.document.event.DocumentListener"/>
    <extensionPoint name="editorFactoryMouseListener" interface="consulo.codeEditor.event.EditorMouseListener"/>
    <extensionPoint name="editorFactoryMouseMotionListener" interface="consulo.codeEditor.event.EditorMouseMotionListener"/>
    <extensionPoint name="editorFactoryListener" interface="consulo.codeEditor.event.EditorFactoryListener"/>

    <extensionPoint name="vfs.asyncListener" interface="consulo.virtualFileSystem.event.AsyncFileListener"/>

    <extensionPoint name="generatedSourcesFilter" interface="consulo.project.content.GeneratedSourcesFilter"/>
    <extensionPoint name="testSourcesFilter" interface="consulo.project.content.TestSourcesFilter"/>
    <extensionPoint name="defaultLibraryRootDetector" interface="consulo.content.library.ui.RootDetector"/>

    <extensionPoint name="postStartupActivity" interface="consulo.project.startup.StartupActivity"/>
    <extensionPoint name="backgroundPostStartupActivity" interface="consulo.project.startup.StartupActivity$Background"/>
    <extensionPoint name="psiReferenceLocalFixProvider" interface="consulo.language.editor.inspection.PsiReferenceLocalQuickFixProvider" area="PROJECT"/>

    <extensionPoint name="projectConfigurable"
                    beanClass="consulo.options.ProjectConfigurableEP"
                    area="PROJECT">
      <with attribute="instanceClass" implements="consulo.configurable.Configurable"/>
    </extensionPoint>

    <extensionPoint name="applicationConfigurable"
                    beanClass="consulo.options.ApplicationConfigurableEP">
      <with attribute="instanceClass" implements="consulo.configurable.Configurable"/>
    </extensionPoint>

    <extensionPoint name="generalCodeStyleOptionsProvider" beanClass="com.intellij.application.options.GeneralCodeStyleOptionsProviderEP">
      <with attribute="instance" implements="com.intellij.application.options.GeneralCodeStyleOptionsProvider"/>
    </extensionPoint>

    <extensionPoint name="module.workingDirectoryProvider" interface="consulo.execution.WorkingDirectoryProvider"/>

    <extensionPoint name="selectInTarget"
                    interface="com.intellij.ide.SelectInTarget"
                    area="PROJECT"/>

    <extensionPoint name="fileEditorProvider"
                    interface="consulo.fileEditor.FileEditorProvider"/>

    <extensionPoint name="fileTypeFactory"
                    interface="consulo.virtualFileSystem.fileType.FileTypeFactory"/>

    <extensionPoint name="fileTypeOverrider" interface="com.intellij.openapi.fileTypes.impl.FileTypeOverrider"/>

    <extensionPoint name="fileType"
                    beanClass="com.intellij.openapi.fileTypes.impl.FileTypeBean"/>

    <extensionPoint name="virtualFileSystem" interface="consulo.virtualFileSystem.VirtualFileSystem"/>

    <extensionPoint name="keymapExtension"
                    interface="com.intellij.openapi.keymap.KeymapExtension"/>

    <extensionPoint name="getDataRule" interface="consulo.dataContext.GetDataRule"/>

    <extensionPoint name="dataValidator" interface="com.intellij.ide.impl.DataValidator"/>

    <extensionPoint name="cutElementMarker"
                    interface="com.intellij.openapi.ide.CutElementMarker"/>

    <extensionPoint name="schemeOwner" beanClass="com.intellij.openapi.components.ServiceBean"/>

    <extensionPoint name="ideRootPaneNorth" interface="consulo.project.ui.wm.IdeRootPaneNorthExtension" area="PROJECT"/>

    <extensionPoint name="handleTypeFactory" interface="com.intellij.openapi.vcs.readOnlyHandler.HandleTypeFactory" area="PROJECT"/>
    <extensionPoint name="customFileTypeFactory" interface="com.intellij.openapi.fileTypes.ex.CustomFileTypeFactory"/>
    <extensionPoint name="fileTypeRegistrator" interface="com.intellij.ide.highlighter.FileTypeRegistrator"/>

    <extensionPoint name="undoProvider" interface="com.intellij.openapi.command.impl.UndoProvider"/>
    <extensionPoint name="projectUndoProvider" interface="com.intellij.openapi.command.impl.UndoProvider" area="PROJECT"/>

    <extensionPoint name="syntaxHighlighter"
                    beanClass="consulo.component.extension.KeyedFactoryEPBean">
      <with attribute="implementationClass" implements="consulo.language.editor.highlight.SyntaxHighlighter"/>
    </extensionPoint>

    <extensionPoint name="lang.syntaxHighlighterFactory" beanClass="com.intellij.openapi.fileTypes.SyntaxHighlighterFactoryEP">
      <with attribute="implementationClass" implements="consulo.language.editor.highlight.SyntaxHighlighterFactory"/>
    </extensionPoint>

    <extensionPoint name="lang.elementIcon" beanClass="consulo.language.LanguageElementIcon"/>

    <extensionPoint name="gutterMarkPreprocessor" interface="com.intellij.openapi.editor.GutterMarkPreprocessor"/>

    <extensionPoint name="breadcrumbsInfoProvider" interface="com.intellij.ui.breadcrumbs.BreadcrumbsProvider"/>
    <extensionPoint name="breadcrumbsPresentationProvider" interface="com.intellij.ui.breadcrumbs.BreadcrumbsPresentationProvider"/>
    <extensionPoint name="fileBreadcrumbsCollector" interface="com.intellij.codeInsight.breadcrumbs.FileBreadcrumbsCollector" area="PROJECT"/>

    <extensionPoint name="codeInsight.linkHandler"
                    beanClass="com.intellij.codeInsight.hint.TooltipLinkHandlerEP">
      <with attribute="handlerClass" implements="com.intellij.codeInsight.highlighting.TooltipLinkHandler"/>
    </extensionPoint>

    <extensionPoint name="codeInsight.parameterNameHints" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.hints.InlayParameterHintsProvider"/>
    </extensionPoint>

    <extensionPoint name="applicationLoadListener" interface="consulo.application.event.ApplicationLoadListener"/>

    <extensionPoint name="editorTabTitleProvider" interface="consulo.fileEditor.EditorTabTitleProvider"/>
    <extensionPoint name="editorTabColorProvider" interface="consulo.fileEditor.EditorTabColorProvider"/>
    <extensionPoint name="editorFileSwapper" interface="com.intellij.openapi.fileEditor.impl.EditorFileSwapper"/>
    <extensionPoint name="editorFileAssociateFinder" interface="com.intellij.openapi.fileEditor.impl.FileEditorAssociateFinder"/>

    <extensionPoint name="http.localFileFinder" interface="com.intellij.openapi.fileEditor.impl.http.LocalFileFinder"/>
    <extensionPoint name="http.fileEditorActionProvider"
                    interface="com.intellij.openapi.fileEditor.impl.http.RemoteFileEditorActionProvider"/>

    <extensionPoint name="filetype.decompiler" beanClass="consulo.virtualFileSystem.extension.FileTypeExtensionPoint">
      <with attribute="implementationClass" implements="consulo.virtualFileSystem.BinaryFileDecompiler"/>
    </extensionPoint>

    <extensionPoint name="editorActionHandler" beanClass="consulo.codeEditor.impl.action.EditorActionHandlerBean">
      <with attribute="implementationClass" implements="consulo.codeEditor.action.EditorActionHandler"/>
    </extensionPoint>

    <extensionPoint name="editorTypedHandler" beanClass="consulo.codeEditor.action.EditorTypedHandlerBean">
      <with attribute="implementationClass" implements="consulo.codeEditor.action.TypedActionHandler"/>
    </extensionPoint>

    <extensionPoint name="rawEditorTypedHandler" beanClass="consulo.codeEditor.action.EditorTypedHandlerBean">
      <with attribute="implementationClass" implements="consulo.codeEditor.action.TypedActionHandler"/>
    </extensionPoint>

    <extensionPoint name="customFileDropHandler" area="PROJECT" interface="com.intellij.openapi.editor.CustomFileDropHandler"/>

    <extensionPoint name="toolWindow" beanClass="com.intellij.openapi.wm.ToolWindowEP">
      <with attribute="factoryClass" implements="consulo.project.ui.wm.ToolWindowFactory"/>
      <with attribute="conditionClass" implements="consulo.util.lang.function.Condition"/>
    </extensionPoint>

    <extensionPoint name="productivityFeaturesProvider" interface="com.intellij.featureStatistics.ProductivityFeaturesProvider"/>

    <extensionPoint name="tipAndTrick" beanClass="com.intellij.ide.util.TipAndTrickBean"/>

    <extensionPoint name="iconDescriptorUpdater" interface="consulo.language.icon.IconDescriptorUpdater" area="PROJECT"/>

    <extensionPoint name="customizableActionGroupProvider" interface="com.intellij.ide.ui.customization.CustomizableActionGroupProvider"/>

    <extensionPoint name="checkinHandlerFactory" interface="com.intellij.openapi.vcs.checkin.CheckinHandlerFactory"/>

    <extensionPoint name="writingAccessProvider" area="PROJECT" interface="com.intellij.openapi.vfs.WritingAccessProvider"/>
    <extensionPoint name="nonProjectFileWritingAccessExtension" area="PROJECT"
                    interface="com.intellij.openapi.fileEditor.impl.NonProjectFileWritingAccessExtension"/>
    <extensionPoint name="editorNotificationProvider" area="PROJECT" interface="consulo.codeEditor.notifications.EditorNotificationProvider"/>

    <extensionPoint name="editorNavigation" interface="com.intellij.openapi.editor.EditorNavigationDelegate"/>

    <extensionPoint name="statistics.usagesCollector" interface="com.intellij.internal.statistic.UsagesCollector"/>

    <extensionPoint name="editorHighlighterProvider" beanClass="consulo.virtualFileSystem.extension.FileTypeExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.highlight.EditorHighlighterProvider"/>
    </extensionPoint>

    <extensionPoint name="actionPromoter" interface="com.intellij.openapi.actionSystem.ActionPromoter"/>

    <extensionPoint name="fileDocumentManagerListener" interface="consulo.document.event.FileDocumentManagerListener"/>
    <extensionPoint name="fileDocumentSynchronizationVetoer" interface="consulo.document.FileDocumentSynchronizationVetoer"/>

    <extensionPoint name="itemPresentationProvider" beanClass="com.intellij.openapi.util.ClassExtensionPoint">
      <with attribute="implementationClass" implements="consulo.navigation.ItemPresentationProvider"/>
    </extensionPoint>

    <extensionPoint name="intentionMenuContributor" interface="com.intellij.codeInsight.daemon.impl.IntentionMenuContributor"/>

    <extensionPoint name="fileTypeDetector" interface="consulo.virtualFileSystem.fileType.FileTypeRegistry$FileTypeDetector"/>

    <extensionPoint name="pathMacroFilter" interface="consulo.component.macro.PathMacroFilter"/>
    <extensionPoint name="pathMacroExpendableProtocol" beanClass="consulo.component.macro.PathMacroExpendableProtocolBean"/>

    <extensionPoint name="httpRequestHandler" interface="consulo.builtInServer.http.HttpRequestHandler"/>

    <extensionPoint name="colorPickerListenerFactory" interface="com.intellij.ui.ColorPickerListenerFactory"/>

    <!--VCS-->
    <extensionPoint name="checkoutProvider"
                    interface="com.intellij.openapi.vcs.CheckoutProvider"/>
    <extensionPoint name="checkoutListener"
                    interface="com.intellij.openapi.vcs.checkout.CheckoutListener"/>
    <extensionPoint name="vcsAwareCheckoutListener"
                    interface="com.intellij.openapi.vcs.checkout.VcsAwareCheckoutListener"/>
    <extensionPoint name="checkoutCompletedListener"
                    interface="com.intellij.openapi.vcs.checkout.CheckoutListener"/>
    <extensionPoint name="changeListDecorator"
                    interface="com.intellij.openapi.vcs.changes.ChangeListDecorator" area="PROJECT"/>

    <extensionPoint name="vcs"
                    beanClass="com.intellij.openapi.vcs.impl.VcsEP"
                    area="PROJECT">
      <with attribute="vcsClass" implements="com.intellij.openapi.vcs.AbstractVcs"/>
    </extensionPoint>

    <extensionPoint name="vcsCheckinHandlerFactory"
                    interface="com.intellij.openapi.vcs.checkin.VcsCheckinHandlerFactory"/>

    <extensionPoint name="changesViewContent"
                    beanClass="com.intellij.openapi.vcs.changes.ui.ChangesViewContentEP"
                    area="PROJECT"/>

    <extensionPoint name="editChangelistSupport"
                    interface="com.intellij.openapi.vcs.changes.ui.EditChangelistSupport"
                    area="PROJECT"/>

    <extensionPoint name="vcsSelectionProvider"
                    interface="com.intellij.vcsUtil.VcsSelectionProvider"/>

    <extensionPoint name="vcsConfigurableProvider"
                    interface="com.intellij.openapi.vcs.VcsConfigurableProvider"/>

    <extensionPoint name="vcsRootChecker" interface="com.intellij.openapi.vcs.VcsRootChecker"/>

    <extensionPoint name="vcs.fileStatusProvider"
                    interface="consulo.virtualFileSystem.status.FileStatusProvider"
                    area="PROJECT"/>

    <extensionPoint name="vcs.baseContentProvider"
                    interface="com.intellij.openapi.vcs.impl.VcsBaseContentProvider"
                    area="PROJECT"/>

    <extensionPoint name="vcsPopupProvider"
                    interface="com.intellij.openapi.vcs.actions.VcsQuickListContentProvider"/>
    <extensionPoint name="vcs.ignoredFilesHolder" interface="com.intellij.openapi.vcs.changes.VcsIgnoredFilesHolder" area="PROJECT"/>
    <extensionPoint name="vcs.ignoredFileProvider"
                    interface="com.intellij.openapi.vcs.changes.IgnoredFileProvider"/>

    <extensionPoint name="patch.extension" interface="com.intellij.openapi.diff.impl.patch.PatchEP" area="PROJECT"/>
    <extensionPoint name="vcsChangesViewRefresher" interface="com.intellij.openapi.vcs.changes.ChangesViewRefresher"/>
    <extensionPoint name="vcsAnnotationGutterActionProvider" interface="com.intellij.openapi.vcs.annotate.AnnotationGutterActionProvider"/>
    <extensionPoint name="vcs.taskHandler" interface="com.intellij.openapi.vcs.VcsTaskHandler" area="PROJECT"/>

    <extensionPoint name="compiler.additionalCompileScopeProvider"
                    interface="com.intellij.compiler.impl.AdditionalCompileScopeProvider"/>

    <extensionPoint name="namedScopesHolderProvider" area="PROJECT" interface="consulo.content.scope.NamedScopesHolderProvider"/>

    <extensionPoint name="compiler.translatingHelper"
                    interface="consulo.compiler.TranslatingCompilerFilesMonitorHelper"/>

    <extensionPoint name="compiler.resourceCompilerExtension"
                    interface="com.intellij.compiler.impl.resourceCompiler.ResourceCompilerExtension"/>

    <extensionPoint name="compiler.additionalOutputDirectoriesProvider"
                    interface="consulo.compiler.AdditionalOutputDirectoriesProvider"/>
    <extensionPoint name="orderRootTypeEditor"
                    beanClass="consulo.component.extension.KeyedFactoryEPBean">
      <with attribute="implementationClass" implements="com.intellij.openapi.roots.ui.OrderRootTypeUIFactory"/>
    </extensionPoint>

    <extensionPoint name="packaging.elementType" interface="consulo.compiler.artifact.element.PackagingElementType"/>
    <extensionPoint name="packaging.artifactPropertiesProvider" interface="consulo.compiler.artifact.ArtifactPropertiesProvider"/>
    <extensionPoint name="packaging.sourceItemProvider" interface="com.intellij.packaging.ui.PackagingSourceItemsProvider"/>
    <extensionPoint name="packaging.artifactType" interface="consulo.compiler.artifact.ArtifactType"/>

    <extensionPoint name="moduleImportProvider" interface="consulo.moduleImport.ModuleImportProvider"/>

    <extensionPoint name="codeInsight.wordCompletionFilter" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.WordCompletionElementFilter"/>
    </extensionPoint>


    <extensionPoint name="compiler" area="PROJECT" interface="consulo.compiler.Compiler"/>

    <extensionPoint name="projectStructureValidator"
                    interface="com.intellij.openapi.roots.ui.configuration.projectRoot.daemon.ProjectStructureValidator"/>

    <!--Lang-->
    <extensionPoint name="errorPropertiesProvider" interface="consulo.codeInspection.ui.ErrorPropertiesProvider"/>

    <extensionPoint name="indexPatternProvider"
                    interface="consulo.language.psi.search.IndexPatternProvider"/>

    <extensionPoint name="indexImporterFactory"
                    interface="com.intellij.index.IndexImporterFactory"/>

    <extensionPoint name="fileBasedIndex.providedLocator"
                    interface="com.intellij.util.indexing.provided.ProvidedIndexExtensionLocator"/>

    <extensionPoint name="globalIndexFilter"
                    interface="com.intellij.util.indexing.GlobalIndexFilter"/>

    <extensionPoint name="refGraphAnnotator"
                    interface="consulo.language.editor.inspection.reference.RefGraphAnnotator"/>

    <!-- Code Insight -->
    <extensionPoint name="highlightVisitor"
                    interface="consulo.language.editor.rawHighlight.HighlightVisitor"
                    area="PROJECT"/>
    <extensionPoint name="highlightErrorFilter"
                    interface="consulo.language.editor.HighlightErrorFilter"
                    area="PROJECT"/>

    <extensionPoint name="daemon.tooltipActionProvider"
                    interface="com.intellij.codeInsight.daemon.impl.tooltips.TooltipActionProvider"/>

    <extensionPoint name="errorQuickFixProvider"
                    interface="com.intellij.codeInsight.daemon.impl.analysis.ErrorQuickFixProvider"/>

    <extensionPoint name="pathReferenceProvider"
                    interface="consulo.language.psi.path.PathReferenceProvider"/>
    <extensionPoint name="anchorReferenceProvider"
                    interface="consulo.language.psi.path.PathReferenceProvider"/>
    <extensionPoint name="dynamicContextProvider"
                    interface="consulo.language.psi.path.DynamicContextProvider"/>


    <extensionPoint name="intentionAction"
                    beanClass="consulo.language.editor.intention.IntentionActionBean">
      <with tag="className" implements="consulo.language.editor.intention.IntentionAction"/>
    </extensionPoint>

    <extensionPoint name="codeInsight.unresolvedReferenceQuickFixProvider"
                    interface="com.intellij.codeInsight.quickfix.UnresolvedReferenceQuickFixProvider"/>


    <extensionPoint name="braceMatcher"
                    beanClass="consulo.virtualFileSystem.extension.FileTypeExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.highlight.BraceMatcher"/>
    </extensionPoint>

    <extensionPoint name="bidiRegionsSeparator"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.openapi.editor.bidi.BidiRegionsSeparator"/>
    </extensionPoint>

    <extensionPoint name="wordBoundaryFilter" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.action.WordBoundaryFilter"/>
    </extensionPoint>

    <extensionPoint name="quoteHandler"
                    beanClass="com.intellij.codeInsight.editorActions.QuoteHandlerEP"/>
    <extensionPoint name="extendWordSelectionHandler"
                    interface="consulo.language.editor.action.ExtendWordSelectionHandler"/>
    <extensionPoint name="basicWordSelectionFilter"
                    interface="consulo.util.lang.function.Condition"/>
    <extensionPoint name="typedHandler"
                    interface="consulo.language.editor.action.TypedHandlerDelegate"/>
    <extensionPoint name="selectionDequotingFilter"
                    interface="com.intellij.codeInsight.editorActions.SelectionQuotingTypedHandler$DequotingFilter"/>

    <extensionPoint name="joinLinesHandler"
                    interface="consulo.language.editor.action.JoinLinesHandlerDelegate"/>
    <extensionPoint name="enterHandlerDelegate" interface="com.intellij.codeInsight.editorActions.enter.EnterHandlerDelegate"/>
    <extensionPoint name="backspaceHandlerDelegate" interface="consulo.language.editor.action.BackspaceHandlerDelegate"/>
    <extensionPoint name="editor.backspaceModeOverride" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.codeEditor.action.BackspaceModeOverride"/>
    </extensionPoint>
    <extensionPoint name="enterBetweenBracesDelegate" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.editorActions.enter.EnterBetweenBracesDelegate"/>
    </extensionPoint>

    <extensionPoint name="codeStyleSettingsProvider"
                    interface="consulo.language.codeStyle.setting.CodeStyleSettingsProvider"/>

    <extensionPoint name="codeStyleIndentHelperExtension"
                    interface="consulo.psi.impl.source.codeStyle.IndentHelperExtension"/>

    <extensionPoint name="daemon.highlightInfoFilter"
                    interface="consulo.language.editor.rawHighlight.HighlightInfoFilter"/>

    <extensionPoint name="daemon.intentionActionFilter"
                    interface="com.intellij.codeInsight.daemon.impl.IntentionActionFilter"/>

    <extensionPoint name="daemon.externalAnnotatorsFilter"
                    interface="com.intellij.lang.ExternalAnnotatorsFilter"/>

    <extensionPoint name="severitiesProvider"
                    interface="consulo.language.editor.rawHighlight.SeveritiesProvider"/>

    <extensionPoint name="implicitUsageProvider"
                    interface="com.intellij.codeInsight.daemon.ImplicitUsageProvider"/>

    <extensionPoint name="templateParameterTraversalPolicy"
                    interface="com.intellij.codeInsight.completion.TemplateParameterTraversalPolicy"/>

    <extensionPoint name="daemon.changeLocalityDetector"
                    interface="com.intellij.codeInsight.daemon.ChangeLocalityDetector"/>

    <extensionPoint name="languageInjector" interface="consulo.language.inject.LanguageInjector"/>
    <extensionPoint name="concatenationAwareInjector" interface="consulo.language.inject.ConcatenationAwareInjector" area="PROJECT"/>
    <extensionPoint name="multiHostInjector"
                    beanClass="consulo.language.inject.MultiHostInjectorExtensionPoint"
                    area="PROJECT">
      <with attribute="forClass" implements="consulo.language.psi.PsiElement"/>
      <with attribute="implementationClass" implements="consulo.language.inject.MultiHostInjector"/>
    </extensionPoint>

    <extensionPoint name="annotator"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.annotation.Annotator"/>
    </extensionPoint>

    <extensionPoint name="externalAnnotator"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.annotation.ExternalAnnotator"/>
    </extensionPoint>

    <extensionPoint name="lang.refactoringSupport"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.refactoring.RefactoringSupportProvider"/>
    </extensionPoint>

    <extensionPoint name="lang.refactoringSupport.classMembersRefactoringSupport"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.refactoring.classMembers.ClassMembersRefactoringSupport"/>
    </extensionPoint>

    <extensionPoint name="lang.documentationProvider"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.documentation.DocumentationProvider"/>
    </extensionPoint>

    <extensionPoint name="lang.namesValidator"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.refactoring.NamesValidator"/>
    </extensionPoint>

    <extensionPoint name="lang.findUsagesProvider"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.findUsage.FindUsagesProvider"/>
    </extensionPoint>

    <extensionPoint name="lang.commenter"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.Commenter"/>
    </extensionPoint>

    <extensionPoint name="lang.inspectionSuppressor"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.inspection.InspectionSuppressor"/>
    </extensionPoint>

    <extensionPoint name="lang.braceMatcher"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.PairedBraceMatcher"/>
    </extensionPoint>

    <extensionPoint name="lang.quoteHandler"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.action.QuoteHandler"/>
    </extensionPoint>

    <extensionPoint name="lang.foldingBuilder"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.folding.FoldingBuilder"/>
    </extensionPoint>

    <extensionPoint name="customFoldingProvider"
                    interface="com.intellij.lang.folding.CustomFoldingProvider"/>
    <extensionPoint name="lang.psiStructureViewFactory"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.structureView.PsiStructureViewFactory"/>
    </extensionPoint>

    <extensionPoint name="lang.structureViewExtension"
                    interface="com.intellij.ide.structureView.StructureViewExtension"/>

    <extensionPoint name="lang.psi.elementFactory" interface="consulo.language.psi.PsiElementFactory"/>

    <extensionPoint name="lang.ast.lazyFactory" interface="consulo.language.impl.ast.ASTLazyFactory"/>

    <extensionPoint name="lang.ast.leafFactory" interface="consulo.language.impl.ast.ASTLeafFactory"/>

    <extensionPoint name="lang.ast.compositeFactory" interface="consulo.language.impl.ast.ASTCompositeFactory"/>

    <extensionPoint name="lang.formatter" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.codeStyle.FormattingModelBuilder"/>
    </extensionPoint>

    <extensionPoint name="externalFormatProcessor" interface="consulo.ide.impl.psi.codeStyle.ExternalFormatProcessor"/>

    <extensionPoint name="lang.formatter.restriction" interface="consulo.language.codeStyle.LanguageFormattingRestriction"/>
    <extensionPoint name="lang.importOptimizer" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.refactoring.ImportOptimizer"/>
    </extensionPoint>

    <extensionPoint name="lang.rearranger" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.codeStyle.arrangement.Rearranger"/>
    </extensionPoint>
    <extensionPoint name="rearranger.ui" interface="consulo.language.codeStyle.arrangement.std.ArrangementUiComponent$Factory"/>

    <extensionPoint name="lang.surroundDescriptor" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.surroundWith.SurroundDescriptor"/>
    </extensionPoint>

    <extensionPoint name="lang.unwrapDescriptor" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.unwrap.UnwrapDescriptor"/>
    </extensionPoint>

    <extensionPoint name="lang.parserDefinition" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.parser.ParserDefinition"/>
    </extensionPoint>

    <extensionPoint name="metaLanguage" interface="consulo.language.MetaLanguage"/>

    <extensionPoint name="lang.versionResolver" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.version.LanguageVersionResolver"/>
    </extensionPoint>

    <extensionPoint name="lang.defineVersion" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.version.LanguageVersion"/>
    </extensionPoint>

    <extensionPoint name="lang.treePatcher" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.ide.impl.psi.templateLanguages.TreePatcher"/>
    </extensionPoint>

    <extensionPoint name="outerLanguageRangePatcher" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.ide.impl.psi.templateLanguages.TemplateDataElementType$OuterLanguageRangePatcher"/>
    </extensionPoint>

    <extensionPoint name="lang.tokenSeparatorGenerator" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.ast.TokenSeparatorGenerator"/>
    </extensionPoint>


    <extensionPoint name="lang.fileViewProviderFactory" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.file.FileViewProviderFactory"/>
    </extensionPoint>

    <extensionPoint name="fileType.fileViewProviderFactory" beanClass="consulo.virtualFileSystem.extension.FileTypeExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.file.FileViewProviderFactory"/>
    </extensionPoint>

    <extensionPoint name="multiLangCommenter"
                    interface="consulo.ide.impl.psi.templateLanguages.MultipleLangCommentProvider"/>

    <extensionPoint name="cacheBuilder"
                    beanClass="com.intellij.lang.cacheBuilder.CacheBuilderEP">
      <with attribute="wordsScannerClass" implements="consulo.language.cacheBuilder.WordsScanner"/>
    </extensionPoint>

    <extensionPoint name="referencesSearch" interface="consulo.application.util.query.QueryExecutor"/>
    <extensionPoint name="definitionsScopedSearch" interface="consulo.application.util.query.QueryExecutor"/>

    <extensionPoint name="useScopeEnlarger" interface="consulo.ide.impl.psi.search.UseScopeEnlarger"/>
    <extensionPoint name="resolveScopeEnlarger" interface="consulo.language.psi.ResolveScopeEnlarger"/>
    <extensionPoint name="resolveScopeProvider" interface="consulo.ide.impl.psi.ResolveScopeProvider"/>
    <extensionPoint name="codeUsageScopeOptimizer" interface="consulo.language.psi.search.ScopeOptimizer"/>

    <extensionPoint name="gotoClassContributor"
                    interface="consulo.ide.navigation.ChooseByNameContributor"/>
    <extensionPoint name="gotoSymbolContributor"
                    interface="consulo.ide.navigation.ChooseByNameContributor"/>
    <extensionPoint name="gotoFileContributor"
                    interface="consulo.ide.navigation.ChooseByNameContributor"/>
    <extensionPoint name="anonymousElementProvider"
                    interface="com.intellij.navigation.AnonymousElementProvider"/>

    <extensionPoint name="gotoRelatedProvider" interface="com.intellij.navigation.GotoRelatedProvider"/>

    <extensionPoint name="roots.watchedRootsProvider" interface="consulo.project.content.WatchedRootsProvider" area="PROJECT"/>

    <extensionPoint name="moduleExtensionProvider" beanClass="consulo.module.impl.internal.layer.ModuleExtensionProviderEP">
      <with attribute="immutableClass" implements="consulo.module.extension.ModuleExtension"/>
      <with attribute="mutableClass" implements="consulo.module.extension.MutableModuleExtension"/>
    </extensionPoint>

    <extensionPoint name="moduleRootsProcessor" interface="consulo.module.impl.internal.layer.ModuleRootsProcessor"/>
    <extensionPoint name="orderRootType" interface="consulo.content.OrderRootType"/>
    <extensionPoint name="orderEntryType" interface="consulo.module.content.layer.orderEntry.OrderEntryType"/>
    <extensionPoint name="orderEntryTypeEditor" beanClass="consulo.component.extension.KeyedFactoryEPBean">
      <with attribute="implementationClass" implements="consulo.roots.orderEntry.OrderEntryTypeEditor"/>
    </extensionPoint>
    <extensionPoint name="orderEnumerationHandlerFactory" interface="consulo.module.impl.internal.layer.OrderEnumerationHandler$Factory"/>
    <extensionPoint name="directoryIndexExcludePolicy" interface="consulo.module.content.layer.DirectoryIndexExcludePolicy"
                    area="PROJECT"/>

    <extensionPoint name="smartPointerAnchorProvider" interface="consulo.language.psi.SmartPointerAnchorProvider"/>
    <extensionPoint name="elementSignatureProvider" interface="com.intellij.codeInsight.folding.impl.ElementSignatureProvider"/>
    <extensionPoint name="preFormatProcessor" interface="consulo.ide.impl.psi.impl.source.codeStyle.PreFormatProcessor"/>
    <extensionPoint name="postFormatProcessor" interface="consulo.ide.impl.psi.impl.source.codeStyle.PostFormatProcessor"/>

    <extensionPoint name="declarationRangeHandler" beanClass="com.intellij.util.MixinEP">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.hint.DeclarationRangeHandler"/>
    </extensionPoint>

    <extensionPoint name="highlightUsagesHandlerFactory" interface="consulo.language.editor.highlight.usage.HighlightUsagesHandlerFactory"/>

    <extensionPoint name="usageTargetProvider"
                    interface="consulo.usage.UsageTargetProvider"/>
    <extensionPoint name="usageToPsiElementProvider" interface="consulo.usage.UsageToPsiElementProvider"/>

    <extensionPoint name="customScopesProvider"
                    interface="consulo.ide.impl.psi.search.scope.packageSet.CustomScopesProvider"
                    area="PROJECT"/>

    <extensionPoint name="customScopesFilter" interface="consulo.ide.impl.psi.search.scope.packageSet.CustomScopesFilter"/>

    <extensionPoint name="scopeDescriptorProvider" interface="consulo.content.scope.ScopeDescriptorProvider"/>
    <extensionPoint name="patternDialectProvider" interface="com.intellij.packageDependencies.ui.PatternDialectProvider"/>

    <extensionPoint name="localInspection"
                    beanClass="consulo.language.editor.inspection.scheme.LocalInspectionEP">
      <with attribute="implementationClass" implements="consulo.language.editor.inspection.LocalInspectionTool"/>
    </extensionPoint>

    <extensionPoint name="globalInspection"
                    beanClass="consulo.language.editor.inspection.scheme.InspectionEP">
      <with attribute="implementationClass" implements="consulo.language.editor.inspection.GlobalInspectionTool"/>
    </extensionPoint>
    <!-- please use localInspection or globalInspection instead-->
    <extensionPoint name="specialTool"
                    beanClass="consulo.language.editor.inspection.scheme.InspectionEP"/>
    <extensionPoint name="inspectionToolProvider"
                    interface="com.intellij.codeInspection.InspectionToolProvider"/>
    <extensionPoint name="inspectionToolsFactory"
                    interface="com.intellij.codeInspection.InspectionToolsFactory"/>
    <extensionPoint name="inspectionElementsMerger" interface="com.intellij.codeInspection.ex.InspectionElementsMerger"/>
    <extensionPoint name="codeInspection.InspectionExtension" interface="consulo.language.editor.inspection.InspectionExtensionsFactory"/>

    <extensionPoint name="customPasteProvider" interface="consulo.ui.ex.PasteProvider"/>

    <extensionPoint name="copyPastePreProcessor" interface="consulo.language.editor.action.CopyPastePreProcessor"/>
    <extensionPoint name="copyPastePostProcessor" interface="com.intellij.codeInsight.editorActions.CopyPastePostProcessor"/>

    <extensionPoint name="commentCompleteHandler" interface="consulo.language.editor.action.CommentCompleteHandler"/>

    <extensionPoint name="liveTemplateContext" interface="consulo.language.editor.template.context.TemplateContextType"/>
    <extensionPoint name="liveTemplateMacro" interface="consulo.language.editor.template.macro.Macro"/>
    <extensionPoint name="liveTemplateOptionalProcessor" interface="com.intellij.codeInsight.template.impl.TemplateOptionalProcessor"/>
    <extensionPoint name="liveTemplatePreprocessor" interface="com.intellij.codeInsight.template.impl.TemplatePreprocessor"/>
    <extensionPoint name="customLiveTemplate" interface="com.intellij.codeInsight.template.CustomLiveTemplate"/>

    <extensionPoint name="fileTemplateGroup"
                    interface="consulo.fileTemplate.FileTemplateGroupDescriptorFactory"/>
    <extensionPoint name="colorProvider"
                    interface="consulo.language.psi.ElementColorProvider"
                    area="PROJECT"/>
    <extensionPoint name="createFromTemplateHandler"
                    interface="consulo.fileTemplate.CreateFromTemplateHandler"/>
    <extensionPoint name="defaultTemplatePropertiesProvider"
                    interface="consulo.fileTemplate.DefaultTemplatePropertiesProvider"/>
    <extensionPoint name="internalFileTemplate"
                    beanClass="consulo.fileTemplate.impl.internal.InternalTemplateBean"/>
    <extensionPoint name="saveFileAsTemplateHandler"
                    interface="com.intellij.ide.actions.SaveFileAsTemplateHandler"/>

    <extensionPoint name="favoriteNodeProvider"
                    interface="com.intellij.ide.favoritesTreeView.FavoriteNodeProvider"
                    area="PROJECT"/>
    <extensionPoint name="favoritesListProvider"
                    interface="com.intellij.ide.favoritesTreeView.FavoritesListProvider"
                    area="PROJECT"/>

    <extensionPoint name="lang.emacs" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.editorActions.emacs.EmacsProcessingHandler"/>
    </extensionPoint>

    <!-- File-Based Index-->
    <extensionPoint name="fileBasedIndex" interface="consulo.language.psi.stub.FileBasedIndexExtension"/>
    <extensionPoint name="stubIndex" interface="consulo.language.psi.stub.StubIndexExtension"/>
    <extensionPoint name="indexedRootsContributor" interface="com.intellij.util.indexing.IndexableSetContributor"/>
    <extensionPoint name="include.provider" interface="consulo.ide.impl.psi.impl.include.FileIncludeProvider"/>

    <extensionPoint name="refactoring.copyHandler" interface="com.intellij.refactoring.copy.CopyHandlerDelegate"/>
    <extensionPoint name="refactoring.moveHandler" interface="com.intellij.refactoring.move.MoveHandlerDelegate"/>
    <extensionPoint name="refactoring.moveDirectoryWithClassesHelper"
                    interface="com.intellij.refactoring.move.moveClassesOrPackages.MoveDirectoryWithClassesHelper"/>


    <extensionPoint name="refactoring.helper" interface="com.intellij.refactoring.RefactoringHelper"/>
    <extensionPoint name="refactoring.inlineHandler" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.refactoring.InlineHandler"/>
    </extensionPoint>

    <extensionPoint name="refactoring.safeDeleteProcessor" interface="com.intellij.refactoring.safeDelete.SafeDeleteProcessorDelegate"/>

    <extensionPoint name="refactoring.extractIncludeHandler"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.refactoring.RefactoringActionHandler"/>
    </extensionPoint>

    <extensionPoint name="refactoring.changeSignatureUsageProcessor"
                    interface="com.intellij.refactoring.changeSignature.ChangeSignatureUsageProcessor"/>

    <extensionPoint name="elementDescriptionProvider" interface="consulo.language.psi.ElementDescriptionProvider"/>

    <extensionPoint name="structureViewBuilder"
                    beanClass="consulo.component.extension.KeyedFactoryEPBean">
      <with attribute="implementationClass" implements="consulo.fileEditor.structureView.StructureViewBuilder"/>
    </extensionPoint>

    <extensionPoint name="macro" interface="consulo.pathMacro.Macro"/>
    <extensionPoint name="printOption" interface="com.intellij.codeEditor.printing.PrintOption"/>

    <extensionPoint name="indexPatternBuilder" interface="consulo.ide.impl.psi.impl.search.IndexPatternBuilder"/>

    <extensionPoint name="configurationType"
                    interface="consulo.execution.configuration.ConfigurationType"/>

    <extensionPoint name="runConfigurationsSettings"
                    interface="consulo.execution.configuration.RunConfigurationsSettings"/>

    <extensionPoint name="programRunner"
                    interface="consulo.execution.runner.ProgramRunner"/>

    <extensionPoint name="executor"
                    interface="consulo.execution.executor.Executor"/>

    <extensionPoint name="executionTargetProvider"
                    interface="consulo.execution.ExecutionTargetProvider"/>


    <extensionPoint name="stepsBeforeRunProvider"
                    interface="consulo.execution.BeforeRunTaskProvider"
                    area="PROJECT"/>

    <extensionPoint name="utf8BomOptionProvider" interface="com.intellij.openapi.vfs.encoding.Utf8BomOptionProvider"/>

    <extensionPoint name="consoleFilterProvider" interface="consulo.execution.ui.console.ConsoleFilterProvider"/>
    <extensionPoint name="consoleInputFilterProvider" interface="com.intellij.execution.filters.ConsoleInputFilterProvider"/>
    <extensionPoint name="consoleActionsPostProcessor" interface="com.intellij.execution.actions.ConsoleActionsPostProcessor"/>

    <extensionPoint name="console.folding" interface="consulo.execution.ConsoleFolding"/>

    <extensionPoint name="configurationProducer"
                    interface="consulo.execution.action.RuntimeConfigurationProducer"/>

    <extensionPoint name="runConfigurationProducer" interface="consulo.execution.action.RunConfigurationProducer"/>

    <extensionPoint name="runLineMarkerContributor" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.execution.lineMarker.RunLineMarkerContributor"/>
    </extensionPoint>

    <extensionPoint name="hectorComponentProvider" interface="com.intellij.openapi.editor.HectorComponentPanelsProvider"
                    area="PROJECT"/>
    <extensionPoint name="findInProjectSearchEngine" interface="com.intellij.find.FindInProjectSearchEngine"/>

    <extensionPoint name="runDashboardContributor"
                    interface="com.intellij.execution.dashboard.RunDashboardContributor"/>
    <extensionPoint name="runDashboardGroupingRule"
                    interface="com.intellij.execution.dashboard.DashboardGroupingRule"/>

    <extensionPoint name="scopeTreeExpander" interface="com.intellij.ide.scopeView.ScopeTreeStructureExpander" area="PROJECT"/>

    <extensionPoint name="schemeImporter" beanClass="com.intellij.openapi.options.SchemeImporterEP">
      <with attribute="schemeClass" implements="consulo.component.util.pointer.Named"/>
      <with attribute="implementationClass" implements="com.intellij.openapi.options.SchemeImporter"/>
    </extensionPoint>

    <extensionPoint name="lang.elementManipulator" beanClass="com.intellij.openapi.util.ClassExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.psi.ElementManipulator"/>
    </extensionPoint>

    <extensionPoint name="fileContextProvider" interface="consulo.language.psi.FileContextProvider" area="PROJECT"/>
    <extensionPoint name="psi.fileReferenceHelper"
                    interface="consulo.language.psi.path.FileReferenceHelper"/>

    <extensionPoint name="psi.referenceContributor" beanClass="consulo.ide.impl.psi.impl.source.resolve.reference.PsiReferenceContributorEP">
      <with attribute="implementation" implements="consulo.language.psi.PsiReferenceContributor"/>
    </extensionPoint>

    <extensionPoint name="psi.referenceProvider" beanClass="consulo.ide.impl.psi.PsiReferenceProviderBean"/>
    <extensionPoint name="psi.packageSupportProvider" interface="consulo.language.psi.PsiPackageSupportProvider"/>
    <extensionPoint name="psi.directoryMethodProxy" interface="consulo.language.psi.PsiDirectoryMethodProxy"/>
    <extensionPoint name="patterns.patternClass" beanClass="com.intellij.patterns.compiler.PatternClassBean"/>

    <extensionPoint name="pom.declarationSearcher" interface="consulo.language.pom.PomDeclarationSearcher"/>

    <extensionPoint name="statistician" beanClass="consulo.ide.impl.psi.statistics.StatisticsExtensionPoint">
      <with attribute="implementationClass" implements="consulo.ide.impl.psi.statistics.Statistician"/>
    </extensionPoint>

    <extensionPoint name="weigher" beanClass="consulo.ide.impl.psi.WeigherExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.Weigher"/>
    </extensionPoint>

    <extensionPoint name="completion.contributor" beanClass="com.intellij.codeInsight.completion.CompletionContributorEP">
      <with attribute="implementationClass" implements="consulo.language.editor.completion.CompletionContributor"/>
    </extensionPoint>

    <extensionPoint name="completion.confidence" beanClass="com.intellij.codeInsight.completion.CompletionConfidenceEP">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.completion.CompletionConfidence"/>
    </extensionPoint>

    <extensionPoint name="completion.skip" interface="com.intellij.codeInsight.completion.CompletionPreselectSkipper"/>
    <extensionPoint name="lookup.charFilter" interface="com.intellij.codeInsight.lookup.CharFilter"/>
    <extensionPoint name="lookup.actionProvider" interface="com.intellij.codeInsight.lookup.LookupActionProvider"/>
    <extensionPoint name="originInfoProvider" interface="com.intellij.codeInsight.completion.originInfo.OriginInfoProvider"/>

    <extensionPoint name="highlightRangeExtension" interface="com.intellij.codeInsight.daemon.impl.HighlightRangeExtension"/>

    <extensionPoint name="elementsToHighlightFilter" interface="consulo.util.lang.function.Condition"/>

    <extensionPoint name="sdkType" interface="consulo.content.bundle.SdkType"/>
    <extensionPoint name="predefinedBundlesProvider" interface="consulo.content.bundle.PredefinedBundlesProvider"/>

    <extensionPoint name="library.presentationProvider" interface="consulo.content.library.LibraryPresentationProvider"/>
    <extensionPoint name="library.type" interface="consulo.content.library.LibraryType"/>

    <extensionPoint name="lang.implementationTextSelectioner"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.ImplementationTextSelectioner"/>
    </extensionPoint>

    <extensionPoint name="lang.lineWrapStrategy"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.codeEditor.LineWrapPositionStrategy"/>
    </extensionPoint>

    <extensionPoint name="lang.whiteSpaceFormattingStrategy"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.codeStyle.WhiteSpaceFormattingStrategy"/>
    </extensionPoint>

    <extensionPoint name="lang.indentStrategy"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.openapi.editor.IndentStrategy"/>
    </extensionPoint>

    <extensionPoint name="disabledIndentRangesProvider" interface="consulo.language.codeStyle.DisabledIndentRangesProvider"/>
    <extensionPoint name="lineIndentProvider" interface="consulo.ide.impl.psi.codeStyle.lineIndent.LineIndentProvider"/>

    <extensionPoint name="gotoDeclarationHandler"
                    interface="com.intellij.codeInsight.navigation.actions.GotoDeclarationHandler"/>
    <extensionPoint name="typeDeclarationProvider"
                    interface="com.intellij.codeInsight.navigation.actions.TypeDeclarationProvider"/>
    <extensionPoint name="gotoTargetRendererProvider"
                    interface="com.intellij.codeInsight.navigation.GotoTargetRendererProvider"/>

    <extensionPoint name="navbar" interface="com.intellij.ide.navigationToolbar.NavBarModelExtension"/>

    <extensionPoint name="renameHandler" interface="consulo.language.editor.refactoring.rename.RenameHandler"/>
    <extensionPoint name="renamePsiElementProcessor" interface="com.intellij.refactoring.rename.RenamePsiElementProcessor"/>
    <extensionPoint name="updateAddedFileProcessor" interface="consulo.language.psi.UpdateAddedFileProcessor"/>
    <extensionPoint name="moveFileHandler" interface="com.intellij.refactoring.move.moveFilesOrDirectories.MoveFileHandler"/>
    <extensionPoint name="automaticRenamerFactory" interface="com.intellij.refactoring.rename.naming.AutomaticRenamerFactory"/>
    <extensionPoint name="nameSuggestionProvider" interface="consulo.language.editor.refactoring.rename.NameSuggestionProvider"/>
    <extensionPoint name="vetoRenameCondition" interface="consulo.language.editor.refactoring.rename.VetoRenameCondition"/>

    <extensionPoint name="rename.inplace.resolveSnapshotProvider"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.refactoring.rename.ResolveSnapshotProvider"/>
    </extensionPoint>

    <extensionPoint name="renameInputValidator" interface="com.intellij.refactoring.rename.RenameInputValidator"/>

    <extensionPoint name="findUsagesHandlerFactory" interface="consulo.find.FindUsagesHandlerFactory"
                    area="PROJECT"/>
    <extensionPoint name="customUsageSearcher" interface="com.intellij.find.findUsages.CustomUsageSearcher"/>

    <extensionPoint name="readWriteAccessDetector" interface="consulo.language.editor.highlight.ReadWriteAccessDetector"/>

    <extensionPoint name="scopeParserExtension" interface="consulo.ide.impl.psi.search.scope.packageSet.PackageSetParserExtension"/>

    <extensionPoint name="referenceProviderType" beanClass="consulo.component.extension.KeyedLazyInstanceEP"/>

    <extensionPoint name="colorSettingsPage" interface="consulo.language.editor.colorScheme.setting.ColorSettingsPage"/>
    <extensionPoint name="colorAndFontPanelFactory" interface="com.intellij.application.options.colors.ColorAndFontPanelFactory"/>
    <extensionPoint name="colorAndFontDescriptorProvider" interface="consulo.colorScheme.setting.ColorAndFontDescriptorsProvider"/>

    <extensionPoint name="codeInsight.parameterInfo" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.parameterInfo.ParameterInfoHandler"/>
    </extensionPoint>

    <extensionPoint name="codeInsight.typeInfo" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.ExpressionTypeProvider"/>
    </extensionPoint>

    <extensionPoint name="preloadingActivity" interface="com.intellij.openapi.application.PreloadingActivity"/>

    <extensionPoint name="codeInsight.containerProvider" interface="consulo.language.psi.search.ContainerProvider"/>

    <extensionPoint name="codeInsight.fillParagraph" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.editorActions.fillParagraph.ParagraphFillHandler"/>
    </extensionPoint>

    <extensionPoint name="fileTypeIndentOptionsProvider" interface="consulo.language.codeStyle.setting.FileTypeIndentOptionsProvider"/>
    <extensionPoint name="fileIndentOptionsProvider" interface="consulo.language.codeStyle.FileIndentOptionsProvider"/>
    <extensionPoint name="referenceImporter" interface="com.intellij.codeInsight.daemon.ReferenceImporter"/>
    <extensionPoint name="elementLookupRenderer" interface="consulo.language.editor.completion.lookup.ElementLookupRenderer"/>

    <extensionPoint name="qualifiedNameProvider" interface="consulo.language.editor.QualifiedNameProvider"/>

    <extensionPoint name="virtualFileQualifiedNameProvider" interface="consulo.language.editor.VirtualFileQualifiedNameProvider"/>

    <extensionPoint name="completionData"
                    beanClass="consulo.language.editor.impl.internal.completion.CompletionDataEP"/>

    <extensionPoint name="usageFilteringRuleProvider"
                    interface="consulo.usage.rule.UsageFilteringRuleProvider"/>
    <extensionPoint name="importFilteringRule"
                    interface="consulo.usage.rule.ImportFilteringRule"/>
    <extensionPoint name="usageGroupingRuleProvider"
                    interface="consulo.usage.rule.UsageGroupingRuleProvider"/>
    <extensionPoint name="usageTypeProvider"
                    interface="com.intellij.usages.impl.rules.UsageTypeProvider"/>
    <extensionPoint name="fileStructureGroupRuleProvider"
                    interface="com.intellij.usages.impl.FileStructureGroupRuleProvider"/>
    <extensionPoint name="usageContextPanelProvider"
                    interface="com.intellij.usages.UsageContextPanel$Provider"
                    area="PROJECT"/>
    <extensionPoint name="usageViewElementsListener" interface="com.intellij.usages.impl.UsageViewElementsListener"/>

    <extensionPoint name="treeStructureProvider"
                    interface="consulo.project.ui.view.tree.TreeStructureProvider"
                    area="PROJECT"/>

    <extensionPoint name="defaultLiveTemplatesProvider"
                    interface="com.intellij.codeInsight.template.impl.DefaultLiveTemplatesProvider"/>

    <extensionPoint name="codeInsight.implementMethod" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.LanguageCodeInsightActionHandler"/>
    </extensionPoint>

    <extensionPoint name="codeInsight.overrideMethod" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.LanguageCodeInsightActionHandler"/>
    </extensionPoint>

    <extensionPoint name="codeInsight.delegateMethods" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.LanguageCodeInsightActionHandler"/>
    </extensionPoint>

    <extensionPoint name="codeInsight.gotoSuper" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.LanguageCodeInsightActionHandler"/>
    </extensionPoint>

    <extensionPoint name="codeInsight.lineMarkerProvider" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.gutter.LineMarkerProvider"/>
    </extensionPoint>

    <extensionPoint name="codeInsight.surroundWithRangeAdjuster"
                    interface="com.intellij.codeInsight.generation.surroundWith.SurroundWithRangeAdjuster"/>

    <extensionPoint name="lang.substitutor" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.psi.LanguageSubstitutor"/>
    </extensionPoint>

    <extensionPoint name="filetype.stubBuilder"
                    beanClass="consulo.virtualFileSystem.extension.FileTypeExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.psi.stub.BinaryFileStubBuilder"/>
    </extensionPoint>

    <extensionPoint name="stubElementTypeHolder"
                    beanClass="consulo.language.psi.stub.StubElementTypeHolderEP"/>

    <extensionPoint name="newModuleBuilder" interface="consulo.ide.newProject.NewModuleBuilder"/>

    <extensionPoint name="methodNavigationOffsetProvider"
                    interface="com.intellij.codeInsight.navigation.MethodNavigationOffsetProvider"/>

    <extensionPoint name="filePasteProvider"
                    interface="consulo.ui.ex.PasteProvider"/>

    <extensionPoint name="testFinder"
                    interface="com.intellij.testIntegration.TestFinder"/>
    <extensionPoint name="testSrcLocator"
                    interface="com.intellij.testIntegration.TestLocationProvider"/>
    <extensionPoint name="testStatusListener"
                    interface="consulo.execution.test.TestStatusListener"/>

    <extensionPoint name="testCreator"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.testIntegration.TestCreator"/>
    </extensionPoint>

    <extensionPoint name="lang.smartEnterProcessor"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.editorActions.smartEnter.SmartEnterProcessor"/>
    </extensionPoint>

    <extensionPoint name="callHierarchyProvider" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.ide.hierarchy.HierarchyProvider"/>
    </extensionPoint>
    <extensionPoint name="methodHierarchyProvider" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.ide.hierarchy.HierarchyProvider"/>
    </extensionPoint>

    <extensionPoint name="typeHierarchyProvider" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.ide.hierarchy.HierarchyProvider"/>
    </extensionPoint>

    <extensionPoint name="editorAppearanceConfigurable" beanClass="com.intellij.application.options.editor.EditorAppearanceConfigurableEP">
      <with attribute="instance" implements="com.intellij.application.options.editor.EditorAppearanceConfigurable"/>
    </extensionPoint>

    <extensionPoint name="metaDataContributor" interface="consulo.ide.impl.psi.meta.MetaDataContributor"/>

    <extensionPoint name="documentationProvider"
                    interface="consulo.language.editor.documentation.DocumentationProvider"/>

    <extensionPoint name="lang.documentationFixer" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.documentation.DocCommentFixer"/>
    </extensionPoint>

    <extensionPoint name="templateCompletionProcessor"
                    interface="consulo.language.editor.template.TemplateCompletionProcessor"/>

    <extensionPoint name="targetElementUtilEx" interface="consulo.language.editor.TargetElementUtilExtender"/>

    <extensionPoint name="statementUpDownMover" interface="com.intellij.codeInsight.editorActions.moveUpDown.StatementUpDownMover"/>

    <extensionPoint name="moveLeftRightHandler" beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass"
            implements="com.intellij.codeInsight.editorActions.moveLeftRight.MoveElementLeftRightHandler"/>
    </extensionPoint>

    <extensionPoint name="fileLookupInfoProvider" interface="consulo.ide.impl.psi.file.FileLookupInfoProvider"/>

    <extensionPoint name="idIndexer" beanClass="consulo.virtualFileSystem.extension.FileTypeExtensionPoint">
      <with attribute="implementationClass" implements="consulo.ide.impl.psi.impl.cache.impl.id.IdIndexer"/>
    </extensionPoint>

    <extensionPoint name="todoIndexer" beanClass="consulo.virtualFileSystem.extension.FileTypeExtensionPoint">
      <with attribute="implementationClass" implements="consulo.index.io.DataIndexer"/>
    </extensionPoint>

    <extensionPoint name="refactoring.elementListenerProvider"
                    interface="com.intellij.refactoring.listeners.RefactoringElementListenerProvider"
                    area="PROJECT"/>

    <extensionPoint name="problemFileHighlightFilter" interface="consulo.util.lang.function.Condition" area="PROJECT"/>

    <extensionPoint name="problemHighlightFilter" interface="consulo.language.editor.ProblemHighlightFilter"/>

    <extensionPoint name="uiDebuggerExtension" interface="com.intellij.ui.debugger.UiDebuggerExtension"/>

    <extensionPoint name="projectViewPane" interface="com.intellij.ide.projectView.impl.AbstractProjectViewPane" area="PROJECT"/>
    <extensionPoint name="projectViewPaneSelectionHelperiewPane" interface="com.intellij.ide.projectView.impl.ProjectViewPaneSelectionHelper"/>
    <extensionPoint name="projectViewOptionProvider" interface="consulo.ide.projectView.impl.ProjectViewPaneOptionProvider"/>

    <extensionPoint name="inlineActionHandler" interface="com.intellij.lang.refactoring.InlineActionHandler"/>

    <extensionPoint name="projectViewNodeDecorator" interface="com.intellij.ide.projectView.ProjectViewNodeDecorator"
                    area="PROJECT"/>

    <extensionPoint name="previewHintProvider" interface="com.intellij.codeInsight.preview.PreviewHintProvider"/>
    <extensionPoint name="elementPreviewProvider" interface="com.intellij.codeInsight.preview.ElementPreviewProvider"/>
    <extensionPoint name="testActionProvider" interface="consulo.execution.test.action.ToggleModelActionProvider"/>

    <extensionPoint name="psiViewerExtension" interface="com.intellij.internal.psiView.PsiViewerExtension"/>

    <extensionPoint name="filePropertyPusher" interface="com.intellij.openapi.roots.impl.FilePropertyPusher"/>

    <extensionPoint name="langCodeStyleSettingsProvider" interface="consulo.language.codeStyle.setting.LanguageCodeStyleSettingsProvider"/>

    <extensionPoint name="codeStyleSettingsModifier" interface="consulo.ide.impl.psi.codeStyle.modifier.CodeStyleSettingsModifier"/>

    <extensionPoint name="predefinedCodeStyle" interface="consulo.language.codeStyle.PredefinedCodeStyle"/>

    <extensionPoint name="semContributor"
                    beanClass="com.intellij.semantic.SemContributorEP" area="PROJECT">
      <with attribute="implementation" implements="com.intellij.semantic.SemContributor"/>
    </extensionPoint>

    <extensionPoint name="typeName" beanClass="com.intellij.ide.TypeNameEP"/>

    <extensionPoint name="typeIcon" beanClass="com.intellij.ide.TypeIconEP"/>

    <extensionPoint name="analyzeStacktraceFilter" interface="consulo.execution.ui.console.Filter" area="PROJECT"/>

    <extensionPoint name="stacktrace.fold" beanClass="com.intellij.execution.console.CustomizableConsoleFoldingBean"/>
    <extensionPoint name="changeSignatureDetector"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.refactoring.changeSignature.inplace.LanguageChangeSignatureDetector"/>
    </extensionPoint>

    <extensionPoint name="preserveIndentOnPaste" beanClass="com.intellij.codeInsight.editorActions.PreserveIndentOnPasteBean"/>

    <extensionPoint name="aliasingPsiTargetMapper" interface="consulo.ide.impl.psi.targets.AliasingPsiTargetMapper"/>

    <extensionPoint name="inspectionsReportConverter"
                    interface="com.intellij.codeInspection.InspectionsReportConverter"/>

    <extensionPoint name="patternProvider"
                    interface="com.intellij.codeInsight.generation.PatternProvider"/>

    <extensionPoint name="treeCopyHandler"
                    interface="consulo.language.ast.TreeCopyHandler"/>
    <extensionPoint name="treeGenerator"
                    interface="consulo.language.ast.TreeGenerator"/>

    <extensionPoint name="psi.treeChangePreprocessor"
                    interface="consulo.language.psi.event.PsiTreeChangePreprocessor"
                    area="PROJECT"/>

    <extensionPoint name="codeBlockProvider"
                    beanClass="consulo.language.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="consulo.language.editor.action.CodeBlockProvider"/>
    </extensionPoint>

    <extensionPoint name="toolsProvider" interface="com.intellij.tools.ToolsProvider"/>

    <extensionPoint name="defaultHighlightingSettingProvider"
                    interface="com.intellij.codeInsight.daemon.impl.analysis.DefaultHighlightingSettingProvider"/>


    <extensionPoint name="unusedDeclarationFixProvider"
                    interface="com.intellij.codeInspection.reference.UnusedDeclarationFixProvider"/>
    <extensionPoint name="library.dependencyScopeSuggester" interface="consulo.module.content.layer.orderEntry.LibraryDependencyScopeSuggester"/>

    <extensionPoint name="eventLogCategory" interface="com.intellij.notification.EventLogCategory"/>

    <extensionPoint name="urlOpener" interface="com.intellij.ide.browsers.UrlOpener"/>

    <extensionPoint name="editor.linePainter" interface="consulo.codeEditor.EditorLinePainter"/>

    <extensionPoint name="cachesInvalidator" interface="com.intellij.ide.caches.CachesInvalidator"/>

    <extensionPoint name="addModuleDependencyActionProvider"
                    interface="consulo.roots.ui.configuration.classpath.AddModuleDependencyActionProvider"/>

    <extensionPoint name="actionFromOptionDescriptorProvider" interface="com.intellij.ide.ui.search.ActionFromOptionDescriptorProvider"/>

    <extensionPoint name="stripTrailingSpacesFilterFactory" interface="consulo.document.StripTrailingSpacesFilterFactory"/>

    <extensionPoint name="notification.parentGroup" beanClass="com.intellij.notification.impl.NotificationParentGroupBean"/>
    <extensionPoint name="notification.group" beanClass="com.intellij.notification.impl.NotificationGroupBean"/>

    <extensionPoint name="openapi.vcs.actions.AnnotateToggleAction.Provider"
                    interface="com.intellij.openapi.vcs.actions.AnnotateToggleAction$Provider"/>

    <extensionPoint name="remote.credentialsType" interface="com.intellij.remote.ext.CredentialsTypeEx"/>
    <extensionPoint name="remote.credentialsLanguageContribution"
                    interface="com.intellij.remote.ext.CredentialsLanguageContribution"/>

    <extensionPoint name="fileChooseDialogProvider" interface="consulo.fileChooser.provider.FileChooseDialogProvider"/>
    <extensionPoint name="fileSaveDialogProvider" interface="consulo.fileChooser.provider.FileSaveDialogProvider"/>

    <extensionPoint name="textEditorHighlightingPassFactory" area="PROJECT" interface="com.intellij.codeHighlighting.TextEditorHighlightingPassFactory"/>

    <extensionPoint name="searchEverywhereContributor" interface="com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributorFactory"/>
    <extensionPoint name="searchEverywhereClassifier" interface="com.intellij.ide.actions.SearchEverywhereClassifier"/>
    <extensionPoint name="searchEverywhereResultsEqualityProvider" interface="com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider"/>

    <extensionPoint name="runAnything.executionProvider" interface="com.intellij.ide.actions.runAnything.activity.RunAnythingProvider"/>
    <extensionPoint name="runAnything.commandHandler" interface="com.intellij.ide.actions.runAnything.handlers.RunAnythingCommandHandler"/>
    <extensionPoint name="runAnything.commandCustomizer" interface="com.intellij.ide.actions.runAnything.commands.RunAnythingCommandCustomizer"/>

    <extensionPoint name="searchScopesProvider" interface="consulo.content.scope.SearchScopeProvider"/>
    <extensionPoint name="findInProjectExtension" interface="com.intellij.find.impl.FindInProjectExtension"/>

    <extensionPoint name="uiDecorator" interface="consulo.ui.ex.UIDecorator"/>

    <extensionPoint name="statusBarWidgetProvider" interface="consulo.project.ui.wm.StatusBarWidgetProvider"/>
    <extensionPoint name="statusBarWidgetFactory" interface="consulo.project.ui.wm.StatusBarWidgetFactory"/>

    <extensionPoint name="settingsEntryPointActionProvider" interface="com.intellij.ide.actions.SettingsEntryPointActionProvider"/>
  </extensionPoints>

  <extensions defaultExtensionNs="consulo">
    <applicationService serviceInterface="consulo.project.impl.ProjectOpenProcessors"
                        serviceImplementation="consulo.project.impl.ProjectOpenProcessorsImpl"/>

    <applicationService serviceImplementation="consulo.codeEditor.impl.EditorSettingsExternalizable"/>
    <applicationService serviceImplementation="com.intellij.codeInsight.hints.settings.ParameterNameHintsSettings"/>
    <applicationService serviceImplementation="com.intellij.codeInsight.daemon.impl.ParameterHintsPresentationManager"/>
    <applicationService serviceImplementation="com.intellij.openapi.keymap.KeyboardSettingsExternalizable"/>

    <applicationService serviceImplementation="com.intellij.ide.GeneralSettings"/>

    <applicationService serviceInterface="consulo.application.ApplicationPropertiesComponent"
                        serviceImplementation="com.intellij.ide.util.AppPropertiesComponentImpl"/>

    <applicationService serviceInterface="consulo.virtualFileSystem.fileType.FileNameMatcherFactory"
                        serviceImplementation="com.intellij.openapi.fileTypes.impl.FileNameMatcherFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.projectRoots.impl.JdkVersionDetector"
                        serviceImplementation="com.intellij.openapi.projectRoots.impl.JdkVersionDetectorImpl"/>

    <applicationService serviceInterface="consulo.ide.browsers.WebBrowserManager" serviceImplementation="com.intellij.ide.browsers.WebBrowserManager"/>

    <applicationService serviceInterface="com.intellij.ide.browsers.BrowserLauncher" serviceImplementation="com.intellij.ide.browsers.BrowserLauncherImpl"/>

    <urlOpener implementation="com.intellij.ide.browsers.impl.DefaultUrlOpener" order="last"/>

    <projectService serviceInterface="consulo.project.ProjectPropertiesComponent"
                    serviceImplementation="com.intellij.ide.util.ProjectPropertiesComponentImpl"/>

    <applicationService serviceImplementation="com.intellij.openapi.wm.impl.WindowDressing" lazy="false"/>

    <applicationService serviceInterface="consulo.virtualFileSystem.internal.VirtualFileTracker"
                        serviceImplementation="com.intellij.openapi.vfs.tracker.VirtualFileTrackerImpl"/>

    <applicationService serviceInterface="consulo.application.progress.ProgressManager"
                        serviceImplementation="com.intellij.openapi.progress.impl.ProgressManagerImpl"/>

    <applicationService serviceInterface="consulo.ui.ex.action.CustomActionsSchema" serviceImplementation="com.intellij.ide.ui.customization.CustomActionsSchemaImpl"/>

    <applicationService serviceInterface="consulo.project.internal.DefaultProjectFactory"
                        serviceImplementation="com.intellij.openapi.project.impl.DefaultProjectFactoryImpl" lazy="false"/>

    <applicationService serviceImplementation="com.intellij.openapi.editor.richcopy.settings.RichCopySettings"/>
    <applicationService serviceImplementation="consulo.ui.ex.awt.internal.MouseGestureManager"/>

    <applicationService serviceInterface="consulo.execution.RunnerRegistry" serviceImplementation="com.intellij.execution.impl.RunnerRegistryImpl"/>

    <undoProvider implementation="consulo.command.impl.ApplicationFileUndoProvider"/>
    <projectUndoProvider implementation="consulo.command.impl.ProjectFileUndoProvider"/>

    <applicationService serviceInterface="consulo.undoRedo.CommandProcessor"
                        serviceImplementation="com.intellij.openapi.command.impl.CommandProcessorImpl"/>

    <applicationService serviceInterface="consulo.ui.ex.action.CommonActionsManager"
                        serviceImplementation="com.intellij.ide.impl.CommonActionsManagerImpl"/>

    <applicationService serviceInterface="consulo.ui.ex.awt.CopyPasteManager"
                        serviceImplementation="com.intellij.ide.CopyPasteManagerEx"/>
    <applicationService serviceInterface="consulo.ui.ex.popup.JBPopupFactory"
                        serviceImplementation="com.intellij.ui.popup.PopupFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.fileEditor.ex.FileEditorProviderManager"
                        serviceImplementation="com.intellij.openapi.fileEditor.impl.FileEditorProviderManagerImpl"/>
    <applicationService serviceInterface="com.intellij.ide.ui.search.SearchableOptionsRegistrar"
                        serviceImplementation="com.intellij.ide.ui.search.SearchableOptionsRegistrarImpl"/>

    <applicationService serviceInterface="consulo.codeEditor.EditorCopyPasteHelper"
                        serviceImplementation="com.intellij.openapi.editor.impl.EditorCopyPasteHelperImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.vfs.impl.http.RemoteFileManager"
                        serviceImplementation="com.intellij.openapi.vfs.impl.http.RemoteFileManagerImpl"/>
    <applicationService serviceImplementation="consulo.component.store.impl.internal.ApplicationDefaultStoreCache"/>

    <applicationService serviceInterface="com.intellij.ui.TreeUIHelper"
                        serviceImplementation="com.intellij.ui.TreeUIHelperImpl"/>
    <applicationService serviceInterface="consulo.ui.ex.awt.ExpandableItemsHandlerFactory"
                        serviceImplementation="com.intellij.ui.ExpandTipHandlerFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.keymap.KeymapGroupFactory"
                        serviceImplementation="com.intellij.openapi.keymap.impl.KeymapGroupFactoryImpl"/>
    <applicationService serviceInterface="consulo.language.editor.highlight.EditorHighlighterFactory"
                        serviceImplementation="com.intellij.openapi.editor.highlighter.EditorHighlighterFactoryImpl"/>
    <applicationService serviceInterface="consulo.ui.ex.awt.dnd.DnDManager"
                        serviceImplementation="com.intellij.ide.dnd.DnDManagerImpl"/>
    <applicationService serviceInterface="consulo.language.file.EncodingManager"
                        serviceImplementation="com.intellij.openapi.vfs.encoding.EncodingManagerImpl"/>
    <applicationService serviceInterface="com.intellij.ide.plugins.PluginManagerUISettings"
                        serviceImplementation="com.intellij.ide.plugins.PluginManagerUISettings"/>
    <applicationService serviceInterface="com.intellij.codeInsight.hint.HintManager"
                        serviceImplementation="com.intellij.codeInsight.hint.HintManagerImpl"/>
    <applicationService serviceInterface="com.intellij.codeInsight.hint.TooltipController"
                        serviceImplementation="com.intellij.codeInsight.hint.TooltipController"/>
    <applicationService serviceInterface="consulo.codeEditor.action.EditorActionManager"
                        serviceImplementation="com.intellij.openapi.editor.impl.EditorActionManagerImpl"/>
    <applicationService serviceImplementation="consulo.ide.updateSettings.UpdateSettings"/>
    <applicationService serviceImplementation="consulo.ide.updateSettings.impl.UpdateHistory"/>
    <applicationService serviceInterface="consulo.application.statistic.FeatureUsageTracker"
                        serviceImplementation="com.intellij.featureStatistics.FeatureUsageTrackerImpl"/>
    <applicationService serviceInterface="consulo.application.util.FreezeLogger"
                        serviceImplementation="com.intellij.reporting.FreezeLoggerImpl"/>
    <applicationService serviceInterface="com.intellij.featureStatistics.ProductivityFeaturesRegistry"
                        serviceImplementation="com.intellij.featureStatistics.ProductivityFeaturesRegistryImpl"/>
    <applicationService serviceImplementation="com.intellij.internal.statistic.persistence.ApplicationStatisticsPersistenceComponent"/>
    <applicationService serviceImplementation="com.intellij.internal.statistic.persistence.UsageStatisticsPersistenceComponent"/>
    <applicationService serviceImplementation="consulo.internal.statistic.ApplicationStatisticsListeners" lazy="false"/>

    <applicationService serviceInterface="com.intellij.internal.psiView.PsiViewerSettings"
                        serviceImplementation="com.intellij.internal.psiView.PsiViewerSettings"/>
    <applicationService serviceInterface="consulo.language.psi.path.FileReferenceCompletion"
                        serviceImplementation="consulo.ide.impl.psi.impl.source.resolve.reference.impl.providers.FileReferenceCompletionImpl"/>

    <applicationService serviceInterface="com.intellij.util.graph.GraphAlgorithms"
                        serviceImplementation="com.intellij.util.graph.impl.GraphAlgorithmsImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.keymap.impl.DefaultKeymap"
                        serviceImplementation="com.intellij.openapi.keymap.impl.DefaultKeymap"/>

    <applicationService serviceImplementation="consulo.ide.plugins.InstalledPluginsState"/>

    <applicationService serviceInterface="com.intellij.ide.passwordSafe.impl.providers.masterKey.PasswordDatabase"
                        serviceImplementation="com.intellij.ide.passwordSafe.impl.providers.masterKey.PasswordDatabase"/>
    <applicationService serviceInterface="com.intellij.ide.passwordSafe.config.PasswordSafeSettings"
                        serviceImplementation="com.intellij.ide.passwordSafe.config.PasswordSafeSettings"/>
    <applicationService serviceInterface="com.intellij.ide.passwordSafe.PasswordSafe"
                        serviceImplementation="com.intellij.ide.passwordSafe.impl.PasswordSafeImpl"/>
    <applicationService serviceInterface="consulo.execution.process.ColoredOutputTypeRegistry"
                        serviceImplementation="consulo.execution.process.ColoredOutputTypeRegistry"/>
    <applicationService serviceInterface="consulo.process.local.internal.OSProcessManager"
                        serviceImplementation="com.intellij.execution.process.impl.OSProcessManagerImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.options.SchemesManagerFactory"
                        serviceImplementation="com.intellij.openapi.options.SchemesManagerFactoryImpl"/>
    <applicationService serviceInterface="consulo.colorScheme.TextAttributesKey$TextAttributeKeyDefaultsProvider"
                        serviceImplementation="com.intellij.openapi.editor.colors.impl.TextAttributeKeyDefaultsProviderImpl"/>
    <applicationService serviceInterface="consulo.colorScheme.EditorColorsManager"
                        serviceImplementation="com.intellij.openapi.editor.colors.impl.EditorColorsManagerImpl"/>
    <applicationService serviceInterface="consulo.component.store.impl.internal.PathMacrosService"
                        serviceImplementation="consulo.application.options.PathMacrosServiceImpl"/>
    <schemeOwner serviceInterface="consulo.colorScheme.EditorColorsManager"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.ui.FileAppearanceService"
                        serviceImplementation="com.intellij.openapi.roots.ui.FileAppearanceServiceImpl"/>

    <applicationService serviceImplementation="com.intellij.internal.statistic.UsageTrigger"/>

    <applicationService serviceInterface="com.intellij.codeInsight.actions.FormatChangedTextUtil"
                        serviceImplementation="com.intellij.codeInsight.actions.VcsAwareFormatChangedTextUtil"/>

    <applicationService serviceInterface="com.intellij.openapi.vcs.actions.AnnotationsSettings"
                        serviceImplementation="com.intellij.openapi.vcs.actions.AnnotationsSettings"/>

    <applicationService serviceImplementation="com.intellij.util.net.ssl.CertificateManager"/>

    <applicationService serviceInterface="consulo.language.editor.gutter.LineMarkerSettings"
                        serviceImplementation="com.intellij.codeInsight.daemon.impl.LineMarkerSettingsImpl"/>

    <applicationService serviceInterface="com.intellij.remote.ext.CredentialsManager"
                        serviceImplementation="com.intellij.remote.ext.CredentialsManagerImpl"/>

    <applicationService serviceInterface="com.intellij.ide.RecentProjectsManager" serviceImplementation="com.intellij.ide.RecentDirectoryProjectsManager"/>

    <applicationService serviceImplementation="consulo.fileChooser.impl.FileOperateDialogSettings"/>
    <applicationService serviceImplementation="com.intellij.ide.MacOSApplicationProvider"/>
    <applicationService serviceImplementation="consulo.ide.actions.webSearch.WebSearchOptions"/>

    <applicationService serviceInterface="consulo.process.local.ProcessHandlerFactory"
                        serviceImplementation="com.intellij.execution.process.ProcessHandlerFactoryImpl"/>

    <applicationService serviceInterface="consulo.ui.ex.UiActivityMonitor" serviceImplementation="com.intellij.ide.UiActivityMonitorImpl"/>

    <projectService serviceInterface="consulo.virtualFileSystem.ReadonlyStatusHandler"
                    serviceImplementation="com.intellij.openapi.vcs.readOnlyHandler.ReadonlyStatusHandlerImpl"/>
    <projectService serviceInterface="consulo.project.startup.StartupManager"
                    serviceImplementation="com.intellij.ide.startup.impl.StartupManagerImpl"/>
    <projectService serviceInterface="consulo.ui.ex.awt.MasterDetailsStateService"
                    serviceImplementation="consulo.ui.ex.awt.MasterDetailsStateService"/>
    <projectService serviceInterface="com.intellij.ide.SelectInManager" serviceImplementation="com.intellij.ide.SelectInManager"/>

    <projectService serviceInterface="com.intellij.ide.errorTreeView.impl.ErrorTreeViewConfiguration"
                    serviceImplementation="com.intellij.ide.errorTreeView.impl.ErrorTreeViewConfiguration"/>


    <projectService serviceInterface="consulo.fileEditor.SelectInEditorManager"
                    serviceImplementation="com.intellij.ide.impl.SelectInEditorManagerImpl"/>
    <projectService serviceInterface="com.intellij.ui.RecentsManager"
                    serviceImplementation="com.intellij.ui.RecentsManager"/>
    <projectService serviceInterface="com.intellij.ui.content.MessageView"
                    serviceImplementation="com.intellij.ui.content.impl.MessageViewImpl"/>

    <projectService serviceInterface="com.intellij.ui.tabs.FileColorSharedConfigurationManager"
                    serviceImplementation="com.intellij.ui.tabs.FileColorSharedConfigurationManager"/>

    <projectService serviceInterface="consulo.project.DumbService"
                    serviceImplementation="com.intellij.openapi.project.DumbServiceImpl"/>

    <projectService serviceInterface="consulo.language.psi.util.CachedValuesManager"
                    serviceImplementation="consulo.language.impl.internal.psi.CachedValuesManagerImpl"/>

    <projectService serviceInterface="com.intellij.openapi.vcs.impl.projectlevelman.AllVcsesI"
                    serviceImplementation="com.intellij.openapi.vcs.impl.projectlevelman.AllVcses"/>

    <projectService serviceInterface="com.intellij.openapi.vcs.changes.RemoteRevisionsCache"
                    serviceImplementation="com.intellij.openapi.vcs.changes.RemoteRevisionsCache"/>

    <projectService serviceImplementation="consulo.execution.test.export.ExportTestResultsConfiguration"/>

    <projectService serviceImplementation="consulo.execution.test.autotest.AutoTestManager"/>

    <projectService serviceInterface="com.intellij.openapi.vcs.VcsFileListenerContextHelper"
                    serviceImplementation="com.intellij.openapi.vcs.VcsFileListenerContextHelper"/>

    <projectService serviceInterface="consulo.document.LazyRangeMarkerFactory"
                    serviceImplementation="com.intellij.openapi.editor.impl.LazyRangeMarkerFactoryImpl"/>

    <projectService serviceInterface="com.intellij.openapi.project.ProjectReloadState"
                    serviceImplementation="com.intellij.openapi.project.impl.ProjectReloadStateImpl"/>

    <projectService serviceImplementation="com.intellij.execution.TestStateStorage"/>

    <projectService serviceInterface="com.intellij.execution.testframework.sm.TestHistoryConfiguration"
                    serviceImplementation="com.intellij.execution.testframework.sm.TestHistoryConfiguration"/>

    <projectService serviceImplementation="com.intellij.openapi.vcs.changes.VcsDirtyScopeVfsListener"/>

    <projectService serviceInterface="com.intellij.util.indexing.FileBasedIndexScanRunnableCollector"
                    serviceImplementation="com.intellij.util.indexing.FileBasedIndexScanRunnableCollectorImpl"/>

    <projectService serviceImplementation="com.intellij.ide.bookmarks.BookmarkManager"/>

    <postStartupActivity implementation="com.intellij.ide.bookmarks.BookmarkManager$MyStartupActivity"/>

    <fileTypeFactory implementation="com.intellij.openapi.fileTypes.impl.PlatformFileTypeFactory"/>
    <postStartupActivity implementation="com.intellij.openapi.fileTypes.impl.ApproveRemovedMappingsActivity"/>
    <applicationService serviceInterface="com.intellij.openapi.options.colors.ColorSettingsPages"
                        serviceImplementation="com.intellij.openapi.options.colors.pages.ColorSettingsPagesImpl"/>

    <applicationService serviceInterface="consulo.content.scope.PackageSetFactory"
                        serviceImplementation="consulo.ide.impl.psi.search.scope.packageSet.PackageSetFactoryImpl"/>

    <scopeParserExtension implementation="consulo.ide.impl.psi.search.scope.packageSet.FilePackageSetParserExtension"/>
    <applicationService serviceInterface="consulo.ui.ex.popup.StackingPopupDispatcher"
                        serviceImplementation="com.intellij.ui.popup.StackingPopupDispatcherImpl"/>


    <applicationService serviceInterface="com.intellij.find.impl.FindPopupScopeUIProvider"
                        serviceImplementation="com.intellij.find.impl.FindPopupScopeUIProviderImpl"/>

    <projectService serviceInterface="consulo.language.psi.PsiPackageManager"
                    serviceImplementation="consulo.psi.impl.PsiPackageManagerImpl"/>
    <fileEditorProvider implementation="com.intellij.openapi.fileEditor.impl.http.HttpFileEditorProvider"/>
    <fileEditorProvider implementation="com.intellij.openapi.fileEditor.impl.text.PsiAwareTextEditorProviderImpl"/>

    <editorActionHandler action="EditorEscape" implementationClass="com.intellij.codeInsight.hint.EscapeHandler" id="hide-hints"/>

    <editorActionHandler action="EditorDelete" implementationClass="com.intellij.openapi.editor.actions.DeleteSelectionHandler"
                         id="delete.for.selection"/>
    <editorActionHandler action="EditorBackSpace" implementationClass="com.intellij.openapi.editor.actions.DeleteSelectionHandler"
                         id="backspace.for.selection" order="after backspace.lookup"/>

    <editorActionHandler action="EditorDelete" implementationClass="com.intellij.openapi.editor.actions.DeleteInColumnModeHandler"
                         id="delete.in.column.mode"/>

    <statistics.usagesCollector implementation="com.intellij.ide.plugins.DisabledPluginsUsagesCollector"/>
    <statistics.usagesCollector implementation="com.intellij.ide.plugins.PluginsUsagesCollector"/>
    <statistics.usagesCollector implementation="com.intellij.featureStatistics.FeaturesUsageCollector"/>
    <statistics.usagesCollector implementation="com.intellij.openapi.vcs.statistics.VcsUsagesCollector"/>
    <statistics.usagesCollector implementation="com.intellij.internal.statistic.UsageTrigger$MyCollector"/>
    <statistics.usagesCollector implementation="consulo.ide.updateSettings.impl.UpdateChannelUsagesCollector"/>
    <statistics.usagesCollector implementation="consulo.application.impl.SandboxUsagesCollector"/>
    <statistics.usagesCollector implementation="consulo.bundle.impl.BundleTypeUsagesCollector"/>

    <statistics.usagesCollector implementation="com.intellij.internal.statistic.ideSettings.LaFUsagesCollector"/>


    <virtualFileSystem implementation="com.intellij.openapi.vfs.ex.dummy.DummyFileSystem"/>
    <virtualFileSystem implementation="com.intellij.openapi.vfs.impl.http.HttpFileSystemImpl"/>
    <virtualFileSystem implementation="com.intellij.openapi.vfs.impl.http.HttpsFileSystem"/>
    <virtualFileSystem implementation="com.intellij.openapi.vfs.impl.local.LocalFileSystemImpl"/>
    <virtualFileSystem implementation="consulo.vfs.impl.zip.ZipFileSystemImpl"/>
    <virtualFileSystem implementation="com.intellij.openapi.vfs.ex.temp.TempFileSystem"/>

    <toolWindow id="Event Log" anchor="bottom" secondary="true"
                icon="consulo.platform.base.PlatformIconGroup@ide.notification.noevents"
                factoryClass="com.intellij.notification.EventLogToolWindowFactory"/>

    <projectService serviceImplementation="com.intellij.notification.EventLog$ProjectTracker" lazy="false"/>

    <projectService serviceInterface="com.intellij.openapi.wm.impl.ProjectFrameBounds"
                    serviceImplementation="com.intellij.openapi.wm.impl.ProjectFrameBounds"/>

    <applicationService serviceInterface="consulo.application.util.TypePresentationService"
                        serviceImplementation="com.intellij.ide.TypePresentationServiceImpl"/>

    <postStartupActivity implementation="com.intellij.ide.TipOfTheDayStartupActivity"/>
    <postStartupActivity id="OpenFilesActivity" implementation="com.intellij.openapi.fileEditor.impl.OpenFilesActivity"/>
    <postStartupActivity id="InitToolWindows" implementation="consulo.wm.impl.ToolWindowManagerBase$InitToolWindowsActivity" order="before OpenFilesActivity"/>
    <postStartupActivity implementation="com.intellij.ui.breadcrumbs.BreadcrumbsInitializingActivity" order="after InitToolWindows"/>

    <preloadingActivity implementation="com.intellij.openapi.actionSystem.impl.ActionPreloader"/>
    <preloadingActivity implementation="consulo.bundle.impl.PredefinedBundlesLoader"/>
    <preloadingActivity implementation="com.intellij.ide.SystemHealthMonitor"/>

    <patch.extension implementation="com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP"/>
    <patch.extension implementation="com.intellij.openapi.diff.impl.patch.CharsetEP"/>

    <iconDescriptorUpdater implementation="consulo.ide.impl.language.LockedIconDescriptorUpdater"/>

    <fileEditorProvider implementation="com.intellij.openapi.fileEditor.impl.text.LargeFileEditorProvider"/>

    <editorNotificationProvider implementation="com.intellij.openapi.editor.impl.ForcedSoftWrapsNotificationProvider"/>
    <editorNotificationProvider implementation="com.intellij.ide.FileChangedNotificationProvider"/>
    <editorNotificationProvider
        implementation="com.intellij.ide.plugins.pluginsAdvertisement.PluginAdvertiserEditorNotificationProvider"/>

    <getDataRule implementation="com.intellij.ide.impl.dataRules.ProjectFileDirectoryRule"/>

    <localInspection shortName="InconsistentLineSeparators" bundle="consulo.language.editor.inspection.InspectionsBundle" key="inconsistent.line.separators"
                     groupKey="group.names.portability.issues" enabledByDefault="false" level="WARNING"
                     implementationClass="com.intellij.codeStyle.InconsistentLineSeparatorsInspection"/>

    <!--VCS-->
    <applicationService serviceInterface="com.intellij.openapi.vcs.actions.VcsContextFactory"
                        serviceImplementation="com.intellij.peer.impl.VcsContextFactoryImpl"/>

    <projectService serviceInterface="com.intellij.openapi.vcs.AbstractVcsHelper"
                    serviceImplementation="com.intellij.openapi.vcs.impl.AbstractVcsHelperImpl"/>
    <projectService serviceInterface="com.intellij.openapi.vcs.IssueNavigationConfiguration"
                    serviceImplementation="com.intellij.openapi.vcs.IssueNavigationConfiguration"/>
    <projectService serviceInterface="com.intellij.openapi.diff.DirDiffManager"
                    serviceImplementation="com.intellij.openapi.diff.impl.dir.DirDiffManagerImpl"/>
    <projectService serviceImplementation="com.intellij.openapi.vcs.VcsConfiguration"/>
    <projectService serviceImplementation="com.intellij.openapi.vcs.contentAnnotation.VcsContentAnnotationSettings"/>
    <projectService serviceInterface="com.intellij.openapi.vcs.roots.VcsRootDetector"
                    serviceImplementation="com.intellij.openapi.vcs.roots.VcsRootDetectorImpl"/>
    <projectService serviceImplementation="com.intellij.openapi.vcs.VcsNotifier"/>

    <selectInTarget implementation="com.intellij.openapi.vcs.changes.SelectInChangesViewTarget"/>

    <changesViewContent tabName="Repository" className="com.intellij.openapi.vcs.changes.committed.CommittedChangesViewManager"
                        predicateClassName="com.intellij.openapi.vcs.changes.committed.CommittedChangesVisibilityPredicate"/>
    <changesViewContent tabName="Incoming" className="com.intellij.openapi.vcs.changes.committed.IncomingChangesViewProvider"
                        predicateClassName="com.intellij.openapi.vcs.changes.committed.IncomingChangesVisibilityPredicate"/>

    <vcs.fileStatusProvider implementation="com.intellij.openapi.vcs.changes.conflicts.ChangelistConflictFileStatusProvider"/>
    <writingAccessProvider implementation="com.intellij.openapi.vcs.changes.conflicts.ChangelistConflictAccessProvider"/>
    <editorNotificationProvider implementation="com.intellij.openapi.vcs.changes.conflicts.ChangelistConflictNotificationProvider"/>

    <handleTypeFactory implementation="com.intellij.openapi.vcs.readOnlyHandler.VcsHandleTypeFactory"/>

    <keymapExtension implementation="com.intellij.openapi.vcs.impl.VcsKeymapExtension"/>
    <fileTypeFactory implementation="com.intellij.openapi.vcs.impl.VcsFileTypeFactory"/>
    <virtualFileSystem implementation="com.intellij.openapi.vcs.vfs.VcsFileSystem"/>
    <fileDocumentSynchronizationVetoer implementation="com.intellij.openapi.vcs.changes.SaveCommittingDocumentsVetoer"/>

    <applicationService serviceImplementation="com.intellij.openapi.vcs.VcsApplicationSettings"/>
    <applicationService serviceInterface="com.intellij.openapi.vcs.impl.CheckinHandlersManager"
                        serviceImplementation="com.intellij.openapi.vcs.impl.CheckinHandlersManagerImpl"/>
    <pathMacroFilter implementation="com.intellij.openapi.vcs.VcsPathMacroFilter"/>

    <!--Rich-->
    <projectViewPane implementation="com.intellij.ide.projectView.impl.ProjectViewPane"/>
    <projectViewOptionProvider implementation="consulo.ide.projectView.ShowExcludedFilesProjectViewPaneOptionProvider"/>
    <projectViewPane implementation="com.intellij.ide.projectView.impl.PackageViewPane"/>

    <renameHandler implementation="com.intellij.ide.projectView.impl.RenameModuleHandler"/>
    <renameHandler implementation="com.intellij.openapi.roots.impl.libraries.RenameLibraryHandler"/>

    <packaging.sourceItemProvider
        implementation="com.intellij.openapi.roots.ui.configuration.artifacts.sourceItems.ModulesAndLibrariesSourceItemsProvider"/>
    <packaging.sourceItemProvider
        implementation="com.intellij.openapi.roots.ui.configuration.artifacts.sourceItems.ArtifactsSourceItemsProvider"/>
    <packaging.artifactType implementation="consulo.packaging.impl.artifacts.ZipArtifactType" order="first" id="zip-artifact"/>
    <packaging.artifactType implementation="com.intellij.packaging.impl.artifacts.PlainArtifactType" order="last"/>
    <compiler.additionalCompileScopeProvider implementation="com.intellij.packaging.impl.compiler.ArtifactAdditionalCompileScopeProvider"/>
    <gotoRelatedProvider implementation="com.intellij.testIntegration.GotoTestRelatedProvider"/>


    <projectService serviceInterface="consulo.compiler.artifact.element.PackagingElementFactory"
                    serviceImplementation="com.intellij.packaging.impl.elements.PackagingElementFactoryImpl"/>


    <applicationService serviceInterface="com.intellij.openapi.roots.ui.OrderEntryAppearanceService"
                        serviceImplementation="com.intellij.openapi.roots.ui.OrderEntryAppearanceServiceImpl"/>

    <projectService serviceInterface="com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicyFactory"
                    serviceImplementation="com.intellij.openapi.vcs.changes.ui.ChangesModuleGroupingPolicyFactory"/>

    <projectService serviceInterface="consulo.language.content.FileIndexFacade"
                    serviceImplementation="com.intellij.openapi.roots.impl.ProjectFileIndexFacade"/>
    <projectService serviceInterface="com.intellij.openapi.vcs.impl.VcsPathPresenter"
                    serviceImplementation="com.intellij.openapi.vcs.impl.ModuleVcsPathPresenter"/>

    <applicationService serviceInterface="com.intellij.openapi.wm.impl.FrameTitleBuilder"
                        serviceImplementation="com.intellij.openapi.wm.impl.PlatformFrameTitleBuilder"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.ui.configuration.libraries.LibraryPresentationManager"
                        serviceImplementation="com.intellij.openapi.roots.ui.configuration.libraries.impl.LibraryPresentationManagerImpl"/>
    <projectService serviceInterface="com.intellij.openapi.roots.ui.configuration.dependencyAnalysis.AnalyzeDependenciesSettings"
                    serviceImplementation="com.intellij.openapi.roots.ui.configuration.dependencyAnalysis.AnalyzeDependenciesSettings"/>

    <daemon.highlightInfoFilter implementation="com.intellij.codeInsight.daemon.impl.HighlightInfoFilterImpl"/>

    <!-- Compiler -->
    <projectConfigurable instance="consulo.compiler.impl.setting.CompilerConfigurable" id="project.propCompiler"
                         key="compiler.configurable.display.name" bundle="consulo.compiler.CompilerBundle" order="after project"/>

    <projectConfigurable id="project.propCompiler.excluded" bundle="consulo.compiler.CompilerBundle" key="actions.exclude.from.compile.text"
                         parentId="project.propCompiler"
                         instance="consulo.compiler.impl.setting.CompilerExcludedConfigurable"/>

    <checkoutListener implementation="com.intellij.openapi.vcs.checkout.ProjectImporterCheckoutListener"/>
    <vcsAwareCheckoutListener implementation="com.intellij.openapi.vcs.checkout.RegisterMappingCheckoutListener"/>

    <orderRootType implementation="consulo.content.base.BinariesOrderRootType"/>
    <orderRootTypeEditor key="binaries"
                         implementationClass="com.intellij.openapi.roots.ui.configuration.libraryEditor.BinariesOrderRootTypeUIFactory"/>

    <orderRootType implementation="consulo.content.base.SourcesOrderRootType"/>
    <orderRootTypeEditor key="sources"
                         implementationClass="com.intellij.openapi.roots.ui.configuration.libraryEditor.SourcesOrderRootTypeUIFactory"/>

    <orderRootType implementation="consulo.content.base.DocumentationOrderRootType"/>
    <orderRootTypeEditor key="documentation"
                         implementationClass="com.intellij.openapi.roots.ui.configuration.libraryEditor.DocumentationOrderRootTypeUIFactory"/>

    <statistics.usagesCollector implementation="com.intellij.openapi.roots.ui.configuration.libraries.impl.LibraryUsageCollector"/>

    <copyPastePostProcessor implementation="com.intellij.codeInsight.editorActions.CopyPasteFoldingProcessor"/>


    <stepsBeforeRunProvider implementation="consulo.compiler.execution.CompileStepBeforeRun" id="compileBeforeRun"/>
    <stepsBeforeRunProvider implementation="consulo.compiler.execution.CompileStepBeforeRunNoErrorCheck"
                            id="compileBeforeRunNoErrorCheck" order="after compileBeforeRun"/>
    <stepsBeforeRunProvider implementation="consulo.packaging.impl.run.BuildArtifactsBeforeRunTaskProvider"
                            order="after compileBeforeRunNoErrorCheck"/>
    <stepsBeforeRunProvider implementation="com.intellij.execution.impl.RunConfigurationBeforeRunProvider"/>

    <usageFilteringRuleProvider implementation="com.intellij.usages.impl.ImportUsageFilteringRuleProvider"/>
    <applicationService serviceInterface="com.intellij.usages.impl.ImportFilteringUsageViewSetting"
                        serviceImplementation="com.intellij.usages.impl.ImportFilteringUsageViewSetting"/>

    <!-- this depends on TemplateLanguageConfigurable which isn't registered in LangExtensions, so it should go here as well -->
    <errorQuickFixProvider implementation="consulo.ide.impl.psi.templateLanguages.TemplateLanguageErrorQuickFixProvider"/>

    <roots.watchedRootsProvider implementation="consulo.compiler.impl.CompilerConfigurationImpl$MyWatchedRootsProvider"/>
    <projectService serviceInterface="consulo.roots.ui.configuration.projectRoot.daemon.ProjectStructureProblemsSettings"
                    serviceImplementation="com.intellij.openapi.roots.ui.configuration.projectRoot.daemon.ProjectStructureProblemsSettingsImpl"/>

    <applicationService serviceInterface="consulo.roots.ui.configuration.projectRoot.daemon.ApplicationStructureProblemsSettings"
                        serviceImplementation="com.intellij.openapi.roots.ui.configuration.projectRoot.daemon.GlobalProjectStructureProblemsSettings"/>

    <referencesSearch implementation="consulo.ide.impl.psi.impl.search.CachesBasedRefSearcher"/>
    <referencesSearch implementation="consulo.ide.impl.psi.impl.search.NonPhysicalReferenceSearcher"/>

    <applicationService serviceInterface="consulo.language.editor.completion.CompletionService"
                        serviceImplementation="com.intellij.codeInsight.completion.impl.CompletionServiceImpl"/>

    <applicationService serviceInterface="consulo.language.cacheBuilder.CacheBuilderRegistry"
                        serviceImplementation="com.intellij.lang.cacheBuilder.CacheBuilderRegistryImpl"/>

    <applicationService serviceInterface="consulo.language.editor.intention.IntentionManager"
                        serviceImplementation="com.intellij.codeInsight.intention.impl.config.IntentionManagerImpl"/>

    <applicationService serviceInterface="consulo.application.internal.concurrency.JobLauncher"
                        serviceImplementation="com.intellij.concurrency.JobLauncherImpl"/>

    <applicationService serviceInterface="consulo.project.ProjectLocator"
                        serviceImplementation="com.intellij.openapi.project.ProjectLocatorImpl"/>

    <applicationService serviceInterface="com.intellij.packageDependencies.DependencyUISettings"
                        serviceImplementation="com.intellij.packageDependencies.DependencyUISettings"/>

    <projectService serviceInterface="consulo.fileTemplate.FileTemplateManager"
                    serviceImplementation="com.intellij.ide.fileTemplates.impl.FileTemplateManagerImpl"/>
    <projectService serviceImplementation="consulo.fileTemplate.impl.internal.FileTemplateSettings"/>
    <applicationService serviceInterface="consulo.fileTemplate.impl.internal.ExportableFileTemplateSettings"
                        serviceImplementation="consulo.fileTemplate.impl.internal.ExportableFileTemplateSettings"/>

    <applicationService serviceInterface="com.intellij.ide.PsiCopyPasteManager"
                        serviceImplementation="com.intellij.ide.PsiCopyPasteManager"/>

    <applicationService serviceInterface="consulo.usage.UsageViewSettings"
                        serviceImplementation="consulo.usage.UsageViewSettings"/>
    <applicationService serviceInterface="com.intellij.refactoring.RefactoringSettings"
                        serviceImplementation="com.intellij.refactoring.RefactoringSettings"/>
    <applicationService serviceInterface="com.intellij.refactoring.RefactoringActionHandlerFactory"
                        serviceImplementation="com.intellij.refactoring.openapi.impl.RefactoringActionHandlerFactoryImpl"/>

    <applicationService serviceInterface="consulo.execution.ui.console.TextConsoleBuilderFactory"
                        serviceImplementation="com.intellij.execution.filters.TextConsoleBuilderFactoryImpl"/>

    <applicationService serviceInterface="consulo.language.parser.PsiBuilderFactory"
                        serviceImplementation="consulo.language.impl.internal.parser.PsiBuilderFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.codeInsight.documentation.DocumentationManagerUtil"
                        serviceImplementation="com.intellij.codeInsight.documentation.DocumentationManagerUtil"/>

    <applicationService serviceInterface="com.intellij.ide.PsiActionSupportFactory"
                        serviceImplementation="com.intellij.ide.PsiActionSupportFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.codeInspection.ex.InspectionToolRegistrar"
                        serviceImplementation="com.intellij.codeInspection.ex.InspectionToolRegistrar"/>
    <applicationService serviceInterface="com.intellij.codeInsight.template.impl.TemplateSettings"
                        serviceImplementation="com.intellij.codeInsight.template.impl.TemplateSettings"/>
    <applicationService serviceInterface="com.intellij.codeInsight.template.impl.ExportableTemplateSettings"
                        serviceImplementation="com.intellij.codeInsight.template.impl.ExportableTemplateSettings"/>
    <projectService serviceInterface="consulo.language.editor.template.TemplateManager"
                    serviceImplementation="com.intellij.codeInsight.template.impl.TemplateManagerImpl"/>
    <editorFactoryListener implementation="com.intellij.codeInsight.template.impl.TemplateManagerImpl$MyEditorFactoryListener"/>

    <applicationService serviceInterface="com.intellij.execution.ui.layout.impl.RunnerLayoutSettings"
                        serviceImplementation="com.intellij.execution.ui.layout.impl.RunnerLayoutSettings"/>

    <applicationService serviceInterface="com.intellij.codeEditor.printing.PrintSettings"
                        serviceImplementation="com.intellij.codeEditor.printing.PrintSettings"/>
    <applicationService serviceInterface="com.intellij.codeInsight.daemon.DaemonCodeAnalyzerSettings"
                        serviceImplementation="com.intellij.codeInsight.daemon.DaemonCodeAnalyzerSettingsImpl"/>

    <applicationService serviceInterface="consulo.application.util.Queries" serviceImplementation="com.intellij.util.QueriesImpl"/>

    <projectService serviceInterface="consulo.language.pom.PomService"
                    serviceImplementation="com.intellij.pom.references.PomServiceImpl"/>

    <projectService serviceInterface="consulo.language.psi.search.PsiSearchHelper"
                    serviceImplementation="consulo.ide.impl.psi.impl.search.PsiSearchHelperImpl"/>

    <projectService serviceInterface="consulo.language.psi.search.PsiTodoSearchHelper"
                    serviceImplementation="consulo.ide.impl.psi.impl.search.PsiTodoSearchHelperImpl"/>

    <projectService serviceInterface="consulo.language.editor.completion.lookup.LookupManager"
                    serviceImplementation="com.intellij.codeInsight.lookup.impl.LookupManagerImpl"/>

    <projectService serviceImplementation="consulo.codeEditor.impl.DocumentMarkupModelManager"/>

    <projectService serviceImplementation="consulo.compiler.CompilerPathsManager"/>

    <applicationService serviceInterface="consulo.ide.impl.psi.meta.MetaDataRegistrar"
                        serviceImplementation="consulo.ide.impl.psi.impl.meta.MetaRegistry"/>

    <applicationService serviceInterface="consulo.language.psi.path.PathReferenceManager"
                        serviceImplementation="com.intellij.openapi.paths.PathReferenceManagerImpl"/>

    <applicationService serviceInterface="com.intellij.codeInsight.folding.CodeFoldingSettings"
                        serviceImplementation="com.intellij.codeInsight.folding.CodeFoldingSettingsImpl"/>
    <applicationService serviceInterface="consulo.ide.impl.psi.statistics.StatisticsManager"
                        serviceImplementation="consulo.ide.impl.psi.statistics.impl.StatisticsManagerImpl"/>

    <applicationService serviceInterface="com.intellij.codeInsight.intention.impl.config.IntentionManagerSettings"
                        serviceImplementation="com.intellij.codeInsight.intention.impl.config.IntentionManagerSettings"/>

    <search.optionContributor implementation="com.intellij.codeInsight.intention.impl.config.IntentionManagerSettings$IntentionSearchableOptionContributor"/>

    <applicationService serviceInterface="consulo.find.FindSettings"
                        serviceImplementation="com.intellij.find.impl.FindSettingsImpl"/>
    <applicationService serviceImplementation="com.intellij.find.impl.FindSettingsImpl$FindRecents"/>
    <projectService serviceInterface="consulo.find.FindInProjectSettings" serviceImplementation="com.intellij.find.impl.FindInProjectRecents"/>

    <applicationService serviceInterface="consulo.language.editor.CodeInsightSettings"
                        serviceImplementation="consulo.language.editor.CodeInsightSettings"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.impl.libraries.ApplicationLibraryTable"
                        serviceImplementation="com.intellij.openapi.roots.impl.libraries.ApplicationLibraryTable"/>

    <applicationService serviceInterface="com.intellij.openapi.actionSystem.AbbreviationManager"
                        serviceImplementation="com.intellij.openapi.actionSystem.impl.AbbreviationManagerImpl"/>

    <applicationService serviceInterface="consulo.language.codeStyle.CodeStyleSchemes"
                        serviceImplementation="consulo.ide.impl.psi.impl.source.codeStyle.PersistableCodeStyleSchemes"/>

    <schemeOwner serviceInterface="consulo.language.codeStyle.CodeStyleSchemes"/>

    <applicationService serviceInterface="consulo.content.library.LibraryTablesRegistrar"
                        serviceImplementation="com.intellij.openapi.roots.impl.libraries.LibraryTablesRegistrarImpl"/>

    <applicationService serviceInterface="consulo.content.library.LibraryDetectionManager"
                        serviceImplementation="com.intellij.openapi.roots.impl.libraries.LibraryDetectionManagerImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.libraries.LibraryTypeService"
                        serviceImplementation="com.intellij.openapi.roots.impl.libraries.LibraryTypeServiceImpl"/>

    <applicationService serviceInterface="consulo.usage.UsageTreeColorsScheme"
                        serviceImplementation="consulo.usage.impl.UsageTreeColorsSchemeImpl"/>

    <applicationService serviceInterface="consulo.language.codeStyle.AppCodeStyleSettingsManager"
                        serviceImplementation="consulo.language.codeStyle.AppCodeStyleSettingsManager"/>

    <applicationService serviceInterface="consulo.ide.impl.psi.impl.source.resolve.reference.impl.providers.FileInfoManager"
                        serviceImplementation="consulo.ide.impl.psi.impl.source.resolve.reference.impl.providers.FileInfoManager"/>

    <applicationService serviceInterface="consulo.content.scope.PredefinedSearchScopeProvider"
                        serviceImplementation="consulo.ide.impl.psi.search.PredefinedSearchScopeProviderImpl"/>

    <applicationService serviceInterface="consulo.language.psi.PsiReferenceService"
                        serviceImplementation="consulo.ide.impl.psi.PsiReferenceServiceImpl"/>

    <applicationService serviceInterface="consulo.language.pattern.compiler.PatternCompilerFactory"
                        serviceImplementation="com.intellij.patterns.compiler.PatternCompilerFactoryImpl"/>

    <applicationService serviceInterface="consulo.application.PowerSaveMode"
                        serviceImplementation="consulo.application.PowerSaveMode"/>

    <applicationService serviceInterface="consulo.language.impl.internal.psi.DocumentCommitProcessor"
                        serviceImplementation="consulo.ide.impl.psi.impl.DocumentCommitThread"/>

    <applicationService serviceInterface="consulo.language.impl.internal.psi.stub.StubTreeLoader"
                        serviceImplementation="consulo.ide.impl.psi.stubs.StubTreeLoaderImpl"/>

    <applicationService serviceInterface="consulo.language.psi.PsiNavigationSupport"
                        serviceImplementation="com.intellij.ide.util.PsiNavigationSupportImpl"/>

    <applicationService serviceInterface="consulo.language.impl.internal.psi.IndentHelper"
                        serviceImplementation="consulo.ide.impl.psi.impl.source.codeStyle.IndentHelperImpl"/>

    <applicationService serviceInterface="com.intellij.conversion.ConversionService"
                        serviceImplementation="com.intellij.conversion.DummyConversionService"/>

    <applicationService serviceInterface="consulo.language.psi.search.IndexPatternSearch"
                        serviceImplementation="consulo.ide.impl.psi.impl.search.IndexPatternSearchImpl"/>

    <applicationService serviceInterface="consulo.fileEditor.UniqueVFilePathBuilder"
                        serviceImplementation="com.intellij.openapi.fileEditor.impl.UniqueVFilePathBuilderImpl"/>
    <applicationService serviceInterface="consulo.codeStyle.ApplicationCodeStyleFacade"
                        serviceImplementation="consulo.psi.impl.source.codeStyle.ApplicationCodeStyleFacadeImpl"/>

    <applicationService serviceImplementation="consulo.ide.impl.psi.codeStyle.arrangement.engine.ArrangementEngine"/>
    <applicationService serviceImplementation="consulo.language.codeStyle.impl.arrangement.MemberOrderService"/>

    <applicationService serviceInterface="consulo.content.bundle.SdkPointerManager" serviceImplementation="consulo.content.impl.internal.bundle.SdkPointerManagerImpl"/>
    <rearranger.ui implementation="com.intellij.application.options.codeStyle.arrangement.component.DefaultArrangementUiComponentFactory"/>

    <projectService serviceInterface="com.intellij.ui.EditorTextFieldProvider"
                    serviceImplementation="com.intellij.ui.EditorTextFieldProviderImpl"/>

    <projectService serviceInterface="consulo.language.codeStyle.ProjectCodeStyleSettingsManager"
                    serviceImplementation="consulo.language.codeStyle.ProjectCodeStyleSettingsManager"/>

    <projectService serviceInterface="com.intellij.codeInsight.daemon.impl.analysis.HighlightingSettingsPerFile"
                    serviceImplementation="com.intellij.codeInsight.daemon.impl.analysis.HighlightingSettingsPerFile"/>

    <projectService serviceInterface="com.intellij.find.findInProject.FindInProjectManager"
                    serviceImplementation="com.intellij.find.findInProject.FindInProjectManager"/>
    <projectService serviceInterface="com.intellij.find.replaceInProject.ReplaceInProjectManager"
                    serviceImplementation="com.intellij.find.replaceInProject.ReplaceInProjectManager"/>
    <projectService serviceInterface="com.intellij.codeHighlighting.TextEditorHighlightingPassManager"
                    serviceImplementation="com.intellij.codeInsight.daemon.impl.TextEditorHighlightingPassManagerImpl"/>
    <projectService serviceInterface="consulo.language.psi.PsiFileFactory"
                    serviceImplementation="consulo.language.impl.internal.psi.PsiFileFactoryImpl"/>
    <projectService serviceInterface="consulo.language.impl.internal.psi.diff.BlockSupport"
                    serviceImplementation="consulo.language.impl.internal.psi.diff.BlockSupportImpl"/>
    <projectService serviceInterface="consulo.language.psi.SmartPointerManager"
                    serviceImplementation="consulo.language.impl.internal.psi.pointer.SmartPointerManagerImpl"/>
    <projectService serviceInterface="consulo.language.codeStyle.CodeStyleManager"
                    serviceImplementation="consulo.ide.impl.psi.impl.source.codeStyle.CodeStyleManagerImpl"/>
    <projectService serviceInterface="consulo.language.pom.PomModel"
                    serviceImplementation="com.intellij.pom.core.impl.PomModelImpl"/>
    <projectService serviceInterface="consulo.ide.impl.psi.impl.include.FileIncludeManager"
                    serviceImplementation="consulo.ide.impl.psi.impl.include.FileIncludeManagerImpl"/>
    <projectService serviceInterface="consulo.language.impl.internal.psi.CachedValuesFactory"
                    serviceImplementation="consulo.language.impl.internal.psi.PsiCachedValuesFactory"/>


    <projectService serviceInterface="com.intellij.openapi.roots.impl.libraries.ProjectLibraryTable"
                    serviceImplementation="com.intellij.openapi.roots.impl.libraries.ProjectLibraryTable"/>

    <projectService serviceInterface="consulo.project.content.scope.ProjectScopeProvider"
                    serviceImplementation="consulo.ide.impl.psi.search.ProjectScopeProviderImpl"/>

    <projectService serviceInterface="consulo.module.ProjectLoadingErrorsNotifier"
                    serviceImplementation="com.intellij.openapi.module.impl.ProjectLoadingErrorsNotifierImpl"/>

    <projectService serviceInterface="consulo.codeStyle.ProjectCodeStyleFacade"
                    serviceImplementation="consulo.psi.impl.source.codeStyle.ProjectCodeStyleFacadeImpl"/>

    <projectService serviceInterface="consulo.usage.UsageViewManager"
                    serviceImplementation="com.intellij.usages.impl.UsageViewManagerImpl"/>

    <projectService serviceInterface="com.intellij.analysis.AnalysisUIOptions"
                    serviceImplementation="com.intellij.analysis.AnalysisUIOptions"/>

    <projectService serviceInterface="com.intellij.ide.util.gotoByName.ChooseByNameFactory"
                    serviceImplementation="com.intellij.ide.util.gotoByName.ChooseByNameFactoryImpl"/>

    <projectService serviceInterface="com.intellij.refactoring.listeners.RefactoringListenerManager"
                    serviceImplementation="com.intellij.refactoring.listeners.impl.RefactoringListenerManagerImpl"/>

    <projectService serviceInterface="com.intellij.util.LogicalRootsManager"
                    serviceImplementation="com.intellij.util.LogicalRootsManagerImpl"/>

    <projectService serviceInterface="com.intellij.codeEditor.printing.ExportToHTMLSettings"
                    serviceImplementation="com.intellij.codeEditor.printing.ExportToHTMLSettings"/>

    <projectService serviceInterface="consulo.execution.configuration.log.LogConsolePreferences"
                    serviceImplementation="consulo.execution.configuration.log.LogConsolePreferences"/>

    <applicationService serviceInterface="consulo.language.psi.ReferenceProvidersRegistry"
                        serviceImplementation="consulo.ide.impl.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl"/>

    <projectService serviceInterface="consulo.find.FindManager"
                    serviceImplementation="com.intellij.find.impl.FindManagerImpl"/>

    <projectService serviceInterface="consulo.language.psi.PsiParserFacade"
                    serviceImplementation="consulo.ide.impl.psi.impl.PsiParserFacadeImpl"/>

    <projectService serviceInterface="com.intellij.ide.util.gotoByName.GotoFileConfiguration"
                    serviceImplementation="com.intellij.ide.util.gotoByName.GotoFileConfiguration"/>
    <projectService serviceInterface="com.intellij.ide.util.gotoByName.GotoClassSymbolConfiguration"
                    serviceImplementation="com.intellij.ide.util.gotoByName.GotoClassSymbolConfiguration"/>

    <projectService serviceInterface="com.intellij.ide.hierarchy.HierarchyBrowserManager"
                    serviceImplementation="com.intellij.ide.hierarchy.HierarchyBrowserManager"/>

    <projectService serviceInterface="consulo.language.editor.scope.NamedScopeManager"
                    serviceImplementation="consulo.language.editor.scope.NamedScopeManager"/>
    <namedScopesHolderProvider implementation="consulo.ide.impl.language.psi.search.scope.DefaultNamedScopesHolderProvider"/>

    <projectService serviceInterface="com.intellij.packageDependencies.DependencyValidationManager"
                    serviceImplementation="com.intellij.packageDependencies.DependencyValidationManagerImpl"/>
    <namedScopesHolderProvider implementation="com.intellij.packageDependencies.DependencyValidationNamedScopesHolderProvider"/>

    <projectService serviceInterface="com.intellij.packageDependencies.DependenciesToolWindow"
                    serviceImplementation="com.intellij.packageDependencies.DependenciesToolWindow"/>

    <projectService serviceInterface="com.intellij.codeInsight.documentation.DocumentationManager"
                    serviceImplementation="com.intellij.codeInsight.documentation.DocumentationManager"/>

    <projectService serviceInterface="com.intellij.moduleDependencies.DependenciesAnalyzeManager"
                    serviceImplementation="com.intellij.moduleDependencies.DependenciesAnalyzeManager"/>

    <projectService serviceInterface="com.intellij.ide.util.TreeFileChooserFactory"
                    serviceImplementation="com.intellij.ide.util.TreeFileChooserFactoryImpl"/>

    <projectService serviceInterface="consulo.ide.impl.psi.impl.cache.CacheManager"
                    serviceImplementation="consulo.ide.impl.psi.impl.cache.impl.IndexCacheManagerImpl"/>
    <projectService serviceInterface="consulo.ide.impl.psi.impl.cache.TodoCacheManager"
                    serviceImplementation="consulo.ide.impl.psi.impl.cache.impl.IndexTodoCacheManagerImpl"/>
    <projectService serviceInterface="consulo.language.impl.psi.ResolveScopeManager"
                    serviceImplementation="consulo.ide.impl.psi.impl.file.impl.ResolveScopeManagerImpl"/>
    <projectService serviceInterface="consulo.module.content.ProjectFileIndex"
                    serviceImplementation="com.intellij.openapi.roots.impl.ProjectFileIndexImpl"/>
    <projectService serviceInterface="consulo.language.psi.resolve.ResolveCache"
                    serviceImplementation="consulo.language.impl.internal.psi.resolve.ResolveCacheImpl"/>
    <moduleService serviceInterface="consulo.module.content.ModuleFileIndex"
                   serviceImplementation="com.intellij.openapi.roots.impl.ModuleFileIndexImpl"/>
    <moduleService serviceInterface="consulo.module.content.ModuleRootManager"
                   serviceImplementation="consulo.module.impl.internal.ModuleRootManagerImpl"/>
    <moduleService serviceInterface="consulo.module.content.scope.ModuleScopeProvider"
                   serviceImplementation="com.intellij.openapi.module.impl.scopes.ModuleScopeProviderImpl"/>
    <projectService serviceInterface="consulo.project.content.ProjectRootModificationTracker"
                    serviceImplementation="com.intellij.openapi.roots.ProjectRootModificationTrackerImpl"/>

    <projectService serviceInterface="com.intellij.ui.FileColorManager"
                    serviceImplementation="com.intellij.ui.tabs.FileColorManagerImpl"/>

    <projectService serviceInterface="com.intellij.openapi.roots.impl.LibraryScopeCache"
                    serviceImplementation="com.intellij.openapi.roots.impl.LibraryScopeCache"/>

    <applicationService serviceImplementation="com.intellij.openapi.util.DimensionService"/>
    <applicationService serviceInterface="consulo.application.ui.ApplicationWindowStateService"
                        serviceImplementation="com.intellij.openapi.util.WindowStateApplicationService"/>
    <projectService serviceInterface="consulo.project.ui.ProjectWindowStateService"
                    serviceImplementation="com.intellij.openapi.util.WindowStateProjectService"/>

    <colorSettingsPage implementation="com.intellij.openapi.options.colors.pages.GeneralColorsPage" id="general"/>
    <colorSettingsPage implementation="com.intellij.openapi.options.colors.pages.DefaultLanguageColorsPage" id="defaultLanguage"/>
    <colorSettingsPage implementation="com.intellij.openapi.options.colors.pages.ANSIColoredConsoleColorsPage" id="ansi"/>
    <colorSettingsPage implementation="com.intellij.openapi.options.colors.pages.CustomColorsPage" id="custom"/>

    <elementDescriptionProvider implementation="consulo.ide.impl.psi.impl.DefaultPomTargetDescriptionProvider" order="last" id="pomDefault"/>

    <applicationService serviceInterface="com.intellij.codeInspection.ex.AppInspectionProfilesVisibleTreeState"
                        serviceImplementation="com.intellij.codeInspection.ex.AppInspectionProfilesVisibleTreeState"/>
    <projectService serviceInterface="com.intellij.codeInspection.ex.ProjectInspectionProfilesVisibleTreeState"
                    serviceImplementation="com.intellij.codeInspection.ex.ProjectInspectionProfilesVisibleTreeState"/>


    <projectService serviceInterface="com.intellij.semantic.SemService" serviceImplementation="com.intellij.semantic.SemServiceImpl"/>

    <applicationService serviceInterface="com.intellij.application.options.codeStyle.CodeStyleSchemesUIConfiguration"
                        serviceImplementation="com.intellij.application.options.codeStyle.CodeStyleSchemesUIConfiguration"/>

    <!-- Live Templates -->
    <lookup.actionProvider implementation="com.intellij.codeInsight.template.impl.LiveTemplateLookupActionProvider"/>

    <stepsBeforeRunProvider implementation="com.intellij.tools.ToolBeforeRunTaskProvider"/>
    <checkinHandlerFactory implementation="com.intellij.tools.ExternalToolsCheckinHandlerFactory"/>
    <projectService serviceInterface="com.intellij.tools.ToolsProjectConfig"
                    serviceImplementation="com.intellij.tools.ToolsProjectConfig"/>

    <lang.parserDefinition language="TEXT" implementationClass="consulo.language.impl.plain.PlainTextParserDefinition"/>
    <lang.syntaxHighlighterFactory key="TEXT" implementationClass="com.intellij.openapi.fileTypes.PlainTextSyntaxHighlighterFactory"/>
    <lang.braceMatcher language="TEXT" implementationClass="com.intellij.ide.highlighter.custom.impl.CustomFileTypeBraceMatcher"/>
    <lang.ast.leafFactory implementation="consulo.ide.impl.psi.impl.source.tree.PlainTextASTLeafFactory"/>

    <getDataRule implementation="com.intellij.ide.impl.dataRules.PsiFileRule"/>
    <getDataRule implementation="com.intellij.ide.impl.dataRules.PsiElementFromSelectionRule"/>
    <getDataRule implementation="com.intellij.ide.impl.dataRules.PsiElementFromSelectionsRule"/>
    <getDataRule implementation="com.intellij.ide.impl.dataRules.PasteTargetRule"/>
    <getDataRule implementation="com.intellij.ide.impl.dataRules.VirtualFileRule"/>
    <getDataRule implementation="com.intellij.ide.impl.dataRules.VirtualFileArrayRule"/>
    <getDataRule implementation="com.intellij.ide.impl.dataRules.NavigatableRule"/>
    <getDataRule implementation="com.intellij.ide.impl.dataRules.UsageTargetsRule"/>
    <getDataRule implementation="com.intellij.ide.impl.dataRules.UsageInfo2ListRule"/>
    <getDataRule implementation="com.intellij.ide.impl.dataRules.ModuleRule"/>

    <dataValidator implementation="consulo.ide.impl.PsiFileDataValidator"/>
    <dataValidator implementation="com.intellij.ide.impl.PsiElementDataValidator"/>
    <dataValidator implementation="com.intellij.ide.impl.PsiElementArrayDataValidator"/>
    <dataValidator implementation="com.intellij.ide.impl.ModuleDataValidator"/>

    <patternDialectProvider implementation="com.intellij.packageDependencies.ui.ProjectPatternProvider" id="file"/>
    <customScopesProvider implementation="com.intellij.packageDependencies.DefaultScopesProvider"/>
    <customScopesProvider implementation="consulo.packageDependencies.SourceScopeProvider"/>
    <customScopesProvider implementation="com.intellij.packageDependencies.TestScopeProvider"/>
    <customScopesProvider implementation="consulo.packageDependencies.ResourceScopeProvider"/>
    <customScopesProvider implementation="consulo.packageDependencies.TestResourceScopeProvider"/>
    <customScopesProvider implementation="com.intellij.vcs.changes.ChangeListsScopesProvider" order="last"/>
    <refactoring.elementListenerProvider implementation="com.intellij.packageDependencies.ui.RefactoringScopeElementListenerProvider"/>

    <searchScopesProvider implementation="consulo.ide.impl.psi.search.DefaultSearchScopeProviders$Favorites"/>
    <searchScopesProvider implementation="com.intellij.vcs.changes.ChangeListsSearchScopeProvider"/>
    <searchScopesProvider implementation="consulo.ide.impl.psi.search.DefaultSearchScopeProviders$CustomNamed" order="last"/>

    <findInProjectExtension implementation="com.intellij.vcs.changes.ChangeListsFindInProjectExtension"/>

    <highlightVisitor implementation="com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitor"/>
    <projectService serviceImplementation="com.intellij.codeInsight.daemon.impl.CachedAnnotators"/>
    <daemon.changeLocalityDetector implementation="com.intellij.codeInsight.daemon.impl.DefaultChangeLocalityDetector"/>

    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CurrentDateMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CurrentTimeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CurrentUserMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CapitalizeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.DecapitalizeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.FirstWordMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ReplaceUnderscoresWithSpacesMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.LineNumberMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.FileNameMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.FileNameWithoutExtensionMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ReplaceUnderscoresToCamelCaseMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CapitalizeAndUnderscoreMacro"/>

    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CompleteMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CompleteSmartMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ClassNameCompleteMacro"/>

    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.EnumMacro"/>

    <fileBasedIndex implementation="consulo.ide.impl.psi.impl.cache.impl.todo.TodoIndex"/>
    <fileBasedIndex implementation="consulo.ide.impl.psi.impl.cache.impl.id.IdIndexImpl"/>
    <fileBasedIndex implementation="consulo.ide.impl.psi.search.FilenameIndexImpl"/>
    <fileBasedIndex implementation="consulo.ide.impl.psi.search.FileTypeIndexImpl"/>
    <fileBasedIndex implementation="consulo.ide.impl.psi.stubs.StubUpdatingIndex"/>

    <fileBasedIndex implementation="com.intellij.find.ngrams.TrigramIndex"/>

    <fileBasedIndex implementation="consulo.ide.impl.psi.impl.include.FileIncludeIndex"/>

    <syntaxHighlighter factoryClass="com.intellij.openapi.fileTypes.LanguageFileTypeHighlighterProvider"/>
    <structureViewBuilder factoryClass="com.intellij.ide.highlighter.LanguageFileTypeStructureViewBuilderProvider"/>

    <lang.elementManipulator forClass="consulo.language.plain.psi.PsiPlainTextFile"
                             implementationClass="consulo.ide.impl.psi.impl.source.resolve.reference.impl.manipulators.PlainFileManipulator"/>
    <lang.elementManipulator forClass="consulo.language.psi.PsiComment"
                             implementationClass="consulo.ide.impl.psi.impl.source.resolve.reference.impl.manipulators.PsiCommentManipulator"/>

    <applicationService serviceInterface="consulo.pathMacro.MacroManager" serviceImplementation="consulo.pathMacro.impl.internal.MacroManagerImpl"/>
    <hectorComponentProvider implementation="com.intellij.codeInsight.daemon.impl.FileIncludeContextHectorProvider"/>

    <programRunner implementation="com.intellij.tools.ToolProgramRunner"/>

    <ideRootPaneNorth implementation="com.intellij.ide.navigationToolbar.NavBarRootPaneExtension"/>
    <navbar implementation="com.intellij.ide.navigationToolbar.DefaultNavBarExtension" id="defaultNavbar" order="last"/>

    <statistician key="completion" implementationClass="com.intellij.codeInsight.completion.DecoratorCompletionStatistician" order="first"
                  id="decorator"/>
    <statistician key="completion" implementationClass="com.intellij.codeInsight.completion.DefaultCompletionStatistician" order="last"/>

    <weigher key="proximity" implementationClass="consulo.ide.impl.psi.util.proximity.OpenedInEditorWeigher" id="openedInEditor"/>
    <weigher key="proximity" implementationClass="consulo.ide.impl.psi.util.proximity.SameLogicalRootWeigher" id="sameLogicalRoot"
             order="after openedInEditor"/>
    <weigher key="proximity" implementationClass="consulo.ide.impl.psi.util.proximity.SameModuleWeigher" id="sameModule"
             order="after sameLogicalRoot"/>
    <weigher key="proximity" implementationClass="consulo.ide.impl.psi.util.proximity.SdkOrLibraryWeigher" id="sdkOrLibrary"
             order="after sameModule"/>

    <weigher key="completion" implementationClass="com.intellij.codeInsight.completion.PriorityWeigher" id="priority" order="first"/>
    <weigher key="completion" implementationClass="com.intellij.codeInsight.completion.StatisticsWeigher" id="stats"
             order="after priority"/>
    <weigher key="completion" implementationClass="com.intellij.codeInsight.completion.PrefixMatchingWeigher" id="prefix"
             order="after stats"/>
    <weigher key="completion" implementationClass="com.intellij.codeInsight.completion.ExplicitProximityWeigher" id="explicitProximity"
             order="after prefix"/>
    <weigher key="completion" implementationClass="com.intellij.codeInsight.completion.LookupElementProximityWeigher" id="proximity"
             order="after explicitProximity"/>
    <weigher key="completion" implementationClass="com.intellij.codeInsight.completion.GroupingWeigher" id="grouping"
             order="last"/>

    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.DefaultCompletionContributor"
                            id="default"
                            order="last"/>
    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.ComboEditorCompletionContributor"
                            id="comboEditor" order="first"/>
    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.WordCompletionContributor"
                            id="wordCompletion" order="last"/>
    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.LegacyCompletionContributor" id="legacy"
                            order="last"/>
    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.FilePathCompletionContributor"
                            id="filePath" order="before javaClassName"/>
    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.template.impl.LiveTemplateCompletionContributor"
                            id="liveTemplates" order="first"/>

    <completion.contributor language="TEXT" implementationClass="com.intellij.openapi.vcs.CommitCompletionContributor" id="commitCompletion"
                            order="first, before liveTemplates"/>


    <applicationService serviceInterface="com.intellij.execution.console.ConsoleFoldingSettings"
                        serviceImplementation="com.intellij.execution.console.ConsoleFoldingSettings"/>
    <console.folding implementation="com.intellij.execution.console.SubstringConsoleFolding"/>

    <lookup.charFilter implementation="com.intellij.codeInsight.template.impl.LiveTemplateCharFilter" order="first" id="liveTemplate"/>
    <lookup.charFilter implementation="com.intellij.codeInsight.completion.CompletionCharFilter" order="last" id="completion"/>
    <lookup.charFilter implementation="com.intellij.refactoring.IdentifierCharFilter" id="identifier" order="last"/>
    <lookup.charFilter implementation="consulo.ide.impl.psi.impl.source.resolve.reference.impl.providers.FileReferenceCharFilter" id="fileRef"
                       order="before completion"/>

    <gotoFileContributor implementation="com.intellij.ide.util.gotoByName.DefaultFileNavigationContributor"/>

    <gotoRelatedProvider implementation="com.intellij.ide.actions.RelatedItemLineMarkerGotoAdapter"/>

    <selectInTarget implementation="com.intellij.ide.impl.ProjectViewSelectInGroupTarget"/>
    <selectInTarget implementation="com.intellij.ide.navigationToolbar.SelectInNavBarTarget"/>
    <selectInTarget implementation="com.intellij.ide.impl.StructureViewSelectInTarget"/>
    <selectInTarget implementation="com.intellij.ide.impl.ProjectViewSelectInExplorerTarget"/>
    <selectInTarget implementation="com.intellij.ide.favoritesTreeView.FavoritesViewSelectInTarget"/>

    <elementLookupRenderer implementation="com.intellij.codeInsight.template.impl.TemplateLookupRenderer"/>

    <customPasteProvider implementation="com.intellij.ide.actions.PasteReferenceProvider"/>

    <referenceInjector implementation="com.intellij.codeInsight.daemon.impl.analysis.encoding.EncodingReferenceInjector"/>

    <usageFilteringRuleProvider implementation="com.intellij.usages.impl.UsageFilteringRuleProviderImpl"/>
    <usageGroupingRuleProvider implementation="com.intellij.usages.impl.UsageGroupingRuleProviderImpl"/>

    <projectService serviceImplementation="consulo.ide.impl.psi.templateLanguages.TemplateDataLanguageMappings"/>
    <applicationService serviceImplementation="consulo.ide.impl.psi.templateLanguages.TemplateDataLanguagePatterns"/>
    <filePropertyPusher implementation="consulo.ide.impl.psi.templateLanguages.TemplateDataLanguagePusher"/>

    <!-- execution -->
    <executor implementation="consulo.execution.executor.DefaultRunExecutor" order="first" id="run"/>
    <executionTargetProvider implementation="com.intellij.execution.DefaultExecutionTargetProvider"/>
    <configurationType implementation="com.intellij.execution.compound.CompoundRunConfigurationType"/>

    <findUsagesHandlerFactory implementation="com.intellij.find.findUsages.DefaultFindUsagesHandlerFactory" id="default" order="last"/>
    <usageTargetProvider implementation="com.intellij.find.findUsages.DefaultUsageTargetProvider" id="default" order="last"/>

    <cutElementMarker implementation="com.intellij.ide.PsiCutElementMarker"/>

    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.PlainTextLineSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.NaturalLanguageTextSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.WordSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.LineCommentSelectioner"/>

    <syntaxHighlighter factoryClass="com.intellij.ide.highlighter.custom.impl.CustomFileTypeHighlighterProvider"/>
    <fileTypeRegistrator implementation="com.intellij.ide.highlighter.custom.impl.StandardFileTypeRegistrator"/>

    <statementUpDownMover implementation="com.intellij.codeInsight.editorActions.moveUpDown.LineMover" id="line" order="last"/>

    <enterHandlerDelegate implementation="com.intellij.codeInsight.editorActions.enter.EnterInStringLiteralHandler"/>
    <enterHandlerDelegate implementation="com.intellij.codeInsight.editorActions.enter.EnterInLineCommentHandler"/>
    <enterHandlerDelegate implementation="com.intellij.codeInsight.editorActions.enter.EnterAfterUnmatchedBraceHandler" id="afterUnmatchedBrace"/>
    <enterHandlerDelegate implementation="com.intellij.codeInsight.editorActions.enter.EnterBetweenBracesFinalHandler"
                          id="EnterBetweenBracesHandler"/>
    <enterHandlerDelegate implementation="com.intellij.codeInsight.editorActions.enter.EnterAfterJavadocTagHandler"/>

    <codeInsight.linkHandler prefix="#inspection/" handlerClass="com.intellij.codeInsight.hint.InspectionDescriptionLinkHandler"/>
    <codeInsight.linkHandler prefix="#navigation/" handlerClass="com.intellij.codeInsight.hint.NavigationLinkHandler"/>

    <codeInsight.lineMarkerProvider language="" implementationClass="com.intellij.execution.lineMarker.RunLineMarkerProvider"/>
    <codeInsight.lineMarkerProvider language="" implementationClass="com.intellij.ui.ColorLineMarkerProvider"/>

    <applicationConfigurable id="editor.preferences.folding.general"
                             parentId="editor.preferences.folding"
                             displayName="General"
                             instance="com.intellij.application.options.editor.GeneralCodeFoldingConfigurable"/>

    <projectService serviceInterface="com.intellij.openapi.vfs.encoding.EncodingProjectManager" serviceImplementation="com.intellij.openapi.vfs.encoding.EncodingProjectManagerImpl"/>
    <postStartupActivity implementation="com.intellij.openapi.vfs.encoding.EncodingProjectManagerImpl$EncodingProjectManagerStartUpActivity"/>

    <editorTabColorProvider implementation="com.intellij.ui.tabs.EditorTabColorProviderImpl"/>

    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.EditFoldingOptionsAction</className>
    </intentionAction>
    <intentionAction>
      <className>consulo.language.editor.impl.intention.QuickEditAction</className>
      <category>Language Injection</category>
    </intentionAction>

    <!-- CodeInsightSettings -->
    <editorActionHandler action="EditorEnter" implementationClass="com.intellij.codeInsight.editorActions.EnterHandler" id="editorEnter"/>
    <editorActionHandler action="EditorLineEnd" implementationClass="com.intellij.codeInsight.editorActions.EndHandler"/>
    <editorActionHandler action="EditorSelectWord" implementationClass="com.intellij.codeInsight.editorActions.SelectWordHandler"/>
    <editorActionHandler action="EditorUnSelectWord" implementationClass="com.intellij.codeInsight.editorActions.UnSelectWordHandler"/>
    <editorActionHandler action="EditorPaste" implementationClass="com.intellij.codeInsight.editorActions.PasteHandler"/>
    <editorActionHandler action="EditorCopy" implementationClass="com.intellij.codeInsight.editorActions.CopyHandler"/>
    <editorActionHandler action="EditorCut" implementationClass="com.intellij.codeInsight.editorActions.CutHandler"/>
    <editorActionHandler action="EditorJoinLines" implementationClass="com.intellij.codeInsight.editorActions.JoinLinesHandler"/>
    <editorActionHandler action="EditorBackSpace" implementationClass="com.intellij.codeInsight.editorActions.BackspaceHandler"/>
    <editorActionHandler action="EditorDeleteToWordStart"
                         implementationClass="com.intellij.codeInsight.editorActions.BackspaceToWordStartHandler"/>
    <editorTypedHandler implementationClass="com.intellij.codeInsight.editorActions.TypedHandler" order="first"/>

    <editorActionHandler action="EditorDuplicate" implementationClass="com.intellij.openapi.editor.actions.NamedElementDuplicateHandler"/>

    <!-- LookupManagerActions -->
    <editorActionHandler action="EditorUp" implementationClass="com.intellij.codeInsight.lookup.impl.LookupActionHandler$UpHandler"/>
    <editorActionHandler action="EditorDown" implementationClass="com.intellij.codeInsight.lookup.impl.LookupActionHandler$DownHandler"/>
    <editorActionHandler action="EditorPageUp"
                         implementationClass="com.intellij.codeInsight.lookup.impl.LookupActionHandler$PageUpHandler"/>
    <editorActionHandler action="EditorPageDown"
                         implementationClass="com.intellij.codeInsight.lookup.impl.LookupActionHandler$PageDownHandler"/>
    <editorActionHandler action="EditorLeft" implementationClass="com.intellij.codeInsight.lookup.impl.LookupActionHandler$LeftHandler"/>
    <editorActionHandler action="EditorRight" implementationClass="com.intellij.codeInsight.lookup.impl.LookupActionHandler$RightHandler"/>
    <editorActionHandler action="EditorLineStart" implementationClass="com.intellij.codeInsight.lookup.impl.HomeHandler"/>
    <editorActionHandler action="EditorLineEnd" implementationClass="com.intellij.codeInsight.lookup.impl.EndHandler"/>
    <editorActionHandler action="EditorBackSpace" implementationClass="com.intellij.codeInsight.lookup.impl.BackspaceHandler"/>

    <!-- TemplateManagerActions -->
    <editorActionHandler action="EditorEscape" implementationClass="com.intellij.codeInsight.template.impl.editorActions.EscapeHandler"
                         id="templateEscape" order="before hide-hints"/>
    <editorActionHandler action="EditorEnter" implementationClass="com.intellij.codeInsight.template.impl.editorActions.EnterHandler"
                         id="templateEnter" order="before editorEnter"/>
    <editorActionHandler action="EditorLineStart" implementationClass="com.intellij.codeInsight.template.impl.editorActions.TemplateLineStartHandler"/>
    <editorActionHandler action="EditorLineStartWithSelection"
                         implementationClass="com.intellij.codeInsight.template.impl.editorActions.TemplateLineStartWithSelectionHandler"/>
    <editorActionHandler action="EditorLineEnd" implementationClass="com.intellij.codeInsight.template.impl.editorActions.TemplateLineEndHandler"/>
    <editorActionHandler action="EditorLineEndWithSelection"
                         implementationClass="com.intellij.codeInsight.template.impl.editorActions.TemplateLineEndWithSelectionHandler"/>
    <editorActionHandler action="$SelectAll" implementationClass="com.intellij.codeInsight.template.impl.editorActions.SelectAllHandler"/>
    <typedHandler implementation="com.intellij.codeInsight.template.impl.editorActions.SpaceHandler"/>

    <rawEditorTypedHandler implementationClass="com.intellij.openapi.editor.impl.EditorFactoryImpl$MyRawTypedHandler"/>

    <!-- HighlightManagerActions -->
    <editorActionHandler action="EditorEscape" implementationClass="com.intellij.codeInsight.highlighting.EscapeHandler"
                         order="after hide-hints"/>
    <editorActionHandler action="EditorEscape" implementationClass="com.intellij.refactoring.rename.inplace.EscapeHandler"
                         order="before hide-hints"/>

    <editorTypedHandler implementationClass="com.intellij.codeInsight.lookup.impl.LookupTypedHandler" id="lookup"/>
    <typedHandler implementation="com.intellij.codeInsight.editorActions.CompletionAutoPopupHandler" id="completionAutoPopup"
                  order="first"/>
    <typedHandler implementation="com.intellij.codeInsight.editorActions.SelectionQuotingTypedHandler" id="selectionQuoting"/>

    <templateCompletionProcessor implementation="com.intellij.codeInsight.template.macro.DirectoryTemplateCompletionProcessor"/>

    <liveTemplateContext id="OTHER" implementation="consulo.language.editor.template.context.EverywhereContextType" order="last"/>

    <dynamicContextProvider implementation="com.intellij.openapi.paths.GenericDynamicContextProvider"/>

    <codeStyleSettingsProvider implementation="com.intellij.application.options.GeneralCodeStyleSettingsProvider"/>
    <codeStyleSettingsProvider implementation="com.intellij.application.options.codeStyle.OtherFileTypesCodeStyleOptionsProvider" order="last"/>

    <projectService serviceInterface="com.intellij.ide.todo.TodoView"
                    serviceImplementation="com.intellij.ide.todo.TodoView"/>
    <projectService serviceInterface="consulo.fileEditor.structureView.StructureViewFactory"
                    serviceImplementation="com.intellij.ide.structureView.impl.StructureViewFactoryImpl"/>
    <projectService serviceInterface="consulo.language.editor.inspection.scheme.InspectionManager"
                    serviceImplementation="com.intellij.codeInspection.ex.InspectionManagerEx"/>

    <projectService serviceInterface="consulo.usage.UsageViewContentManager" serviceImplementation="com.intellij.usageView.impl.UsageViewContentManagerImpl"/>

    <applicationService serviceInterface="com.intellij.ide.projectView.impl.ProjectViewSharedSettings"
                        serviceImplementation="com.intellij.ide.projectView.impl.ProjectViewSharedSettings"/>
    <projectService serviceInterface="consulo.execution.ui.layout.RunnerLayoutUi$Factory"
                    serviceImplementation="com.intellij.execution.ui.layout.impl.RunnerLayoutUiFactoryImpl"/>
    <projectService serviceInterface="consulo.compiler.ProblemsView"
                    serviceImplementation="com.intellij.compiler.impl.ProblemsViewImpl"/>

    <http.fileEditorActionProvider implementation="com.intellij.openapi.fileEditor.impl.http.LangRemoteFileEditorActionProvider"/>

    <toolWindow id="Project"
                anchor="left"
                icon="consulo.platform.base.PlatformIconGroup@toolwindows.toolwindowproject"
                displayName="consulo.platform.base.IdeLocalize@title.project"
                factoryClass="com.intellij.ide.projectView.impl.ProjectViewToolWindowFactory"/>
    <toolWindow id="TODO" anchor="bottom" icon="consulo.platform.base.PlatformIconGroup@toolwindows.toolwindowtodo"
                factoryClass="com.intellij.ide.todo.TodoToolWindowFactory" canCloseContents="true"/>
    <toolWindow id="Structure" anchor="left" icon="consulo.platform.base.PlatformIconGroup@toolwindows.toolwindowstructure" secondary="true"
                factoryClass="com.intellij.ide.structureView.impl.StructureViewToolWindowFactory"/>
    <toolWindow id="Favorites" anchor="left" icon="consulo.platform.base.PlatformIconGroup@toolwindows.toolwindowfavorites" secondary="true"
                factoryClass="com.intellij.ide.projectView.impl.FavoritesViewToolWindowFactory"/>
    <toolWindow id="Run Dashboard" anchor="bottom" icon="consulo.platform.base.PlatformIconGroup@toolwindows.toolwindowrun"
                factoryClass="com.intellij.execution.dashboard.RunDashboardToolWindowFactory"
                conditionClass="com.intellij.execution.dashboard.RunDashboardToolWindowFactory"/>

    <psi.fileReferenceHelper implementation="consulo.language.editor.impl.internal.psi.path.PsiFileReferenceHelper"/>
    <psi.fileReferenceHelper implementation="consulo.language.editor.impl.internal.psi.path.JarFileReferenceHelper"/>
    <psi.fileReferenceHelper implementation="consulo.ide.impl.psi.impl.source.resolve.reference.impl.providers.HttpFileReferenceHelper"/>
    <psi.fileReferenceHelper implementation="consulo.language.psi.path.NullFileReferenceHelper" order="last"/>
    <psi.referenceContributor implementation="consulo.ide.impl.psi.impl.source.resolve.reference.CommentsReferenceContributor"/>
    <referenceProviderType key="commentsReferenceProvider"
                           implementationClass="consulo.ide.impl.psi.impl.source.resolve.reference.ArbitraryPlaceUrlReferenceProvider"/>

    <uiDebuggerExtension implementation="com.intellij.ui.debugger.extensions.ActionTracer"/>

    <globalInspection shortName="Annotator" displayName="Annotator" groupKey="inspection.general.tools.group.name" groupBundle="consulo.language.editor.inspection.InspectionsBundle"
                      enabledByDefault="true" level="ERROR"
                      implementationClass="com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitorBasedInspection$AnnotatorBasedInspection"/>
    <globalInspection shortName="SyntaxError" displayName="Syntax error" groupKey="inspection.general.tools.group.name" groupBundle="consulo.language.editor.inspection.InspectionsBundle"
                      enabledByDefault="true" level="ERROR"
                      implementationClass="com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitorBasedInspection$SyntaxErrorInspection"/>
    <localInspection shortName="LossyEncoding" bundle="consulo.language.editor.inspection.InspectionsBundle" key="lossy.encoding"
                     groupKey="group.names.internationalization.issues" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.LossyEncodingInspection"/>

    <applicationService serviceInterface="com.intellij.codeInsight.template.TemplateBuilderFactory"
                        serviceImplementation="com.intellij.codeInsight.template.TemplateBuilderFactoryImpl"/>

    <projectViewPane implementation="com.intellij.ide.scopeView.ScopeViewPane"/>

    <renameHandler implementation="com.intellij.refactoring.rename.inplace.VariableInplaceRenameHandler"/>
    <renameHandler implementation="com.intellij.refactoring.rename.inplace.MemberInplaceRenameHandler"/>
    <completion.contributor language="any"
                            implementationClass="com.intellij.refactoring.rename.inplace.CompletionContributorForInplaceRename"
                            order="first"/>

    <projectService serviceInterface="com.intellij.openapi.vcs.changes.ui.ChangesFileNameDecorator"
                    serviceImplementation="com.intellij.openapi.vcs.changes.ui.WolfChangesFileNameDecorator"/>

    <filePasteProvider implementation="com.intellij.ide.FileListPasteProvider"/>

    <definitionsScopedSearch implementation="com.intellij.pom.PomDefinitionSearch"/>


    <applicationService serviceInterface="com.intellij.ide.todo.TodoConfiguration"
                        serviceImplementation="com.intellij.ide.todo.TodoConfiguration"/>
    <indexPatternProvider implementation="com.intellij.ide.todo.TodoIndexPatternProvider"/>

    <applicationService serviceImplementation="com.intellij.codeInsight.documentation.QuickDocOnMouseOverManager"/>
    <postStartupActivity implementation="com.intellij.codeInsight.documentation.QuickDocOnMouseOverStartupActivity"/>

    <copyPastePostProcessor implementation="com.intellij.codeInsight.editorActions.CopyPasteIndentProcessor"/>
    <statistics.usagesCollector implementation="com.intellij.execution.impl.statistics.RunConfigurationTypeUsagesCollector"/>
    <statistics.usagesCollector implementation="com.intellij.execution.impl.statistics.TemporaryRunConfigurationTypeUsagesCollector"/>
    <statistics.usagesCollector implementation="com.intellij.openapi.fileTypes.FileTypeUsagesCollector"/>

    <renamePsiElementProcessor implementation="com.intellij.refactoring.rename.RenamePsiFileProcessor" order="last"/>
    <renameInputValidator implementation="com.intellij.refactoring.rename.RenameToIgnoredDirectoryFileInputValidator" order="last"/>

    <refactoring.elementListenerProvider implementation="com.intellij.execution.impl.RunConfigurationRefactoringElementListenerProvider"/>

    <keymapExtension implementation="com.intellij.tools.ToolKeymapExtension"/>

    <inspectionsReportConverter implementation="com.intellij.codeInspection.ex.PlainTextFormatter"/>

    <documentationProvider implementation="com.intellij.openapi.paths.WebReferenceDocumentationProvider"/>

    <refactoring.moveDirectoryWithClassesHelper
        implementation="com.intellij.refactoring.move.moveClassesOrPackages.MoveDirectoryWithClassesHelper$Default" order="last"/>

    <checkinHandlerFactory implementation="com.intellij.openapi.vcs.checkin.ReformatCheckinHandlerFactory"/>
    <checkinHandlerFactory implementation="com.intellij.openapi.vcs.checkin.RearrangeCheckinHandlerFactory"/>
    <checkinHandlerFactory implementation="com.intellij.openapi.vcs.checkin.OptimizeOptionsCheckinHandlerFactory"/>
    <checkinHandlerFactory implementation="com.intellij.openapi.vcs.checkin.CodeAnalysisCheckinHandlerFactory"/>
    <checkinHandlerFactory implementation="com.intellij.openapi.vcs.checkin.TodoCheckinHandlerFactory"/>
    <checkinHandlerFactory implementation="com.intellij.openapi.vcs.checkin.CodeCleanupCheckinHandlerFactory"/>

    <projectService serviceInterface="com.intellij.openapi.vcs.CodeSmellDetector"
                    serviceImplementation="com.intellij.openapi.vcs.impl.CodeSmellDetectorImpl"/>

    <editorTabTitleProvider implementation="com.intellij.openapi.fileEditor.impl.UniqueNameEditorTabTitleProvider"/>

    <projectService serviceInterface="consulo.language.psi.PsiModificationTracker"
                    serviceImplementation="consulo.language.impl.internal.psi.PsiModificationTrackerImpl"/>

    <itemPresentationProvider forClass="consulo.language.psi.PsiDirectory"
                              implementationClass="com.intellij.navigation.DirectoryPresentationProvider"/>

    <projectService serviceInterface="consulo.module.ModulePointerManager"
                    serviceImplementation="consulo.module.impl.internal.ModulePointerManagerImpl"/>

    <customFoldingProvider implementation="com.intellij.lang.customFolding.NetBeansCustomFoldingProvider"/>
    <customFoldingProvider implementation="com.intellij.lang.customFolding.VisualStudioCustomFoldingProvider"/>

    <completion.contributor language="TEXT" implementationClass="com.intellij.ui.TextFieldWithAutoCompletionContributor"
                            order="first, before commitCompletion"/>

    <completion.contributor language="TEXT" implementationClass="com.intellij.util.CompletionContributorForTextField"
                            order="first, before commitCompletion"/>

    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.CustomFileTypeCompletionContributor"/>

    <pathMacroFilter implementation="com.intellij.execution.configuration.RunConfigurationPathMacroFilter"/>
    <pathMacroFilter implementation="com.intellij.openapi.application.StructuralSearchPathMacroFilter"/>

    <postStartupActivity implementation="com.intellij.codeInsight.highlighting.BraceHighlighter"/>
    <usageContextPanelProvider implementation="com.intellij.usages.impl.UsagePreviewPanel$Provider"/>
    <usageContextPanelProvider implementation="com.intellij.usageView.impl.UsageContextCallHierarchyPanel$Provider"/>
    <fileDocumentSynchronizationVetoer implementation="com.intellij.codeInsight.lookup.impl.LookupDocumentSavingVetoer"/>
    <toolsProvider implementation="com.intellij.tools.LocalToolsProvider"/>

    <favoritesListProvider implementation="com.intellij.ide.bookmarks.BookmarksFavoriteListProvider"/>
    <applicationService serviceInterface="consulo.language.editor.FileModificationService"
                        serviceImplementation="com.intellij.codeInsight.CodeInsightUtilBase"/>
    <applicationService serviceInterface="consulo.ui.ex.awt.tree.TreeAnchorizer"
                        serviceImplementation="com.intellij.ide.projectView.impl.nodes.PsiTreeAnchorizer"/>

    <!--Platform-->
    <applicationService serviceInterface="com.intellij.packageDependencies.DependenciesVisitorFactory"
                        serviceImplementation="com.intellij.packageDependencies.DependenciesVisitorFactory"/>
    <applicationService serviceInterface="consulo.content.bundle.SdkTable"
                        serviceImplementation="consulo.content.impl.internal.bundle.SdkTableImpl"/>

    <projectService serviceInterface="com.intellij.openapi.vcs.impl.DefaultVcsRootPolicy"
                    serviceImplementation="com.intellij.openapi.vcs.impl.ModuleDefaultVcsRootPolicy"/>

    <projectService serviceInterface="consulo.language.psi.PsiPackageHelper"
                    serviceImplementation="consulo.ide.impl.psi.impl.file.PsiPackageHelperImpl"/>

    <projectService serviceImplementation="com.intellij.openapi.roots.ui.configuration.ProjectSettingsService"/>

    <projectService serviceInterface="com.intellij.refactoring.RefactoringFactory"
                    serviceImplementation="com.intellij.refactoring.openapi.impl.RefactoringFactoryImpl"/>

    <projectService serviceInterface="consulo.language.inject.InjectedLanguageManager"
                    serviceImplementation="consulo.language.inject.impl.internal.InjectedLanguageManagerImpl"/>
    <projectService serviceInterface="com.intellij.openapi.vcs.changes.patch.PatchBaseDirectoryDetector"
                    serviceImplementation="com.intellij.openapi.vcs.changes.patch.PsiPatchBaseDirectoryDetector"/>

    <refactoring.copyHandler implementation="com.intellij.refactoring.copy.CopyFilesOrDirectoriesHandler"/>
    <refactoring.moveHandler implementation="com.intellij.refactoring.move.moveFilesOrDirectories.MoveFilesOrDirectoriesHandler"
                             id="moveFileOrDir"/>
    <programRunner implementation="consulo.execution.runner.BasicProgramRunner" order="last"/>

    <projectConfigurable instance="com.intellij.ide.util.scopeChooser.ScopeChooserConfigurable"
                         id="project.scopes" parentId="general"
                         key="scopes.display.name" bundle="consulo.ide.IdeBundle"/>


    <weigher key="proximity" implementationClass="consulo.ide.impl.psi.util.proximity.SameDirectoryWeigher" id="sameDirectory"
             order="after openedInEditor"/>


    <iconDescriptorUpdater implementation="consulo.ide.impl.PsiDirectoryIconDescriptorUpdater" id="directory"/>
    <iconDescriptorUpdater implementation="consulo.ide.impl.PsiFileIconDescriptorUpdater" id="default" order="last"/>

    <lang.ast.lazyFactory implementation="consulo.language.impl.internal.ast.DefaultASTLazyFactory" order="last"/>
    <lang.ast.leafFactory implementation="consulo.language.impl.internal.ast.DefaultASTLeafFactory" order="last"/>
    <lang.ast.compositeFactory implementation="consulo.language.impl.internal.ast.DefaultASTCompositeFactory" order="last"/>
    <lang.psi.elementFactory implementation="consulo.language.impl.internal.ast.DefaultPsiElementFactory" order="last"/>
    <iconDescriptorUpdater implementation="consulo.compiler.impl.CompilerIconDescriptorUpdater"/>

    <directoryIndexExcludePolicy implementation="com.intellij.openapi.roots.impl.ExcludeCompilerOutputPolicy"/>
    <compiler implementation="com.intellij.packaging.impl.compiler.ArtifactsCompiler" id="artifactsCompiler" order="last"/>
    <compiler implementation="com.intellij.compiler.impl.resourceCompiler.ResourceCompiler" id="resourceCompiler"/>
    <projectService serviceInterface="consulo.compiler.impl.resourceCompiler.ResourceCompilerConfiguration"
                    serviceImplementation="consulo.compiler.impl.resourceCompiler.ResourceCompilerConfiguration"/>

    <projectConfigurable parentId="project.propCompiler"
                         instance="consulo.compiler.impl.resourceCompiler.ResourceCompilerConfigurable"
                         key="resource.compiler.description" bundle="consulo.compiler.CompilerBundle"/>


    <search.topHitProvider implementation="com.intellij.platform.DefaultPlatformTopHitProvider"/>
    <search.topHitProvider implementation="com.intellij.ide.ui.UISimpleSettingsProvider"/>

    <applicationService serviceInterface="consulo.language.editor.inspection.scheme.InspectionProfileManager"
                        serviceImplementation="com.intellij.profile.codeInspection.InspectionProfileManagerImpl"/>

    <applicationService serviceInterface="com.intellij.execution.filters.HyperlinkInfoFactory"
                        serviceImplementation="com.intellij.execution.filters.impl.HyperlinkInfoFactoryImpl"/>
    <consoleFilterProvider implementation="com.intellij.execution.filters.UrlFilter$UrlFilterProvider"/>

    <schemeOwner serviceInterface="consulo.language.editor.inspection.scheme.InspectionProfileManager"/>

    <projectService serviceInterface="com.intellij.codeInsight.daemon.impl.analysis.HighlightingLevelManager"
                    serviceImplementation="com.intellij.codeInsight.daemon.impl.analysis.HighlightingSettingsPerFile"/>

    <projectService serviceImplementation="consulo.project.UnknownFeaturesCollector"/>
    <backgroundPostStartupActivity implementation="com.intellij.ide.plugins.pluginsAdvertisement.PluginsAdvertiser"/>
    <backgroundPostStartupActivity implementation="consulo.project.impl.ReopenProjectToolWindowActivity"/>

    <moduleService serviceInterface="consulo.compiler.ModuleCompilerPathsManager"
                   serviceImplementation="consulo.compiler.impl.ModuleCompilerPathsManagerImpl"/>

    <qualifiedNameProvider implementation="consulo.ide.actions.DefaultPackageQualifiedNameProvider" id="defaultPackage" order="last"/>

    <pathMacroExpendableProtocol protocol="zip"/>

    <projectService serviceInterface="consulo.module.extension.ModuleExtensionHelper"
                    serviceImplementation="consulo.module.impl.internal.extension.ModuleExtensionHelperImpl"/>

    <contentFolderTypeProvider implementation="consulo.language.content.ProductionContentFolderTypeProvider"/>
    <contentFolderTypeProvider implementation="consulo.language.content.ProductionResourceContentFolderTypeProvider"/>
    <contentFolderTypeProvider implementation="consulo.language.content.TestContentFolderTypeProvider"/>
    <contentFolderTypeProvider implementation="consulo.language.content.TestResourceContentFolderTypeProvider"/>
    <contentFolderTypeProvider implementation="consulo.roots.impl.WebResourcesFolderTypeProvider"/>
    <contentFolderTypeProvider implementation="consulo.content.base.ExcludedContentFolderTypeProvider"/>

    <contentFolderPropertyProvider implementation="consulo.roots.impl.property.GeneratedContentFolderPropertyProvider"/>

    <generatedSourcesFilter implementation="consulo.roots.impl.property.GeneratedOnRootSourcesFilter"/>
    <testSourcesFilter implementation="com.intellij.openapi.roots.ProjectRootTestSourcesFilter"/>
    <defaultHighlightingSettingProvider implementation="com.intellij.codeInsight.daemon.impl.analysis.GeneratedSourcesHighlightingSettingProvider"/>
    <editorNotificationProvider implementation="com.intellij.ide.GeneratedFileEditingNotificationProvider"/>

    <actionPromoter implementation="com.intellij.ui.EditorTextFieldActionPromoter"/>
    <actionPromoter implementation="com.intellij.ui.ToolbarDecoratorActionPromoter"/>
    <actionPromoter implementation="com.intellij.openapi.vcs.actions.VcsActionPromoter"/>

    <elementPreviewProvider implementation="com.intellij.codeInsight.preview.ElementPreviewHintProvider"/>

    <copyPastePostProcessor implementation="com.intellij.openapi.editor.richcopy.TextWithMarkupProcessor"/>
    <!--the following binding uses 'first' order to make sure it captures raw text before any other processor modifies it -->
    <copyPastePreProcessor implementation="com.intellij.openapi.editor.richcopy.TextWithMarkupProcessor$RawTextSetter" order="first" id="richcopy"/>

    <newModuleBuilder implementation="consulo.ide.impl.EmptyNewModuleBuilder"/>

    <backspaceHandlerDelegate implementation="com.intellij.codeInsight.editorActions.SimpleIndentingBackspaceHandler"/>
    <backspaceHandlerDelegate implementation="com.intellij.codeInsight.editorActions.SmartIndentingBackspaceHandler"/>

    <addModuleDependencyActionProvider implementation="consulo.roots.ui.configuration.classpath.FileOrDirectoryDependencyActionProvider"/>
    <addModuleDependencyActionProvider implementation="consulo.roots.ui.configuration.classpath.ModuleDependencyActionProvider"/>
    <addModuleDependencyActionProvider implementation="consulo.roots.ui.configuration.classpath.ProjectLibraryActionProvider"/>

    <fileIndentOptionsProvider implementation="consulo.ide.impl.psi.codeStyle.DetectableIndentOptionsProvider" order="last"/>

    <predefinedBundlesProvider implementation="consulo.bundle.impl.DefaultPredefinedBundlesProvider" order="first"/>

    <moduleRootsProcessor implementation="consulo.module.impl.internal.layer.NullModuleDirModuleRootsProcessor" order="last"/>

    <targetElementUtilEx implementation="consulo.codeInsight.DefaultTargetElementUtilExtender" order="last"/>

    <bidiRegionsSeparator language="" implementationClass="com.intellij.openapi.editor.bidi.PlainTextBidiRegionsSeparator"/>

    <additionalTextAttributes scheme="Default" file="/colorSchemes/ext/FindViewColorsScheme.xml"/>
    <additionalTextAttributes scheme="Darcula" file="/colorSchemes/ext/FindViewColorsScheme.xml"/>

    <getDataRule implementation="com.intellij.openapi.vcs.VirtualFileStreamRule"/>
    <getDataRule implementation="com.intellij.openapi.vcs.history.VcsRevisionNumberArrayRule"/>
    <getDataRule implementation="com.intellij.openapi.vcs.changes.VcsChangesSelectionRule"/>

    <orderEntryType implementation="consulo.module.impl.internal.layer.orderEntry.LibraryOrderEntryType"/>
    <orderEntryType implementation="consulo.module.impl.internal.layer.orderEntry.ModuleExtensionWithSdkOrderEntryType"/>
    <orderEntryType implementation="consulo.module.impl.internal.layer.orderEntry.ModuleLibraryOrderEntryType"/>
    <orderEntryType implementation="consulo.module.impl.internal.layer.orderEntry.ModuleOrderEntryType"/>
    <orderEntryType implementation="consulo.module.impl.internal.layer.orderEntry.ModuleSourceOrderEntryType"/>

    <orderEntryTypeEditor key="library" implementationClass="consulo.roots.orderEntry.LibraryOrderEntryTypeEditor"/>
    <orderEntryTypeEditor key="module-extension-sdk" implementationClass="consulo.roots.orderEntry.ModuleExtensionWithSdkOrderEntryTypeEditor"/>
    <orderEntryTypeEditor key="module-library" implementationClass="consulo.roots.orderEntry.ModuleLibraryOrderEntryTypeEditor"/>
    <orderEntryTypeEditor key="module" implementationClass="consulo.roots.orderEntry.ModuleOrderEntryTypeEditor"/>
    <orderEntryTypeEditor key="sourceFolder" implementationClass="consulo.roots.orderEntry.ModuleSourceOrderEntryTypeEditor"/>

    <writingAccessProvider implementation="com.intellij.openapi.fileEditor.impl.NonProjectFileWritingAccessProvider" order="first"/>

    <customFileDropHandler implementation="com.intellij.openapi.vcs.changes.patch.PatchFileDropHandler"/>

    <vcs.ignoredFileProvider implementation="com.intellij.openapi.vcs.changes.ChangeListManagerImpl$DefaultIgnoredFileProvider" order="last"/>
    <vcs.ignoredFileProvider implementation="consulo.configurationStore.vcs.StoreIgnoredFileProvider"/>

    <stripTrailingSpacesFilterFactory implementation="consulo.ide.impl.psi.codeStyle.KeepTrailingSpacesOnEmptyLinesFilterFactory"/>

    <lineIndentProvider
        implementation="consulo.ide.impl.psi.impl.source.codeStyle.lineIndent.FormatterBasedLineIndentProvider"
        order="last"/>

    <projectService serviceInterface="com.intellij.execution.dashboard.RunDashboardManager"
                    serviceImplementation="com.intellij.execution.dashboard.RunDashboardManagerImpl"/>
    <runDashboardGroupingRule implementation="com.intellij.execution.dashboard.tree.ConfigurationTypeDashboardGroupingRule"/>
    <runDashboardGroupingRule implementation="com.intellij.execution.dashboard.tree.StatusDashboardGroupingRule"/>
    <runDashboardGroupingRule implementation="com.intellij.execution.dashboard.tree.FolderDashboardGroupingRule"/>
    <runDashboardGroupingRule implementation="com.intellij.execution.dashboard.tree.RunConfigurationDashboardGroupingRule"/>

    <editorActionHandler action="EditorEscape" implementationClass="com.intellij.refactoring.changeSignature.inplace.EscapeHandler" id="changeSignatureEscape"
                         order="before hide-search"/>

    <idIndexer filetype="PLAIN_TEXT" implementationClass="consulo.ide.impl.psi.impl.cache.impl.id.PlainTextIndexer"/>
    <todoIndexer filetype="PLAIN_TEXT" implementationClass="consulo.ide.impl.psi.impl.cache.impl.todo.PlainTextTodoIndexer"/>

    <textEditorHighlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.GeneralHighlightingPassFactory"/>
    <textEditorHighlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.ChameleonSyntaxHighlightingPass$Factory"/>
    <textEditorHighlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.InjectedGeneralHighlightingPassFactory"/>
    <textEditorHighlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.LineMarkersPassFactory"/>
    <textEditorHighlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.ShowIntentionsPassFactory"/>
    <textEditorHighlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.IdentifierHighlighterPassFactory"/>
    <textEditorHighlightingPassFactory implementation="com.intellij.refactoring.changeSignature.inplace.ChangeSignaturePassFactory"/>
    <textEditorHighlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.CodeFoldingPassFactory"/>
    <!--<textEditorHighlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.focusMode.FocusModePassFactory"/>-->
    <textEditorHighlightingPassFactory implementation="com.intellij.codeInsight.hints.ParameterHintsPassFactory"/>
    <textEditorHighlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.IndentsPassFactory"/>
    <textEditorHighlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.InjectedCodeFoldingPassFactory"/>
    <textEditorHighlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.LocalInspectionsPassFactory"/>
    <textEditorHighlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.ShowAutoImportPassFactory"/>

    <textEditorHighlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.WholeFileLocalInspectionsPassFactory"/>
    <textEditorHighlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.ExternalToolPassFactory"/>
    <textEditorHighlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.WolfPassFactory"/>


    <applicationService serviceImplementation="com.intellij.ide.ScreenReaderSupportHandler" lazy="false"/>

    <projectService serviceInterface="consulo.language.editor.wolfAnalyzer.WolfTheProblemSolver" serviceImplementation="com.intellij.codeInsight.problems.WolfTheProblemSolverImpl" lazy="false"/>

    <lang.formatter.restriction implementation="com.intellij.formatting.ExcludedFileFormattingRestriction"/>

    <codeStyleIndentHelperExtension implementation="consulo.psi.impl.source.codeStyle.DefaultIndentHelperExtension" order="last"/>

    <intentionMenuContributor implementation="com.intellij.codeInsight.daemon.impl.DoNotShowInspectionIntentionMenuContributor"/>
    <intentionMenuContributor implementation="com.intellij.codeInsight.daemon.impl.GutterIntentionMenuContributor"/>
    <intentionMenuContributor implementation="com.intellij.codeInsight.daemon.impl.CleanupIntentionMenuContributor"/>

    <applicationService serviceImplementation="com.intellij.openapi.editor.impl.EditorMouseHoverPopupControl"/>
    <applicationService serviceImplementation="com.intellij.openapi.editor.EditorMouseHoverPopupManager"/>

    <editorFactoryMouseListener implementation="com.intellij.openapi.editor.EditorMouseHoverPopupManager$MyEditorMouseEventListener"/>
    <editorFactoryMouseMotionListener implementation="com.intellij.openapi.editor.EditorMouseHoverPopupManager$MyEditorMouseMotionEventListener"/>

    <applicationService serviceInterface="consulo.application.AsyncExecutionService" serviceImplementation="com.intellij.openapi.application.impl.AsyncExecutionServiceImpl"/>

    <projectService serviceImplementation="com.intellij.codeInsight.daemon.impl.ErrorStripeUpdateManager"/>
    <projectService serviceInterface="consulo.language.editor.AutoPopupController" serviceImplementation="com.intellij.codeInsight.AutoPopupControllerImpl"/>
    <daemon.tooltipActionProvider order="last" id="defaultProvider" implementation="com.intellij.codeInsight.daemon.impl.DaemonTooltipActionProvider"/>

    <fileBasedIndex.providedLocator implementation="com.intellij.index.BasicProvidedExtensionLocator"/>

    <vfs.asyncListener implementation="com.intellij.openapi.fileEditor.impl.FileDocumentManagerImpl$MyAsyncFileListener"/>
    <vfs.asyncListener implementation="com.intellij.util.indexing.FileBasedIndexImpl$ChangedFilesCollector"/>

    <applicationService serviceInterface="consulo.ide.impl.psi.search.FileNameIndexService" serviceImplementation="consulo.ide.impl.psi.search.FileNameIndexServiceImpl"/>

    <vfs.asyncListener implementation="com.intellij.openapi.vfs.impl.VirtualFilePointerManagerImpl$MyAsyncFileListener"/>

    <projectService serviceImplementation="consulo.language.inject.impl.internal.ConcatenationInjectorManager"/>

    <dateTimeFormatter id="vcs.annotate" name="VCS Annotate"/>
    <dateTimeFormatter id="vcs.log" name="VCS Log"/>

    <applicationService serviceImplementation="com.intellij.util.text.DateTimeFormatManager"/>

    <applicationService serviceInterface="consulo.document.DocumentReferenceManager" serviceImplementation="com.intellij.openapi.command.impl.DocumentReferenceManagerImpl"
                        lazy="false"/>

    <applicationService serviceInterface="consulo.codeEditor.action.TabOutScopesTracker" serviceImplementation="com.intellij.codeInsight.editorActions.TabOutScopesTrackerImpl"/>

    <applicationService serviceInterface="consulo.language.codeStyle.Formatter" serviceImplementation="com.intellij.formatting.FormatterImpl"/>
    <applicationService serviceInterface="com.intellij.util.gist.GistManager" serviceImplementation="com.intellij.util.gist.GistManagerImpl"/>

    <editorFactoryDocumentListener implementation="com.intellij.openapi.command.impl.DocumentUndoProvider"/>

    <vfs.asyncListener implementation="consulo.compiler.impl.TranslationCompilerFilesMonitorVfsListener"/>
    <vfs.asyncListener implementation="consulo.module.impl.internal.ContentEntryFileListener"/>

    <applicationService serviceInterface="consulo.compiler.impl.TranslatingCompilerFilesMonitor" serviceImplementation="com.intellij.compiler.impl.TranslatingCompilerFilesMonitorImpl"/>
    <projectService serviceImplementation="consulo.compiler.impl.TranslationCompilerProjectMonitor"/>

    <cachesInvalidator implementation="com.intellij.compiler.impl.TranslatingCompilerFilesMonitorImpl$MonitorCachesInvalidator"/>

    <cachesInvalidator implementation="consulo.vfs.newvfs.persistent.FSCachesInvalidator"/>

    <applicationService serviceInterface="consulo.project.ProjectManager" serviceImplementation="com.intellij.openapi.project.impl.ProjectManagerImpl"/>
    <projectService serviceInterface="consulo.module.ModuleManager" serviceImplementation="com.intellij.openapi.module.impl.ModuleManagerComponent"/>
    <applicationService serviceInterface="consulo.virtualFileSystem.pointer.VirtualFilePointerManager" serviceImplementation="com.intellij.openapi.vfs.impl.VirtualFilePointerManagerImpl"/>

    <applicationService serviceInterface="consulo.codeEditor.action.TypedAction" serviceImplementation="com.intellij.openapi.editor.impl.TypedActionImpl"/>

    <editorFactoryListener implementation="com.intellij.codeInsight.daemon.impl.EditorTracker$MyAppLevelEditorFactoryListener"/>

    <projectService serviceImplementation="com.intellij.openapi.vcs.changes.committed.OutdatedVersionNotifier" lazy="false"/>
    <projectService serviceImplementation="com.intellij.openapi.vcs.changes.committed.IncomingChangesIndicator" lazy="false"/>
    <projectService serviceImplementation="consulo.ide.impl.psi.impl.file.impl.PsiVFSListener" lazy="false"/>
    <postStartupActivity id="vfsStartup" implementation="consulo.ide.impl.psi.impl.file.impl.PsiVFSListener$MyStartUpActivity" order="first"/>

    <searchEverywhereContributor implementation="com.intellij.ide.actions.searcheverywhere.ClassSearchEverywhereContributor$Factory"/>
    <searchEverywhereContributor implementation="com.intellij.ide.actions.searcheverywhere.FileSearchEverywhereContributor$Factory"/>
    <searchEverywhereContributor implementation="com.intellij.ide.actions.searcheverywhere.SymbolSearchEverywhereContributor$Factory"/>
    <searchEverywhereContributor implementation="com.intellij.ide.actions.searcheverywhere.ActionSearchEverywhereContributor$Factory"/>

    <searchEverywhereResultsEqualityProvider implementation="com.intellij.ide.actions.searcheverywhere.PsiElementsEqualityProvider"/>
    <searchEverywhereResultsEqualityProvider implementation="com.intellij.ide.actions.searcheverywhere.TrivialElementsEqualityProvider"/>

    <projectService serviceImplementation="com.intellij.ide.util.gotoByName.SearchEverywhereConfiguration"/>
    <projectService serviceInterface="com.intellij.ide.actions.searcheverywhere.SearchEverywhereManager" serviceImplementation="com.intellij.ide.actions.searcheverywhere.SearchEverywhereManagerImpl"/>

    <fileBreadcrumbsCollector implementation="com.intellij.ui.breadcrumbs.PsiFileBreadcrumbsCollector"/>

    <projectService serviceImplementation="com.intellij.ide.actions.runAnything.RunAnythingManager"/>
    <projectService serviceImplementation="com.intellij.ide.actions.runAnything.RunAnythingContextRecentDirectoryCache"/>
    <projectService serviceImplementation="com.intellij.ide.actions.runAnything.RunAnythingCache"/>

    <runAnything.executionProvider id="RunAnythingRunConfigurationProvider"
                                   implementation="com.intellij.ide.actions.runAnything.RunAnythingRunConfigurationProvider"/>
    <runAnything.executionProvider implementation="com.intellij.ide.actions.runAnything.activity.RunAnythingRecentProjectProvider"/>
    <runAnything.executionProvider id="recentCommandProvider" implementation="com.intellij.ide.actions.runAnything.activity.RunAnythingRecentCommandProvider"
                                   order="last"/>
    <runAnything.executionProvider implementation="com.intellij.ide.actions.runAnything.activity.RunAnythingCommandExecutionProvider"
                                   order="last"/>

    <applicationService serviceImplementation="com.intellij.execution.wsl.WSLDistributionService"/>

    <applicationService serviceImplementation="com.intellij.internal.statistic.updater.StatisticsSendManager" lazy="false"/>

    <findInProjectSearchEngine implementation="com.intellij.find.impl.IdeaIndexBasedFindInProjectSearchEngine"/>

    <projectService serviceImplementation="com.intellij.openapi.vcs.update.RestoreUpdateTree"/>

    <postStartupActivity implementation="com.intellij.openapi.vcs.update.RestoreUpdateTree$MyStartUpActivity"/>

    <projectService serviceInterface="consulo.execution.RunManager" serviceImplementation="com.intellij.execution.impl.RunManagerImpl"/>
    <applicationService serviceInterface="consulo.execution.internal.ExecutionDataContextCacher" serviceImplementation="consulo.execution.impl.ExecutionDataContextCacherImpl"/>

    <projectService serviceImplementation="com.intellij.openapi.wm.impl.status.widget.StatusBarWidgetsManager"/>
    <applicationService serviceImplementation="com.intellij.openapi.wm.impl.status.widget.StatusBarWidgetSettings"/>

    <statusBarWidgetFactory id="positionWidget" implementation="com.intellij.openapi.wm.impl.status.PositionPanelWidgetFactory"/>
    <statusBarWidgetFactory id="lineSeparatorWidget" implementation="com.intellij.openapi.wm.impl.status.LineSeparatorWidgetFactory" order="after positionWidget"/>
    <statusBarWidgetFactory id="encodingWidget" implementation="com.intellij.openapi.wm.impl.status.EncodingPanelWidgetFactory" order="after lineSeparatorWidget"/>
    <!--TODO <statusBarWidgetFactory id="largeFileEncodingWidget" implementation="com.intellij.largeFilesEditor.encoding.LargeFileEncodingWidgetFactory" order="after encodingWidget"/> -->
    <statusBarWidgetFactory id="moduleLayerWidget" implementation="consulo.wm.impl.status.ModuleLayerWidgetFactory" order=" after encodingWidget"/>
    <statusBarWidgetFactory id="selectionModeWidget" implementation="com.intellij.openapi.wm.impl.status.ColumnSelectionModeWidgetFactory" order="after moduleLayerWidget"/>
    <statusBarWidgetFactory id="codeStyleWidget" implementation="consulo.ide.impl.psi.codeStyle.statusbar.CodeStyleStatusBarWidgetFactory" order="after selectionModeWidget"/>
    <statusBarWidgetFactory id="readOnlyWidget" implementation="com.intellij.openapi.wm.impl.status.ReadOnlyAttributeWidgetFactory" order="after codeStyleWidget"/>
    <statusBarWidgetFactory id="inspectionProfileWidget" implementation="com.intellij.openapi.wm.impl.status.InspectionProfileWidgetFactory" order="after readOnlyWidget"/>
    <statusBarWidgetFactory id="notificationsWidget" implementation="com.intellij.notification.impl.widget.NotificationWidgetFactory" order="after inspectionProfileWidget"/>
    <statusBarWidgetFactory id="fatalErrorWidget" implementation="com.intellij.openapi.wm.impl.status.FatalErrorWidgetFactory" order="after notificationsWidget"/>
    <statusBarWidgetFactory id="writeActionWidget" implementation="com.intellij.openapi.wm.impl.status.WriteThreadIndicatorWidgetFactory" order="after fatalErrorWidget"/>
    <statusBarWidgetFactory id="memoryUsageWidget" implementation="com.intellij.openapi.wm.impl.status.MemoryIndicatorWidgetFactory" order="last"/>

    <projectService serviceInterface="consulo.language.codeStyle.internal.CodeStyleCachingService"
                    serviceImplementation="com.intellij.application.options.codeStyle.cache.CodeStyleCachingServiceImpl"/>

    <projectService serviceImplementation="com.intellij.ide.favoritesTreeView.FavoritesManager"/>
    <applicationService serviceInterface="consulo.application.macro.PathMacros" serviceImplementation="consulo.application.impl.internal.macro.PathMacrosImpl"/>

    <projectService serviceInterface="com.intellij.build.BuildContentManager"
                    serviceImplementation="com.intellij.build.BuildContentManagerImpl"/>
    <projectService serviceInterface="com.intellij.build.BuildViewManager"
                    serviceImplementation="com.intellij.build.BuildViewManager"/>
    <projectService serviceInterface="com.intellij.build.SyncViewManager"
                    serviceImplementation="com.intellij.build.SyncViewManager"/>
    <projectService serviceInterface="com.intellij.build.BuildWorkspaceConfiguration"
                    serviceImplementation="consulo.compiler.impl.build.BuildWorkspaceConfigurationImpl"/>

    <applicationService serviceInterface="consulo.ui.ex.awt.SuitableFontProvider" serviceImplementation="com.intellij.ui.SuitableFontProviderImpl"/>

    <settingsEntryPointActionProvider implementation="com.intellij.openapi.updateSettings.impl.UpdateSettingsEntryPointActionProvider"/>

    <fileEditorProvider implementation="consulo.ide.plugins.whatsNew.WhatsNewVirtualFileEditorProvider"/>
    <editorTabColorProvider implementation="consulo.ide.plugins.whatsNew.WhatsNewEditorTabColorProvider"/>
    <postStartupActivity implementation="consulo.ide.plugins.whatsNew.WhatsNewStartupActivity" order="after OpenFilesActivity"/>

    <fileEditorProvider implementation="consulo.execution.ui.editor.RunConfigurationFileEditorProvider"/>
    <eapDescriptor implementation="consulo.execution.ui.editor.RunConfigurationFileEditorEarlyAccessDescriptor"/>
    <editorTabColorProvider implementation="consulo.execution.ui.editor.RunConfigurationEditorTabColorProvider"/>

    <fileTypeOverrider implementation="com.intellij.openapi.file.exclude.UserFileTypeOverrider"/>
    <applicationService serviceImplementation="com.intellij.openapi.file.exclude.OverrideFileTypeManager"/>

    <projectService serviceInterface="consulo.module.content.DirectoryIndex" serviceImplementation="com.intellij.openapi.roots.impl.DirectoryIndexImpl"/>

    <projectService serviceImplementation="com.intellij.execution.impl.ProjectRunConfigurationManager"/>
    <postStartupActivity implementation="com.intellij.execution.impl.ProjectRunConfigurationManager$MyStartupActivity"/>

    <projectService serviceInterface="com.intellij.codeInsight.folding.CodeFoldingManager" serviceImplementation="com.intellij.codeInsight.folding.impl.CodeFoldingManagerImpl"/>

    <applicationService serviceInterface="consulo.application.HelpManager" serviceImplementation="consulo.application.ui.impl.HelpManagerImpl"/>

    <applicationService serviceInterface="consulo.process.DefaultCharsetProvider" serviceImplementation="consulo.process.impl.DefaultCharsetProviderImpl"/>
    <applicationService serviceInterface="consulo.project.ui.notification.internal.NotificationActionInvoker"
                        serviceImplementation="consulo.project.ui.notification.impl.NotificationActionInvokerImpl"/>
    <applicationService serviceInterface="consulo.virtualFileSystem.RawFileLoader" serviceImplementation="consulo.virtualFileSystem.impl.internal.RawFileLoaderImpl"/>
    <projectService serviceInterface="consulo.language.impl.internal.psi.FormattingService" serviceImplementation="consulo.ide.impl.language.psi.FormattingServiceImpl"/>
    <projectService serviceInterface="consulo.fileEditor.OpenFileDescriptorFactory" serviceImplementation="consulo.ide.impl.fileEditor.OpenFileDescriptorFactoryImpl"/>

    <applicationService serviceInterface="consulo.ui.ex.util.InvokerFactory" serviceImplementation="consulo.ide.ui.ex.impl.util.InvokerFactoryImpl"/>
    <applicationService serviceInterface="consulo.component.store.impl.internal.StorageNotificationService" serviceImplementation="consulo.ide.impl.store.IdeStorageNotificationService"/>
    <applicationService serviceInterface="consulo.codeEditor.internal.EditorInternalHelper" serviceImplementation="consulo.ide.impl.language.IdeEditorInternalHelper"/>
    <projectService serviceInterface="consulo.language.codeStyle.PostprocessReformattingAspect" serviceImplementation="consulo.ide.impl.psi.impl.source.PostprocessReformattingAspectImpl"
                    lazy="false"/>

    <psiReferenceLocalFixProvider implementation="consulo.language.editor.impl.internal.psi.path.FileReferenceLocalQuickFixProvider"/>
    <psiReferenceLocalFixProvider implementation="consulo.language.editor.impl.internal.inspection.DefaultPsiReferenceLocalQuickFixProvider"/>
    <psiReferenceLocalFixProvider implementation="consulo.language.editor.impl.internal.psi.path.PsiDynaReferenceLocalQuickFixProvider"/>

    <applicationService serviceInterface="consulo.language.impl.parser.GeneratedParserUtilBase$PrefixMatcher"
                        serviceImplementation="consulo.language.editor.impl.internal.parser.ParserCamelCaseMatcherPrefixMatcher"/>

    <applicationService serviceInterface="consulo.language.editor.ui.PsiElementListNavigator" serviceImplementation="consulo.ide.impl.language.editor.PsiElementListNavigatorImpl"/>
    <applicationService serviceInterface="consulo.language.editor.rawHighlight.internal.HighlightInfoFactory"
                        serviceImplementation="consulo.ide.impl.language.editor.rawHighlight.HighlightInfoFactoryImpl"/>

    <applicationService serviceInterface="consulo.ui.ex.AppIcon" serviceImplementation="consulo.ide.impl.AppIconImpl"/>
    <applicationService serviceInterface="consulo.execution.test.internal.TestStatusBarProgressFactory" serviceImplementation="consulo.ide.impl.TestStatusBarProgressFactoryImpl"/>

    <projectService serviceInterface="consulo.fileEditor.EditorHistoryManager" serviceImplementation="com.intellij.openapi.fileEditor.impl.EditorHistoryManagerImpl"/>
    <projectService serviceInterface="consulo.execution.RunConfigurationEditor" serviceImplementation="consulo.ide.impl.execution.RunConfigurationEditorImpl"/>

    <applicationService serviceInterface="consulo.content.impl.internal.GlobalLibraryRootListenerProvider" serviceImplementation="consulo.module.impl.internal.GlobalLibraryRootListenerProviderImpl"/>
    <applicationService serviceInterface="consulo.codeEditor.EditorPopupHelper" serviceImplementation="consulo.ide.impl.codeEditor.EditorPopupHelperImpl"/>
    <applicationService serviceInterface="consulo.content.bundle.SdkModelFactory" serviceImplementation="consulo.ide.impl.IdeSdkModelFactory"/>
  </extensions>

  <applicationListeners>
    <listener class="com.intellij.util.gist.GistManagerImpl$MyBulkFileListener" topic="consulo.virtualFileSystem.event.BulkFileListener"/>
    <listener class="com.intellij.compiler.impl.TranslatingCompilerFilesMonitorImpl$ProjectListener" topic="consulo.project.event.ProjectManagerListener"/>
  </applicationListeners>

  <projectListeners>
    <listener class="com.intellij.openapi.vfs.newvfs.impl.CachedFileType$PsiListener" topic="consulo.language.psi.PsiModificationTracker$Listener"/>
    <listener class="consulo.module.impl.internal.ExtensionListenerByLayerListenerInvoker" topic="consulo.module.content.layer.event.ModuleRootLayerListener"/>
  </projectListeners>
</consulo-plugin>
