<!--
  - Copyright 2013-2016 consulo.io
  -
  - Licensed under the Apache License, Version 2.0 (the "License");
  - you may not use this file except in compliance with the License.
  - You may obtain a copy of the License at
  -
  - http://www.apache.org/licenses/LICENSE-2.0
  -
  - Unless required by applicable law or agreed to in writing, software
  - distributed under the License is distributed on an "AS IS" BASIS,
  - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  - See the License for the specific language governing permissions and
  - limitations under the License.
  -->
<consulo-plugin>
  <project-components>
    <component>
      <interface-class>consulo.undoRedo.ProjectUndoManager</interface-class>
      <implementation-class>consulo.command.undo.impl.ProjectUndoManagerImpl</implementation-class>
    </component>

    <component>
      <interface-class>consulo.virtualFileSystem.status.FileStatusManager</interface-class>
      <implementation-class>consulo.virtualFileSystem.status.impl.internal.FileStatusManagerImpl</implementation-class>
      <loadForDefaultProject/>
    </component>

    <component>
      <interface-class>com.intellij.ui.EditorNotifications</interface-class>
      <implementation-class>com.intellij.ui.EditorNotificationsImpl</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.notification.impl.NotificationsManagerImpl$ProjectNotificationsComponent</implementation-class>
      <skipForDefaultProject/>
    </component>

    <component>
      <interface-class>com.intellij.openapi.fileEditor.ex.IdeDocumentHistory</interface-class>
      <implementation-class>com.intellij.openapi.fileEditor.impl.IdeDocumentHistoryImpl</implementation-class>
    </component>

    <component>
      <interface-class>consulo.language.editor.highlight.HighlightManager</interface-class>
      <implementation-class>com.intellij.codeInsight.highlighting.HighlightManagerImpl</implementation-class>
    </component>

    <component>
      <interface-class>consulo.module.content.ProjectRootManager</interface-class>
      <implementation-class>com.intellij.openapi.roots.impl.ProjectRootManagerComponent</implementation-class>
      <loadForDefaultProject/>
    </component>

    <component>
      <interface-class>consulo.language.psi.PsiManager</interface-class>
      <implementation-class>consulo.ide.impl.language.psi.IdePsiManagerImpl</implementation-class>
      <loadForDefaultProject/>
    </component>

    <component>
      <interface-class>consulo.language.psi.PsiDocumentManager</interface-class>
      <implementation-class>consulo.ide.impl.psi.impl.PsiDocumentManagerImpl</implementation-class>
      <loadForDefaultProject/>
    </component>

    <component>
      <interface-class>consulo.language.pom.TreeAspect</interface-class>
      <implementation-class>consulo.language.pom.TreeAspect</implementation-class>
      <loadForDefaultProject/>
    </component>

    <component>
      <interface-class>consulo.language.editor.DaemonCodeAnalyzer</interface-class>
      <implementation-class>com.intellij.codeInsight.daemon.impl.DaemonCodeAnalyzerImpl</implementation-class>
      <loadForDefaultProject/>
    </component>
    <component>
      <implementation-class>com.intellij.codeInsight.daemon.impl.DaemonListeners</implementation-class>
      <option name="workspace" value="true"/>
      <!--<loadForDefaultProject/>-->
    </component>

    <component>
      <implementation-class>com.intellij.util.indexing.FileBasedIndexProjectHandler</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.codeInsight.navigation.CtrlMouseHandler</interface-class>
      <implementation-class>com.intellij.codeInsight.navigation.CtrlMouseHandler</implementation-class>
      <skipForDefaultProject/>
    </component>

    <component>
      <interface-class>com.intellij.pom.wrappers.PsiEventWrapperAspect</interface-class>
      <implementation-class>com.intellij.pom.wrappers.PsiEventWrapperAspect</implementation-class>
      <loadForDefaultProject/>
    </component>

    <component>
      <implementation-class>com.intellij.openapi.vcs.changes.VcsEventWatcher</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.roots.impl.PushedFilePropertiesUpdater</interface-class>
      <implementation-class>com.intellij.openapi.roots.impl.PushedFilePropertiesUpdaterImpl</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.openapi.vcs.impl.ModuleVcsDetector</implementation-class>
    </component>

    <component>
      <interface-class>consulo.language.editor.inspection.scheme.InspectionProjectProfileManager</interface-class>
      <implementation-class>com.intellij.profile.codeInspection.InspectionProjectProfileManagerImpl</implementation-class>
      <loadForDefaultProject/>
    </component>

    <component>
      <implementation-class>com.intellij.openapi.vcs.impl.VcsDirectoryMappingStorage</implementation-class>
      <skipForDefaultProject/>
    </component>
    <component>
      <interface-class>com.intellij.openapi.vcs.impl.LineStatusTrackerManagerI</interface-class>
      <implementation-class>com.intellij.openapi.vcs.impl.LineStatusTrackerManager</implementation-class>
      <option name="workspace" value="true"/>
      <skipForDefaultProject/>
    </component>
    <component>
      <interface-class>com.intellij.openapi.vcs.changes.ChangeListManager</interface-class>
      <implementation-class>com.intellij.openapi.vcs.changes.ChangeListManagerImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.openapi.vcs.changes.VcsDirtyScopeManager</interface-class>
      <implementation-class>com.intellij.openapi.vcs.changes.VcsDirtyScopeManagerImpl</implementation-class>
      <option name="workspace" value="true"/>
    </component>
    <component>
      <implementation-class>com.intellij.openapi.vcs.changes.patch.CreatePatchCommitExecutor</implementation-class>
      <option name="workspace" value="true"/>
    </component>
    <component>
      <implementation-class>com.intellij.openapi.vcs.changes.shelf.ShelveChangesManager</implementation-class>
      <option name="workspace" value="true"/>
    </component>
    <component>
      <implementation-class>com.intellij.openapi.vcs.changes.shelf.ShelvedChangesViewManager</implementation-class>
      <headless-implementation-class></headless-implementation-class>
      <option name="workspace" value="true"/>
      <skipForDefaultProject/>
    </component>
    <component>
      <implementation-class>com.intellij.openapi.vcs.changes.committed.CommittedChangesCache</implementation-class>
      <skipForDefaultProject/>
    </component>
    <component>
      <implementation-class>com.intellij.openapi.vcs.impl.VcsFileStatusProvider</implementation-class>
      <skipForDefaultProject/>
    </component>
    <component>
      <interface-class>com.intellij.openapi.vcs.impl.VcsBaseContentProvider</interface-class>
      <implementation-class>com.intellij.openapi.vcs.impl.VcsFileStatusProvider</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.openapi.vcs.contentAnnotation.VcsContentAnnotation</interface-class>
      <implementation-class>com.intellij.openapi.vcs.contentAnnotation.VcsContentAnnotationImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.openapi.vcs.contentAnnotation.ContentAnnotationCache</interface-class>
      <implementation-class>com.intellij.openapi.vcs.contentAnnotation.ContentAnnotationCacheImpl</implementation-class>
    </component>

    <component>
      <interface-class>consulo.execution.ExecutionTargetManager</interface-class>
      <implementation-class>com.intellij.execution.ExecutionTargetManagerImpl</implementation-class>
      <loadForDefaultProject/>
    </component>
    <component>
      <interface-class>consulo.execution.ExecutionManager</interface-class>
      <implementation-class>com.intellij.execution.impl.ExecutionManagerImpl</implementation-class>
    </component>
  </project-components>
</consulo-plugin>